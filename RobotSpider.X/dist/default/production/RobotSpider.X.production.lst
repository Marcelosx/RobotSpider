

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
<<<<<<< HEAD
                                                                                               Tue Apr 24 16:24:12 2018
=======
                                                                                               Wed Apr 11 16:09:00 2018
>>>>>>> parent of 9a4dca4... Int2Str Coversion

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
<<<<<<< HEAD
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F1518 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  018E                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020D                     	;# 
   146  0210                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  0394                     	;# 
   171  0395                     	;# 
   172  0396                     	;# 
   173  0FE4                     	;# 
   174  0FE5                     	;# 
   175  0FE6                     	;# 
   176  0FE7                     	;# 
   177  0FE8                     	;# 
   178  0FE9                     	;# 
   179  0FEA                     	;# 
   180  0FEB                     	;# 
   181  0FED                     	;# 
   182  0FEE                     	;# 
   183  0FEF                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  011D                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  018E                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0194                     	;# 
   242  0195                     	;# 
   243  0196                     	;# 
   244  0197                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020D                     	;# 
   257  0210                     	;# 
   258  0211                     	;# 
   259  0211                     	;# 
   260  0212                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0213                     	;# 
   264  0214                     	;# 
   265  0214                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0291                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0298                     	;# 
   278  0298                     	;# 
   279  0299                     	;# 
   280  029A                     	;# 
   281  0394                     	;# 
   282  0395                     	;# 
   283  0396                     	;# 
   284  0FE4                     	;# 
   285  0FE5                     	;# 
   286  0FE6                     	;# 
   287  0FE7                     	;# 
   288  0FE8                     	;# 
   289  0FE9                     	;# 
   290  0FEA                     	;# 
   291  0FEB                     	;# 
   292  0FED                     	;# 
   293  0FEE                     	;# 
   294  0FEF                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  0090                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  010C                     	;# 
   339  010D                     	;# 
   340  010E                     	;# 
   341  0116                     	;# 
   342  0117                     	;# 
   343  011D                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346  018E                     	;# 
   347  0191                     	;# 
   348  0191                     	;# 
   349  0192                     	;# 
   350  0193                     	;# 
   351  0193                     	;# 
   352  0194                     	;# 
   353  0195                     	;# 
   354  0196                     	;# 
   355  0197                     	;# 
   356  0199                     	;# 
   357  019A                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019C                     	;# 
   363  019C                     	;# 
   364  019D                     	;# 
   365  019E                     	;# 
   366  019F                     	;# 
   367  020D                     	;# 
   368  0210                     	;# 
   369  0211                     	;# 
   370  0211                     	;# 
   371  0212                     	;# 
   372  0212                     	;# 
   373  0213                     	;# 
   374  0213                     	;# 
   375  0214                     	;# 
   376  0214                     	;# 
   377  0215                     	;# 
   378  0215                     	;# 
   379  0215                     	;# 
   380  0216                     	;# 
   381  0216                     	;# 
   382  0217                     	;# 
   383  0217                     	;# 
   384  0291                     	;# 
   385  0291                     	;# 
   386  0292                     	;# 
   387  0293                     	;# 
   388  0298                     	;# 
   389  0298                     	;# 
   390  0299                     	;# 
   391  029A                     	;# 
   392  0394                     	;# 
   393  0395                     	;# 
   394  0396                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  0116                     	;# 
   453  0117                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  018E                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0197                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020D                     	;# 
   479  0210                     	;# 
   480  0211                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0212                     	;# 
   484  0213                     	;# 
   485  0213                     	;# 
   486  0214                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  0291                     	;# 
   496  0291                     	;# 
   497  0292                     	;# 
   498  0293                     	;# 
   499  0298                     	;# 
   500  0298                     	;# 
   501  0299                     	;# 
   502  029A                     	;# 
   503  0394                     	;# 
   504  0395                     	;# 
   505  0396                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  008D                     _RCIF	set	141
   518  008C                     _TXIF	set	140
   519  0477                     _TRISC7	set	1143
   520  0476                     _TRISC6	set	1142
   521  0474                     _TRISC4	set	1140
   522  0473                     _TRISC3	set	1139
   523  0199                     _RCREG	set	409
   524  019A                     _TXREG	set	410
   525  019B                     _SPBRG	set	411
   526  0CE9                     _OERR	set	3305
   527  0CEE                     _RX9	set	3310
   528  0CF6                     _TX9	set	3318
   529  0CEC                     _CREN	set	3308
   530  0CF5                     _TXEN	set	3317
   531  0CEF                     _SPEN	set	3311
   532  0CF4                     _SYNC	set	3316
   533  0CF2                     _BRGH	set	3314
   534  0211                     _SSPBUF	set	529
   535  0214                     _SSPSTAT	set	532
   536  0212                     _SSPADD	set	530
   537  0216                     _SSPCON2	set	534
   538  0215                     _SSPCON1	set	533
   539  10B4                     _ACKEN	set	4276
   540  10B5                     _ACKDT	set	4277
   541  10B3                     _RCEN	set	4275
   542  10B2                     _PEN	set	4274
   543  10B1                     _RSEN	set	4273
   544  10B0                     _SEN	set	4272
   545                           
   546                           	psect	stringtext1
   547  0800                     __pstringtext1:	
   548  0800                     STR_17:	
   549  0800  342F               	retlw	47	;'/'
   550  0801  342A               	retlw	42	;'*'
   551  0802  342A               	retlw	42	;'*'
   552  0803  342A               	retlw	42	;'*'
   553  0804  342A               	retlw	42	;'*'
   554  0805  342A               	retlw	42	;'*'
   555  0806  342A               	retlw	42	;'*'
   556  0807  342A               	retlw	42	;'*'
   557  0808  342A               	retlw	42	;'*'
   558  0809  342A               	retlw	42	;'*'
   559  080A  342A               	retlw	42	;'*'
   560  080B  342A               	retlw	42	;'*'
   561  080C  342A               	retlw	42	;'*'
   562  080D  342A               	retlw	42	;'*'
   563  080E  342A               	retlw	42	;'*'
   564  080F  342A               	retlw	42	;'*'
   565  0810  342A               	retlw	42	;'*'
   566  0811  342A               	retlw	42	;'*'
   567  0812  342A               	retlw	42	;'*'
   568  0813  342A               	retlw	42	;'*'
   569  0814  342A               	retlw	42	;'*'
   570  0815  342A               	retlw	42	;'*'
   571  0816  342A               	retlw	42	;'*'
   572  0817  342F               	retlw	47	;'/'
   573  0818  3420               	retlw	32	;' '
   574  0819  340A               	retlw	10
   575  081A  340A               	retlw	10
   576  081B  3400               	retlw	0
   577                           
   578                           	psect	stringtext2
   579  081C                     __pstringtext2:	
   580  081C                     STR_2:	
   581  081C  340A               	retlw	10
   582  081D  340A               	retlw	10
   583  081E  342F               	retlw	47	;'/'
   584  081F  342A               	retlw	42	;'*'
   585  0820  342A               	retlw	42	;'*'
   586  0821  342A               	retlw	42	;'*'
   587  0822  342A               	retlw	42	;'*'
   588  0823  342A               	retlw	42	;'*'
   589  0824  342A               	retlw	42	;'*'
   590  0825  342A               	retlw	42	;'*'
   591  0826  342A               	retlw	42	;'*'
   592  0827  342A               	retlw	42	;'*'
   593  0828  342A               	retlw	42	;'*'
   594  0829  342A               	retlw	42	;'*'
   595  082A  342A               	retlw	42	;'*'
   596  082B  342A               	retlw	42	;'*'
   597  082C  342A               	retlw	42	;'*'
   598  082D  342A               	retlw	42	;'*'
   599  082E  342A               	retlw	42	;'*'
   600  082F  342A               	retlw	42	;'*'
   601  0830  342A               	retlw	42	;'*'
   602  0831  342A               	retlw	42	;'*'
   603  0832  342A               	retlw	42	;'*'
   604  0833  342A               	retlw	42	;'*'
   605  0834  342A               	retlw	42	;'*'
   606  0835  342F               	retlw	47	;'/'
   607  0836  340A               	retlw	10
   608  0837  3400               	retlw	0
   609                           
   610                           	psect	stringtext3
   611  0838                     __pstringtext3:	
   612  0838                     STR_1:	
   613  0838  3463               	retlw	99	;'c'
   614  0839  346F               	retlw	111	;'o'
   615  083A  346E               	retlw	110	;'n'
   616  083B  3466               	retlw	102	;'f'
   617  083C  3469               	retlw	105	;'i'
   618  083D  3467               	retlw	103	;'g'
   619  083E  3420               	retlw	32	;' '
   620  083F  346F               	retlw	111	;'o'
   621  0840  3476               	retlw	118	;'v'
   622  0841  3465               	retlw	101	;'e'
   623  0842  3472               	retlw	114	;'r'
   624  0843  342E               	retlw	46	;'.'
   625  0844  342E               	retlw	46	;'.'
   626  0845  342E               	retlw	46	;'.'
   627  0846  3420               	retlw	32	;' '
   628  0847  340A               	retlw	10
   629  0848  3400               	retlw	0
   630                           
   631                           	psect	stringtext4
   632  0849                     __pstringtext4:	
   633  0849                     STR_15:	
   634  0849  3454               	retlw	84	;'T'
   635  084A  3465               	retlw	101	;'e'
   636  084B  346D               	retlw	109	;'m'
   637  084C  3470               	retlw	112	;'p'
   638  084D  3465               	retlw	101	;'e'
   639  084E  3472               	retlw	114	;'r'
   640  084F  3461               	retlw	97	;'a'
   641  0850  3474               	retlw	116	;'t'
   642  0851  3475               	retlw	117	;'u'
   643  0852  3472               	retlw	114	;'r'
   644  0853  3465               	retlw	101	;'e'
   645  0854  3420               	retlw	32	;' '
   646  0855  343D               	retlw	61	;'='
   647  0856  3420               	retlw	32	;' '
   648  0857  3400               	retlw	0
   649                           
   650                           	psect	stringtext5
   651  0858                     __pstringtext5:	
   652  0858                     STR_3:	
   653  0858  3441               	retlw	65	;'A'
   654  0859  3463               	retlw	99	;'c'
   655  085A  3463               	retlw	99	;'c'
   656  085B  3465               	retlw	101	;'e'
   657  085C  346C               	retlw	108	;'l'
   658  085D  342E               	retlw	46	;'.'
   659  085E  3458               	retlw	88	;'X'
   660  085F  3420               	retlw	32	;' '
   661  0860  343D               	retlw	61	;'='
   662  0861  3420               	retlw	32	;' '
   663  0862  3400               	retlw	0
   664                           
   665                           	psect	stringtext6
   666  0863                     __pstringtext6:	
   667  0863                     STR_5:	
   668  0863  3441               	retlw	65	;'A'
   669  0864  3463               	retlw	99	;'c'
   670  0865  3463               	retlw	99	;'c'
   671  0866  3465               	retlw	101	;'e'
   672  0867  346C               	retlw	108	;'l'
   673  0868  342E               	retlw	46	;'.'
   674  0869  3459               	retlw	89	;'Y'
   675  086A  3420               	retlw	32	;' '
   676  086B  343D               	retlw	61	;'='
   677  086C  3420               	retlw	32	;' '
   678  086D  3400               	retlw	0
   679                           
   680                           	psect	stringtext7
   681  086E                     __pstringtext7:	
   682  086E                     STR_7:	
   683  086E  3441               	retlw	65	;'A'
   684  086F  3463               	retlw	99	;'c'
   685  0870  3463               	retlw	99	;'c'
   686  0871  3465               	retlw	101	;'e'
   687  0872  346C               	retlw	108	;'l'
   688  0873  342E               	retlw	46	;'.'
   689  0874  345A               	retlw	90	;'Z'
   690  0875  3420               	retlw	32	;' '
   691  0876  343D               	retlw	61	;'='
   692  0877  3420               	retlw	32	;' '
   693  0878  3400               	retlw	0
   694                           
   695                           	psect	stringtext8
   696  0879                     __pstringtext8:	
   697  0879                     STR_9:	
   698  0879  3447               	retlw	71	;'G'
   699  087A  3479               	retlw	121	;'y'
   700  087B  3472               	retlw	114	;'r'
   701  087C  346F               	retlw	111	;'o'
   702  087D  342E               	retlw	46	;'.'
   703  087E  3458               	retlw	88	;'X'
   704  087F  3420               	retlw	32	;' '
   705  0880  343D               	retlw	61	;'='
   706  0881  3420               	retlw	32	;' '
   707  0882  3400               	retlw	0
   708                           
   709                           	psect	stringtext9
   710  0883                     __pstringtext9:	
   711  0883                     STR_11:	
   712  0883  3447               	retlw	71	;'G'
   713  0884  3479               	retlw	121	;'y'
   714  0885  3472               	retlw	114	;'r'
   715  0886  346F               	retlw	111	;'o'
   716  0887  342E               	retlw	46	;'.'
   717  0888  3459               	retlw	89	;'Y'
   718  0889  3420               	retlw	32	;' '
   719  088A  343D               	retlw	61	;'='
   720  088B  3420               	retlw	32	;' '
   721  088C  3400               	retlw	0
   722                           
   723                           	psect	stringtext10
   724  088D                     __pstringtext10:	
   725  088D                     STR_13:	
   726  088D  3447               	retlw	71	;'G'
   727  088E  3479               	retlw	121	;'y'
   728  088F  3472               	retlw	114	;'r'
   729  0890  346F               	retlw	111	;'o'
   730  0891  342E               	retlw	46	;'.'
   731  0892  345A               	retlw	90	;'Z'
   732  0893  3420               	retlw	32	;' '
   733  0894  343D               	retlw	61	;'='
   734  0895  3420               	retlw	32	;' '
   735  0896  3400               	retlw	0
   736                           
   737                           	psect	stringtext11
   738  0000                     __pstringtext11:	
   739  081A                     
   740                           ; #config settings
   741  0000                     
   742                           	psect	cinit
   743  07FD                     start_initialization:	
   744  07FD                     __initialization:	
   745  07FD                     end_of_initialization:	
   746                           ;End of C runtime variable initialization code
   747                           
   748  07FD                     __end_of__initialization:	
   749  07FD  0020               	movlb	0
   750  07FE  3184  2C9D         	ljmp	_main	;jump to C main() function
   751                           
   752                           	psect	cstackCOMMON
   753  0070                     __pcstackCOMMON:	
   754  0070                     ?_reverse:	
   755  0070                     ?_MPU6050_DeviceDriverTest:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_I2C_Master_Init:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_I2C_Master_Init:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_I2C_Master_Wait:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_I2C_Master_Wait:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_I2C_Master_Start:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ??_I2C_Master_Start:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_I2C_Master_Restart:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_I2C_Master_Restart:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_I2C_Master_Stop:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ??_I2C_Master_Stop:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_I2C_Master_Write:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ??_I2C_Master_Write:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_I2C_Master_Read:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ??_I2C_Master_Read:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_MPU6050_Init:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_MPU6050_Read:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_Initialize_UART:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ??_Initialize_UART:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_UART_send_char:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ??_UART_send_char:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_strlen:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_main:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0070                     ?___awdiv:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0070                     ?___awmod:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0070                     I2C_Master_Write@d:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0070                     UART_send_char@bt:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ___awdiv@divisor:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ___awmod@divisor:	
   840                           ; 2 bytes @ 0x0
   841                           
   842                           
   843                           ; 2 bytes @ 0x0
   844  0070                     	ds	1
   845  0071                     ??_MPU6050_Init:	
   846  0071                     ?_UART_send_string:	
   847                           ; 1 bytes @ 0x1
   848                           
   849  0071                     I2C_Master_Read@device:	
   850                           ; 1 bytes @ 0x1
   851                           
   852  0071                     UART_send_string@st_pt:	
   853                           ; 1 bytes @ 0x1
   854                           
   855                           
   856                           ; 2 bytes @ 0x1
   857  0071                     	ds	1
   858  0072                     ??_strlen:	
   859  0072                     I2C_Master_Read@temp:	
   860                           ; 1 bytes @ 0x2
   861                           
   862  0072                     ___awdiv@dividend:	
   863                           ; 1 bytes @ 0x2
   864                           
   865  0072                     ___awmod@dividend:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 2 bytes @ 0x2
   870  0072                     	ds	1
   871  0073                     ??_UART_send_string:	
   872                           
   873                           ; 1 bytes @ 0x3
   874  0073                     	ds	1
   875  0074                     ??___awdiv:	
   876  0074                     ??___awmod:	
   877                           ; 1 bytes @ 0x4
   878                           
   879                           
   880                           ; 1 bytes @ 0x4
   881  0074                     	ds	1
   882  0075                     ___awdiv@counter:	
   883  0075                     ___awmod@counter:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 1 bytes @ 0x5
   888  0075                     	ds	1
   889  0076                     ___awdiv@sign:	
   890  0076                     ___awmod@sign:	
   891                           ; 1 bytes @ 0x6
   892                           
   893  0076                     strlen@s:	
   894                           ; 1 bytes @ 0x6
   895                           
   896                           
   897                           ; 1 bytes @ 0x6
   898  0076                     	ds	1
   899  0077                     strlen@cp:	
   900  0077                     ___awdiv@quotient:	
   901                           ; 1 bytes @ 0x7
   902                           
   903                           
   904                           ; 2 bytes @ 0x7
   905  0077                     	ds	1
   906  0078                     ??_reverse:	
   907                           
   908                           ; 1 bytes @ 0x8
   909  0078                     	ds	1
   910  0079                     ??_MPU6050_Read:	
   911                           
   912                           ; 1 bytes @ 0x9
   913  0079                     	ds	2
   914  007B                     ?_int2str:	
   915  007B                     int2str@n:	
   916                           ; 1 bytes @ 0xB
   917                           
   918                           
   919                           ; 2 bytes @ 0xB
   920  007B                     	ds	2
   921  007D                     int2str@s:	
   922                           
   923                           ; 1 bytes @ 0xD
   924  007D                     	ds	1
   925                           
   926                           	psect	cstackBANK0
   927  0020                     __pcstackBANK0:	
   928  0020                     reverse@c:	
   929  0020                     MPU6050_Read@value_high:	
   930                           ; 1 bytes @ 0x0
   931                           
   932                           
   933                           ; 2 bytes @ 0x0
   934  0020                     	ds	1
   935  0021                     reverse@i:	
   936                           
   937                           ; 2 bytes @ 0x1
   938  0021                     	ds	1
   939  0022                     MPU6050_Read@value_low:	
   940                           
   941                           ; 1 bytes @ 0x2
   942  0022                     	ds	1
   943  0023                     MPU6050_Read@Sensor:	
   944  0023                     reverse@j:	
   945                           ; 1 bytes @ 0x3
   946                           
   947                           
   948                           ; 2 bytes @ 0x3
   949  0023                     	ds	2
   950  0025                     reverse@s:	
   951                           
   952                           ; 1 bytes @ 0x5
   953  0025                     	ds	1
   954  0026                     ??_int2str:	
   955                           
   956                           ; 1 bytes @ 0x6
   957  0026                     	ds	2
   958  0028                     int2str@sign:	
   959                           
   960                           ; 2 bytes @ 0x8
   961  0028                     	ds	2
   962  002A                     int2str@i:	
   963                           
   964                           ; 2 bytes @ 0xA
   965  002A                     	ds	2
   966  002C                     ??_MPU6050_DeviceDriverTest:	
   967                           
   968                           ; 1 bytes @ 0xC
   969  002C                     	ds	2
   970  002E                     MPU6050_DeviceDriverTest@buf:	
   971                           
   972                           ; 10 bytes @ 0xE
   973  002E                     	ds	10
   974  0038                     MPU6050_DeviceDriverTest@TestRun:	
   975                           
   976                           ; 1 bytes @ 0x18
   977  0038                     	ds	1
   978  0039                     ??_main:	
   979                           
   980                           ; 1 bytes @ 0x19
   981  0039                     	ds	2
   982                           
   983                           	psect	maintext
   984  049D                     __pmaintext:	
   985 ;;
   986 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   987 ;;
   988 ;; *************** function _main *****************
   989 ;; Defined at:
   990 ;;		line 22 in file "main.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2  162[None  ] int 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : B1F/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1008 ;;Total ram usage:        2 bytes
  1009 ;; Hardware stack levels required when called:    4
  1010 ;; This function calls:
  1011 ;;		_I2C_Master_Init
  1012 ;;		_I2C_Master_Start
  1013 ;;		_I2C_Master_Stop
  1014 ;;		_I2C_Master_Write
  1015 ;;		_Initialize_UART
  1016 ;;		_MPU6050_DeviceDriverTest
  1017 ;;		_MPU6050_Init
  1018 ;;		_UART_send_string
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _main
  1026  049D                     _main:	
  1027                           
  1028                           ;main.c: 27: I2C_Master_Init();
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1032  049D  3184  2408  3184   	fcall	_I2C_Master_Init
  1033                           
  1034                           ;main.c: 28: Initialize_UART();
  1035  04A0  3184  2412  3184   	fcall	_Initialize_UART
  1036                           
  1037                           ;main.c: 38: MPU6050_Init();
  1038  04A3  3184  2471  3184   	fcall	_MPU6050_Init
  1039  04A6                     l163:	
  1040                           ;main.c: 44: if(1){
  1041                           
  1042                           
  1043                           ;main.c: 45: I2C_Master_Start();
  1044  04A6  3183  23E7  3184   	fcall	_I2C_Master_Start
  1045                           
  1046                           ;main.c: 46: I2C_Master_Write( 0xD0 );
  1047  04A9  30D0               	movlw	208
  1048  04AA  3183  23F1  3184   	fcall	_I2C_Master_Write
  1049                           
  1050                           ;main.c: 47: I2C_Master_Write( 0x1B );
  1051  04AD  301B               	movlw	27
  1052  04AE  3183  23F1  3184   	fcall	_I2C_Master_Write
  1053                           
  1054                           ;main.c: 48: I2C_Master_Write( 0 );
  1055  04B1  3000               	movlw	0
  1056  04B2  3183  23F1  3184   	fcall	_I2C_Master_Write
  1057                           
  1058                           ;main.c: 49: I2C_Master_Write( 0 );
  1059  04B5  3000               	movlw	0
  1060  04B6  3183  23F1  3184   	fcall	_I2C_Master_Write
  1061                           
  1062                           ;main.c: 50: I2C_Master_Stop();
  1063  04B9  3183  23EC  3184   	fcall	_I2C_Master_Stop
  1064                           
  1065                           ;main.c: 51: _delay((unsigned long)((1000)*(16000000L/4000.0)));
  1066  04BC  3015               	movlw	21
  1067  04BD  0020               	movlb	0	; select bank0
  1068  04BE  00BA               	movwf	??_main+1
  1069  04BF  304B               	movlw	75
  1070  04C0  00B9               	movwf	??_main
  1071  04C1  30BE               	movlw	190
  1072  04C2                     u617:	
  1073  04C2  0B89               	decfsz	9,f
  1074  04C3  2CC2               	goto	u617
  1075  04C4  0BB9               	decfsz	??_main,f
  1076  04C5  2CC2               	goto	u617
  1077  04C6  0BBA               	decfsz	??_main+1,f
  1078  04C7  2CC2               	goto	u617
  1079  04C8  0000               	nop
  1080                           
  1081                           ;main.c: 53: UART_send_string("config over... \n");
  1082  04C9  3038               	movlw	low (STR_1| (0+32768))
  1083  04CA  00F1               	movwf	UART_send_string@st_pt
  1084  04CB  3088               	movlw	high (STR_1| (0+32768))
  1085  04CC  00F2               	movwf	UART_send_string@st_pt+1
  1086  04CD  3184  2420  3184   	fcall	_UART_send_string
  1087                           
  1088                           ;main.c: 54: }
  1089                           ;main.c: 55: if(0){
  1090  04D0  2CA6               	goto	l163
  1091  04D1                     __end_of_main:	
  1092                           ;main.c: 57: }
  1093                           ;main.c: 58: }
  1094                           ;main.c: 59: return 0;
  1095                           ;	Return value of _main is never used
  1096                           
  1097                           ;main.c: 56: MPU6050_DeviceDriverTest();
  1098                           
  1099                           
  1100                           	psect	text1
  1101  0471                     __ptext1:	
  1102 ;; *************** function _MPU6050_Init *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "MPU6050.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    2
  1125 ;; This function calls:
  1126 ;;		_I2C_Master_Start
  1127 ;;		_I2C_Master_Stop
  1128 ;;		_I2C_Master_Write
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function _MPU6050_Init
  1136  0471                     _MPU6050_Init:	
  1137                           
  1138                           ;MPU6050.c: 7: I2C_Master_Start();
  1139                           
  1140                           ;incstack = 0
  1141                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  1142  0471  3183  23E7  3184   	fcall	_I2C_Master_Start
  1143                           
  1144                           ;MPU6050.c: 8: I2C_Master_Write( 0xD0 );
  1145  0474  30D0               	movlw	208
  1146  0475  3183  23F1  3184   	fcall	_I2C_Master_Write
  1147                           
  1148                           ;MPU6050.c: 9: I2C_Master_Write( 0x6B );
  1149  0478  306B               	movlw	107
  1150  0479  3183  23F1  3184   	fcall	_I2C_Master_Write
  1151                           
  1152                           ;MPU6050.c: 10: I2C_Master_Write( 2 );
  1153  047C  3002               	movlw	2
  1154  047D  3183  23F1  3184   	fcall	_I2C_Master_Write
  1155                           
  1156                           ;MPU6050.c: 11: I2C_Master_Write( 0 );
  1157  0480  3000               	movlw	0
  1158  0481  3183  23F1  3184   	fcall	_I2C_Master_Write
  1159                           
  1160                           ;MPU6050.c: 12: I2C_Master_Stop();
  1161  0484  3183  23EC  3184   	fcall	_I2C_Master_Stop
  1162                           
  1163                           ;MPU6050.c: 14: I2C_Master_Start();
  1164  0487  3183  23E7  3184   	fcall	_I2C_Master_Start
  1165                           
  1166                           ;MPU6050.c: 15: I2C_Master_Write( 0xD0 );
  1167  048A  30D0               	movlw	208
  1168  048B  3183  23F1  3184   	fcall	_I2C_Master_Write
  1169                           
  1170                           ;MPU6050.c: 16: I2C_Master_Write( 0x1B );
  1171  048E  301B               	movlw	27
  1172  048F  3183  23F1  3184   	fcall	_I2C_Master_Write
  1173                           
  1174                           ;MPU6050.c: 17: I2C_Master_Write( 0 );
  1175  0492  3000               	movlw	0
  1176  0493  3183  23F1  3184   	fcall	_I2C_Master_Write
  1177                           
  1178                           ;MPU6050.c: 18: I2C_Master_Write( 0 );
  1179  0496  3000               	movlw	0
  1180  0497  3183  23F1  3184   	fcall	_I2C_Master_Write
  1181                           
  1182                           ;MPU6050.c: 19: I2C_Master_Stop();
  1183  049A  3183  23EC         	fcall	_I2C_Master_Stop
  1184  049C  0008               	return
  1185  049D                     __end_of_MPU6050_Init:	
  1186                           
  1187                           	psect	text2
  1188  06DA                     __ptext2:	
  1189 ;; *************** function _MPU6050_DeviceDriverTest *****************
  1190 ;; Defined at:
  1191 ;;		line 62 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  buf            10   14[BANK0 ] unsigned char [10]
  1196 ;;  TestRun         1   24[BANK0 ] PTR struct .
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1207 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1209 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;Total ram usage:       13 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		_MPU6050_Read
  1215 ;;		_UART_send_string
  1216 ;;		_int2str
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _MPU6050_DeviceDriverTest
  1224  06DA                     _MPU6050_DeviceDriverTest:	
  1225                           
  1226                           ;main.c: 63: MPU6050 *TestRun;
  1227                           ;main.c: 64: MPU6050_Read(TestRun);
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _MPU6050_DeviceDriverTest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1231  06DA  0020               	movlb	0	; select bank0
  1232  06DB  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1233  06DC  3186  2610  3186   	fcall	_MPU6050_Read
  1234                           
  1235                           ;main.c: 65: char buf[10];
  1236                           ;main.c: 68: UART_send_string("\n\n/**********************/\n");
  1237  06DF  301C               	movlw	low (STR_2| (0+32768))
  1238  06E0  00F1               	movwf	UART_send_string@st_pt
  1239  06E1  3088               	movlw	high (STR_2| (0+32768))
  1240  06E2  00F2               	movwf	UART_send_string@st_pt+1
  1241  06E3  3184  2420  3186   	fcall	_UART_send_string
  1242                           
  1243                           ;main.c: 69: int2str(TestRun->Accel.X, buf);
  1244  06E6  0020               	movlb	0	; select bank0
  1245  06E7  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1246  06E8  0086               	movwf	6
  1247  06E9  0187               	clrf	7
  1248  06EA  3F40               	moviw [0]fsr1
  1249  06EB  00FB               	movwf	int2str@n
  1250  06EC  3F41               	moviw [1]fsr1
  1251  06ED  00FC               	movwf	int2str@n+1
  1252  06EE  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1253  06EF  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1254  06F0  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1255  06F1  00FD               	movwf	int2str@s
  1256  06F2  3185  25B0  3186   	fcall	_int2str
  1257                           
  1258                           ;main.c: 70: UART_send_string("Accel.X = ");
  1259  06F5  3058               	movlw	low (STR_3| (0+32768))
  1260  06F6  00F1               	movwf	UART_send_string@st_pt
  1261  06F7  3088               	movlw	high (STR_3| (0+32768))
  1262  06F8  00F2               	movwf	UART_send_string@st_pt+1
  1263  06F9  3184  2420  3186   	fcall	_UART_send_string
  1264                           
  1265                           ;main.c: 71: UART_send_string(buf);
  1266  06FC  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1267  06FD  00F1               	movwf	UART_send_string@st_pt
  1268  06FE  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1269  06FF  00F2               	movwf	UART_send_string@st_pt+1
  1270  0700  3184  2420  3186   	fcall	_UART_send_string
  1271                           
  1272                           ;main.c: 72: UART_send_string("\n");
  1273  0703  301A               	movlw	low ((STR_17+26)| (0+32768))
  1274  0704  00F1               	movwf	UART_send_string@st_pt
  1275  0705  3088               	movlw	high ((STR_17+26)| (0+32768))
  1276  0706  00F2               	movwf	UART_send_string@st_pt+1
  1277  0707  3184  2420  3186   	fcall	_UART_send_string
  1278                           
  1279                           ;main.c: 74: int2str(TestRun->Accel.Y, buf);
  1280  070A  0020               	movlb	0	; select bank0
  1281  070B  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1282  070C  3E02               	addlw	2
  1283  070D  0086               	movwf	6
  1284  070E  0187               	clrf	7
  1285  070F  3F40               	moviw [0]fsr1
  1286  0710  00FB               	movwf	int2str@n
  1287  0711  3F41               	moviw [1]fsr1
  1288  0712  00FC               	movwf	int2str@n+1
  1289  0713  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1290  0714  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1291  0715  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1292  0716  00FD               	movwf	int2str@s
  1293  0717  3185  25B0  3186   	fcall	_int2str
  1294                           
  1295                           ;main.c: 75: UART_send_string("Accel.Y = ");
  1296  071A  3063               	movlw	low (STR_5| (0+32768))
  1297  071B  00F1               	movwf	UART_send_string@st_pt
  1298  071C  3088               	movlw	high (STR_5| (0+32768))
  1299  071D  00F2               	movwf	UART_send_string@st_pt+1
  1300  071E  3184  2420  3186   	fcall	_UART_send_string
  1301                           
  1302                           ;main.c: 76: UART_send_string(buf);
  1303  0721  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1304  0722  00F1               	movwf	UART_send_string@st_pt
  1305  0723  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1306  0724  00F2               	movwf	UART_send_string@st_pt+1
  1307  0725  3184  2420  3186   	fcall	_UART_send_string
  1308                           
  1309                           ;main.c: 77: UART_send_string("\n");
  1310  0728  301A               	movlw	low ((STR_17+26)| (0+32768))
  1311  0729  00F1               	movwf	UART_send_string@st_pt
  1312  072A  3088               	movlw	high ((STR_17+26)| (0+32768))
  1313  072B  00F2               	movwf	UART_send_string@st_pt+1
  1314  072C  3184  2420  3186   	fcall	_UART_send_string
  1315                           
  1316                           ;main.c: 79: int2str(TestRun->Accel.Z, buf);
  1317  072F  0020               	movlb	0	; select bank0
  1318  0730  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1319  0731  3E04               	addlw	4
  1320  0732  0086               	movwf	6
  1321  0733  0187               	clrf	7
  1322  0734  3F40               	moviw [0]fsr1
  1323  0735  00FB               	movwf	int2str@n
  1324  0736  3F41               	moviw [1]fsr1
  1325  0737  00FC               	movwf	int2str@n+1
  1326  0738  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1327  0739  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1328  073A  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1329  073B  00FD               	movwf	int2str@s
  1330  073C  3185  25B0  3186   	fcall	_int2str
  1331                           
  1332                           ;main.c: 80: UART_send_string("Accel.Z = ");
  1333  073F  306E               	movlw	low (STR_7| (0+32768))
  1334  0740  00F1               	movwf	UART_send_string@st_pt
  1335  0741  3088               	movlw	high (STR_7| (0+32768))
  1336  0742  00F2               	movwf	UART_send_string@st_pt+1
  1337  0743  3184  2420  3186   	fcall	_UART_send_string
  1338                           
  1339                           ;main.c: 81: UART_send_string(buf);
  1340  0746  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1341  0747  00F1               	movwf	UART_send_string@st_pt
  1342  0748  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1343  0749  00F2               	movwf	UART_send_string@st_pt+1
  1344  074A  3184  2420  3186   	fcall	_UART_send_string
  1345                           
  1346                           ;main.c: 82: UART_send_string("\n");
  1347  074D  301A               	movlw	low ((STR_17+26)| (0+32768))
  1348  074E  00F1               	movwf	UART_send_string@st_pt
  1349  074F  3088               	movlw	high ((STR_17+26)| (0+32768))
  1350  0750  00F2               	movwf	UART_send_string@st_pt+1
  1351  0751  3184  2420  3186   	fcall	_UART_send_string
  1352                           
  1353                           ;main.c: 84: int2str(TestRun->Gyro.X, buf);
  1354  0754  0020               	movlb	0	; select bank0
  1355  0755  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1356  0756  3E08               	addlw	8
  1357  0757  0086               	movwf	6
  1358  0758  0187               	clrf	7
  1359  0759  3F40               	moviw [0]fsr1
  1360  075A  00FB               	movwf	int2str@n
  1361  075B  3F41               	moviw [1]fsr1
  1362  075C  00FC               	movwf	int2str@n+1
  1363  075D  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1364  075E  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1365  075F  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1366  0760  00FD               	movwf	int2str@s
  1367  0761  3185  25B0  3186   	fcall	_int2str
  1368                           
  1369                           ;main.c: 85: UART_send_string("Gyro.X = ");
  1370  0764  3079               	movlw	low (STR_9| (0+32768))
  1371  0765  00F1               	movwf	UART_send_string@st_pt
  1372  0766  3088               	movlw	high (STR_9| (0+32768))
  1373  0767  00F2               	movwf	UART_send_string@st_pt+1
  1374  0768  3184  2420  3186   	fcall	_UART_send_string
  1375                           
  1376                           ;main.c: 86: UART_send_string(buf);
  1377  076B  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1378  076C  00F1               	movwf	UART_send_string@st_pt
  1379  076D  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1380  076E  00F2               	movwf	UART_send_string@st_pt+1
  1381  076F  3184  2420  3186   	fcall	_UART_send_string
  1382                           
  1383                           ;main.c: 87: UART_send_string("\n");
  1384  0772  301A               	movlw	low ((STR_17+26)| (0+32768))
  1385  0773  00F1               	movwf	UART_send_string@st_pt
  1386  0774  3088               	movlw	high ((STR_17+26)| (0+32768))
  1387  0775  00F2               	movwf	UART_send_string@st_pt+1
  1388  0776  3184  2420  3186   	fcall	_UART_send_string
  1389                           
  1390                           ;main.c: 89: int2str(TestRun->Gyro.Y, buf);
  1391  0779  0020               	movlb	0	; select bank0
  1392  077A  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1393  077B  3E0A               	addlw	10
  1394  077C  0086               	movwf	6
  1395  077D  0187               	clrf	7
  1396  077E  3F40               	moviw [0]fsr1
  1397  077F  00FB               	movwf	int2str@n
  1398  0780  3F41               	moviw [1]fsr1
  1399  0781  00FC               	movwf	int2str@n+1
  1400  0782  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1401  0783  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1402  0784  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1403  0785  00FD               	movwf	int2str@s
  1404  0786  3185  25B0  3186   	fcall	_int2str
  1405                           
  1406                           ;main.c: 90: UART_send_string("Gyro.Y = ");
  1407  0789  3083               	movlw	low (STR_11| (0+32768))
  1408  078A  00F1               	movwf	UART_send_string@st_pt
  1409  078B  3088               	movlw	high (STR_11| (0+32768))
  1410  078C  00F2               	movwf	UART_send_string@st_pt+1
  1411  078D  3184  2420  3186   	fcall	_UART_send_string
  1412                           
  1413                           ;main.c: 91: UART_send_string(buf);
  1414  0790  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1415  0791  00F1               	movwf	UART_send_string@st_pt
  1416  0792  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1417  0793  00F2               	movwf	UART_send_string@st_pt+1
  1418  0794  3184  2420  3186   	fcall	_UART_send_string
  1419                           
  1420                           ;main.c: 92: UART_send_string("\n");
  1421  0797  301A               	movlw	low ((STR_17+26)| (0+32768))
  1422  0798  00F1               	movwf	UART_send_string@st_pt
  1423  0799  3088               	movlw	high ((STR_17+26)| (0+32768))
  1424  079A  00F2               	movwf	UART_send_string@st_pt+1
  1425  079B  3184  2420  3186   	fcall	_UART_send_string
  1426                           
  1427                           ;main.c: 94: int2str(TestRun->Gyro.Z, buf);
  1428  079E  0020               	movlb	0	; select bank0
  1429  079F  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1430  07A0  3E0C               	addlw	12
  1431  07A1  0086               	movwf	6
  1432  07A2  0187               	clrf	7
  1433  07A3  3F40               	moviw [0]fsr1
  1434  07A4  00FB               	movwf	int2str@n
  1435  07A5  3F41               	moviw [1]fsr1
  1436  07A6  00FC               	movwf	int2str@n+1
  1437  07A7  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1438  07A8  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1439  07A9  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1440  07AA  00FD               	movwf	int2str@s
  1441  07AB  3185  25B0  3186   	fcall	_int2str
  1442                           
  1443                           ;main.c: 95: UART_send_string("Gyro.Z = ");
  1444  07AE  308D               	movlw	low (STR_13| (0+32768))
  1445  07AF  00F1               	movwf	UART_send_string@st_pt
  1446  07B0  3088               	movlw	high (STR_13| (0+32768))
  1447  07B1  00F2               	movwf	UART_send_string@st_pt+1
  1448  07B2  3184  2420  3186   	fcall	_UART_send_string
  1449                           
  1450                           ;main.c: 96: UART_send_string(buf);
  1451  07B5  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1452  07B6  00F1               	movwf	UART_send_string@st_pt
  1453  07B7  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1454  07B8  00F2               	movwf	UART_send_string@st_pt+1
  1455  07B9  3184  2420  3186   	fcall	_UART_send_string
  1456                           
  1457                           ;main.c: 97: UART_send_string("\n");
  1458  07BC  301A               	movlw	low ((STR_17+26)| (0+32768))
  1459  07BD  00F1               	movwf	UART_send_string@st_pt
  1460  07BE  3088               	movlw	high ((STR_17+26)| (0+32768))
  1461  07BF  00F2               	movwf	UART_send_string@st_pt+1
  1462  07C0  3184  2420  3186   	fcall	_UART_send_string
  1463                           
  1464                           ;main.c: 99: int2str(TestRun->Temperature, buf);
  1465  07C3  0020               	movlb	0	; select bank0
  1466  07C4  0838               	movf	MPU6050_DeviceDriverTest@TestRun,w
  1467  07C5  3E06               	addlw	6
  1468  07C6  0086               	movwf	6
  1469  07C7  0187               	clrf	7
  1470  07C8  3F40               	moviw [0]fsr1
  1471  07C9  00FB               	movwf	int2str@n
  1472  07CA  3F41               	moviw [1]fsr1
  1473  07CB  00FC               	movwf	int2str@n+1
  1474  07CC  302E               	movlw	(low (MPU6050_DeviceDriverTest@buf| 0))& (0+255)
  1475  07CD  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1476  07CE  082C               	movf	??_MPU6050_DeviceDriverTest,w
  1477  07CF  00FD               	movwf	int2str@s
  1478  07D0  3185  25B0  3186   	fcall	_int2str
  1479                           
  1480                           ;main.c: 100: UART_send_string("Temperature = ");
  1481  07D3  3049               	movlw	low (STR_15| (0+32768))
  1482  07D4  00F1               	movwf	UART_send_string@st_pt
  1483  07D5  3088               	movlw	high (STR_15| (0+32768))
  1484  07D6  00F2               	movwf	UART_send_string@st_pt+1
  1485  07D7  3184  2420  3186   	fcall	_UART_send_string
  1486                           
  1487                           ;main.c: 101: UART_send_string(buf);
  1488  07DA  302E               	movlw	low MPU6050_DeviceDriverTest@buf
  1489  07DB  00F1               	movwf	UART_send_string@st_pt
  1490  07DC  3000               	movlw	high MPU6050_DeviceDriverTest@buf
  1491  07DD  00F2               	movwf	UART_send_string@st_pt+1
  1492  07DE  3184  2420  3186   	fcall	_UART_send_string
  1493                           
  1494                           ;main.c: 102: UART_send_string("\n");
  1495  07E1  301A               	movlw	low ((STR_17+26)| (0+32768))
  1496  07E2  00F1               	movwf	UART_send_string@st_pt
  1497  07E3  3088               	movlw	high ((STR_17+26)| (0+32768))
  1498  07E4  00F2               	movwf	UART_send_string@st_pt+1
  1499  07E5  3184  2420  3186   	fcall	_UART_send_string
  1500                           
  1501                           ;main.c: 103: UART_send_string("/**********************/ \n\n");
  1502  07E8  3000               	movlw	low (STR_17| (0+32768))
  1503  07E9  00F1               	movwf	UART_send_string@st_pt
  1504  07EA  3088               	movlw	high (STR_17| (0+32768))
  1505  07EB  00F2               	movwf	UART_send_string@st_pt+1
  1506  07EC  3184  2420  3186   	fcall	_UART_send_string
  1507                           
  1508                           ;main.c: 105: _delay((unsigned long)((1000)*(16000000L/4000.0)));
  1509  07EF  3015               	movlw	21
  1510  07F0  0020               	movlb	0	; select bank0
  1511  07F1  00AD               	movwf	??_MPU6050_DeviceDriverTest+1
  1512  07F2  304B               	movlw	75
  1513  07F3  00AC               	movwf	??_MPU6050_DeviceDriverTest
  1514  07F4  30BE               	movlw	190
  1515  07F5                     u627:	
  1516  07F5  0B89               	decfsz	9,f
  1517  07F6  2FF5               	goto	u627
  1518  07F7  0BAC               	decfsz	??_MPU6050_DeviceDriverTest,f
  1519  07F8  2FF5               	goto	u627
  1520  07F9  0BAD               	decfsz	??_MPU6050_DeviceDriverTest+1,f
  1521  07FA  2FF5               	goto	u627
  1522  07FB  0000               	nop
  1523  07FC  0008               	return
  1524  07FD                     __end_of_MPU6050_DeviceDriverTest:	
  1525                           
  1526                           	psect	text3
  1527  05B0                     __ptext3:	
  1528 ;; *************** function _int2str *****************
  1529 ;; Defined at:
  1530 ;;		line 73 in file "uart.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  n               2   11[COMMON] int 
  1533 ;;  s               1   13[COMMON] PTR unsigned char 
  1534 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  i               2   10[BANK0 ] int 
  1537 ;;  sign            2    8[BANK0 ] int 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1547 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;Total ram usage:        9 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    2
  1554 ;; This function calls:
  1555 ;;		___awdiv
  1556 ;;		___awmod
  1557 ;;		_reverse
  1558 ;; This function is called by:
  1559 ;;		_MPU6050_DeviceDriverTest
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _int2str
  1565  05B0                     _int2str:	
  1566                           
  1567                           ;uart.c: 75: int i, sign;
  1568                           ;uart.c: 77: if ((sign = n) < 0)
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _int2str: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1572  05B0  087C               	movf	int2str@n+1,w
  1573  05B1  0020               	movlb	0	; select bank0
  1574  05B2  00A9               	movwf	int2str@sign+1
  1575  05B3  087B               	movf	int2str@n,w
  1576  05B4  00A8               	movwf	int2str@sign
  1577  05B5  1FA9               	btfss	int2str@sign+1,7
  1578  05B6  2DBC               	goto	l983
  1579                           
  1580                           ;uart.c: 78: n = -n;
  1581  05B7  09FB               	comf	int2str@n,f
  1582  05B8  09FC               	comf	int2str@n+1,f
  1583  05B9  0AFB               	incf	int2str@n,f
  1584  05BA  1903               	skipnz
  1585  05BB  0AFC               	incf	int2str@n+1,f
  1586  05BC                     l983:	
  1587                           
  1588                           ;uart.c: 79: i = 0;
  1589  05BC  01AA               	clrf	int2str@i
  1590  05BD  01AB               	clrf	int2str@i+1
  1591  05BE                     l985:	
  1592                           ;uart.c: 80: do {
  1593                           
  1594                           
  1595                           ;uart.c: 81: s[i++] = n % 10 + '0';
  1596  05BE  300A               	movlw	10
  1597  05BF  00F0               	movwf	___awmod@divisor
  1598  05C0  3000               	movlw	0
  1599  05C1  00F1               	movwf	___awmod@divisor+1
  1600  05C2  087C               	movf	int2str@n+1,w
  1601  05C3  00F3               	movwf	___awmod@dividend+1
  1602  05C4  087B               	movf	int2str@n,w
  1603  05C5  00F2               	movwf	___awmod@dividend
  1604  05C6  3184  24D1  3185   	fcall	___awmod
  1605  05C9  0870               	movf	?___awmod,w
  1606  05CA  3E30               	addlw	48
  1607  05CB  0020               	movlb	0	; select bank0
  1608  05CC  00A6               	movwf	??_int2str
  1609  05CD  082A               	movf	int2str@i,w
  1610  05CE  077D               	addwf	int2str@s,w
  1611  05CF  00A7               	movwf	??_int2str+1
  1612  05D0  0827               	movf	??_int2str+1,w
  1613  05D1  0086               	movwf	6
  1614  05D2  0187               	clrf	7
  1615  05D3  0826               	movf	??_int2str,w
  1616  05D4  0081               	movwf	1
  1617  05D5  3001               	movlw	1
  1618  05D6  07AA               	addwf	int2str@i,f
  1619  05D7  3000               	movlw	0
  1620  05D8  3DAB               	addwfc	int2str@i+1,f
  1621                           
  1622                           ;uart.c: 82: } while ((n /= 10) > 0);
  1623  05D9  300A               	movlw	10
  1624  05DA  00F0               	movwf	___awdiv@divisor
  1625  05DB  3000               	movlw	0
  1626  05DC  00F1               	movwf	___awdiv@divisor+1
  1627  05DD  087C               	movf	int2str@n+1,w
  1628  05DE  00F3               	movwf	___awdiv@dividend+1
  1629  05DF  087B               	movf	int2str@n,w
  1630  05E0  00F2               	movwf	___awdiv@dividend
  1631  05E1  3185  255F  3185   	fcall	___awdiv
  1632  05E4  0871               	movf	?___awdiv+1,w
  1633  05E5  00FC               	movwf	int2str@n+1
  1634  05E6  0870               	movf	?___awdiv,w
  1635  05E7  00FB               	movwf	int2str@n
  1636  05E8  087C               	movf	int2str@n+1,w
  1637  05E9  3A80               	xorlw	128
  1638  05EA  0020               	movlb	0	; select bank0
  1639  05EB  00A6               	movwf	??_int2str
  1640  05EC  3080               	movlw	128
  1641  05ED  0226               	subwf	??_int2str,w
  1642  05EE  1D03               	skipz
  1643  05EF  2DF2               	goto	u595
  1644  05F0  3001               	movlw	1
  1645  05F1  027B               	subwf	int2str@n,w
  1646  05F2                     u595:	
  1647  05F2  1803               	skipnc
  1648  05F3  2DBE               	goto	l985
  1649                           
  1650                           ;uart.c: 83: if (sign < 0)
  1651  05F4  0020               	movlb	0	; select bank0
  1652  05F5  1FA9               	btfss	int2str@sign+1,7
  1653  05F6  2E05               	goto	l995
  1654                           
  1655                           ;uart.c: 84: s[i++] = '-';
  1656  05F7  302D               	movlw	45
  1657  05F8  00A6               	movwf	??_int2str
  1658  05F9  082A               	movf	int2str@i,w
  1659  05FA  077D               	addwf	int2str@s,w
  1660  05FB  00A7               	movwf	??_int2str+1
  1661  05FC  0827               	movf	??_int2str+1,w
  1662  05FD  0086               	movwf	6
  1663  05FE  0187               	clrf	7
  1664  05FF  0826               	movf	??_int2str,w
  1665  0600  0081               	movwf	1
  1666  0601  3001               	movlw	1
  1667  0602  07AA               	addwf	int2str@i,f
  1668  0603  3000               	movlw	0
  1669  0604  3DAB               	addwfc	int2str@i+1,f
  1670  0605                     l995:	
  1671                           
  1672                           ;uart.c: 85: s[i] = '\0';
  1673  0605  082A               	movf	int2str@i,w
  1674  0606  077D               	addwf	int2str@s,w
  1675  0607  00A6               	movwf	??_int2str
  1676  0608  0826               	movf	??_int2str,w
  1677  0609  0086               	movwf	6
  1678  060A  0187               	clrf	7
  1679  060B  0181               	clrf	1
  1680                           
  1681                           ;uart.c: 86: reverse(s);
  1682  060C  087D               	movf	int2str@s,w
  1683  060D  3185  2516         	fcall	_reverse
  1684  060F  0008               	return
  1685  0610                     __end_of_int2str:	
  1686                           
  1687                           	psect	text4
  1688  0516                     __ptext4:	
  1689 ;; *************** function _reverse *****************
  1690 ;; Defined at:
  1691 ;;		line 89 in file "uart.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  s               1    wreg     PTR unsigned char 
  1694 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  s               1    5[BANK0 ] PTR unsigned char 
  1697 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1698 ;;  j               2    3[BANK0 ] int 
  1699 ;;  i               2    1[BANK0 ] int 
  1700 ;;  c               1    0[BANK0 ] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:        9 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		_strlen
  1719 ;; This function is called by:
  1720 ;;		_int2str
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _reverse
  1726  0516                     _reverse:	
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _reverse: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1730                           ;reverse@s stored from wreg
  1731  0516  0020               	movlb	0	; select bank0
  1732  0517  00A5               	movwf	reverse@s
  1733                           
  1734                           ;uart.c: 91: int i, j;
  1735                           ;uart.c: 92: char c;
  1736                           ;uart.c: 94: for (i = 0, j = strlen(s)-1; i<j; i++, j--) {
  1737  0518  01A1               	clrf	reverse@i
  1738  0519  01A2               	clrf	reverse@i+1
  1739  051A  0825               	movf	reverse@s,w
  1740  051B  3184  244D  3185   	fcall	_strlen
  1741  051E  0870               	movf	?_strlen,w
  1742  051F  3EFF               	addlw	255
  1743  0520  0020               	movlb	0	; select bank0
  1744  0521  00A3               	movwf	reverse@j
  1745  0522  30FF               	movlw	255
  1746  0523  3D71               	addwfc	?_strlen+1,w
  1747  0524  00A4               	movwf	reverse@j+1
  1748  0525                     l883:	
  1749  0525  0822               	movf	reverse@i+1,w
  1750  0526  3A80               	xorlw	128
  1751  0527  00F8               	movwf	??_reverse
  1752  0528  0824               	movf	reverse@j+1,w
  1753  0529  3A80               	xorlw	128
  1754  052A  0278               	subwf	??_reverse,w
  1755  052B  1D03               	skipz
  1756  052C  2D2F               	goto	u375
  1757  052D  0823               	movf	reverse@j,w
  1758  052E  0221               	subwf	reverse@i,w
  1759  052F                     u375:	
  1760  052F  1803               	btfsc	3,0
  1761  0530  0008               	return
  1762                           
  1763                           ;uart.c: 95: c = s[i];
  1764  0531  0020               	movlb	0	; select bank0
  1765  0532  0821               	movf	reverse@i,w
  1766  0533  0725               	addwf	reverse@s,w
  1767  0534  00F8               	movwf	??_reverse
  1768  0535  0878               	movf	??_reverse,w
  1769  0536  0086               	movwf	6
  1770  0537  0187               	clrf	7
  1771  0538  0801               	movf	1,w
  1772  0539  00F9               	movwf	??_reverse+1
  1773  053A  0879               	movf	??_reverse+1,w
  1774  053B  00A0               	movwf	reverse@c
  1775                           
  1776                           ;uart.c: 96: s[i] = s[j];
  1777  053C  0823               	movf	reverse@j,w
  1778  053D  0725               	addwf	reverse@s,w
  1779  053E  00F8               	movwf	??_reverse
  1780  053F  0878               	movf	??_reverse,w
  1781  0540  0086               	movwf	6
  1782  0541  0187               	clrf	7
  1783  0542  0801               	movf	1,w
  1784  0543  00F9               	movwf	??_reverse+1
  1785  0544  0821               	movf	reverse@i,w
  1786  0545  0725               	addwf	reverse@s,w
  1787  0546  00FA               	movwf	??_reverse+2
  1788  0547  087A               	movf	??_reverse+2,w
  1789  0548  0086               	movwf	6
  1790  0549  0187               	clrf	7
  1791  054A  0879               	movf	??_reverse+1,w
  1792  054B  0081               	movwf	1
  1793                           
  1794                           ;uart.c: 97: s[j] = c;
  1795  054C  0820               	movf	reverse@c,w
  1796  054D  00F8               	movwf	??_reverse
  1797  054E  0823               	movf	reverse@j,w
  1798  054F  0725               	addwf	reverse@s,w
  1799  0550  00F9               	movwf	??_reverse+1
  1800  0551  0879               	movf	??_reverse+1,w
  1801  0552  0086               	movwf	6
  1802  0553  0187               	clrf	7
  1803  0554  0878               	movf	??_reverse,w
  1804  0555  0081               	movwf	1
  1805  0556  3001               	movlw	1
  1806  0557  07A1               	addwf	reverse@i,f
  1807  0558  3000               	movlw	0
  1808  0559  3DA2               	addwfc	reverse@i+1,f
  1809  055A  30FF               	movlw	255
  1810  055B  07A3               	addwf	reverse@j,f
  1811  055C  30FF               	movlw	255
  1812  055D  3DA4               	addwfc	reverse@j+1,f
  1813  055E  2D25               	goto	l883
  1814  055F                     __end_of_reverse:	
  1815                           
  1816                           	psect	text5
  1817  044D                     __ptext5:	
  1818 ;; *************** function _strlen *****************
  1819 ;; Defined at:
  1820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  s               1    wreg     PTR const unsigned char 
  1823 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  s               1    6[COMMON] PTR const unsigned char 
  1826 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1827 ;;  cp              1    7[COMMON] PTR const unsigned char 
  1828 ;;		 -> MPU6050_DeviceDriverTest@buf(10), 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    0[COMMON] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;Total ram usage:        8 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_reverse
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _strlen
  1853  044D                     _strlen:	
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  1857                           ;strlen@s stored from wreg
  1858  044D  00F6               	movwf	strlen@s
  1859  044E  0876               	movf	strlen@s,w
  1860  044F  00F2               	movwf	??_strlen
  1861  0450  0872               	movf	??_strlen,w
  1862  0451  00F7               	movwf	strlen@cp
  1863  0452                     l831:	
  1864  0452  0877               	movf	strlen@cp,w
  1865  0453  0086               	movwf	6
  1866  0454  0187               	clrf	7
  1867  0455  0801               	movf	1,w
  1868  0456  1903               	btfsc	3,2
  1869  0457  2C5D               	goto	l833
  1870  0458  3001               	movlw	1
  1871  0459  00F2               	movwf	??_strlen
  1872  045A  0872               	movf	??_strlen,w
  1873  045B  07F7               	addwf	strlen@cp,f
  1874  045C  2C52               	goto	l831
  1875  045D                     l833:	
  1876  045D  0876               	movf	strlen@s,w
  1877  045E  00F2               	movwf	??_strlen
  1878  045F  3000               	movlw	0
  1879  0460  00F3               	movwf	??_strlen+1
  1880  0461  09F2               	comf	??_strlen,f
  1881  0462  09F3               	comf	??_strlen+1,f
  1882  0463  0AF2               	incf	??_strlen,f
  1883  0464  1903               	skipnz
  1884  0465  0AF3               	incf	??_strlen+1,f
  1885  0466  0877               	movf	strlen@cp,w
  1886  0467  00F4               	movwf	??_strlen+2
  1887  0468  3000               	movlw	0
  1888  0469  00F5               	movwf	??_strlen+3
  1889  046A  0872               	movf	??_strlen,w
  1890  046B  0774               	addwf	??_strlen+2,w
  1891  046C  00F0               	movwf	?_strlen
  1892  046D  0873               	movf	??_strlen+1,w
  1893  046E  3D75               	addwfc	??_strlen+3,w
  1894  046F  00F1               	movwf	?_strlen+1
  1895  0470  0008               	return
  1896  0471                     __end_of_strlen:	
  1897                           
  1898                           	psect	text6
  1899  04D1                     __ptext6:	
  1900 ;; *************** function ___awmod *****************
  1901 ;; Defined at:
  1902 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  divisor         2    0[COMMON] int 
  1905 ;;  dividend        2    2[COMMON] int 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  sign            1    6[COMMON] unsigned char 
  1908 ;;  counter         1    5[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2    0[COMMON] int 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;Total ram usage:        7 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_int2str
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function ___awmod
  1933  04D1                     ___awmod:	
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1937  04D1  01F6               	clrf	___awmod@sign
  1938  04D2  1FF3               	btfss	___awmod@dividend+1,7
  1939  04D3  2CDB               	goto	l937
  1940  04D4  09F2               	comf	___awmod@dividend,f
  1941  04D5  09F3               	comf	___awmod@dividend+1,f
  1942  04D6  0AF2               	incf	___awmod@dividend,f
  1943  04D7  1903               	skipnz
  1944  04D8  0AF3               	incf	___awmod@dividend+1,f
  1945  04D9  01F6               	clrf	___awmod@sign
  1946  04DA  0AF6               	incf	___awmod@sign,f
  1947  04DB                     l937:	
  1948  04DB  1FF1               	btfss	___awmod@divisor+1,7
  1949  04DC  2CE2               	goto	l941
  1950  04DD  09F0               	comf	___awmod@divisor,f
  1951  04DE  09F1               	comf	___awmod@divisor+1,f
  1952  04DF  0AF0               	incf	___awmod@divisor,f
  1953  04E0  1903               	skipnz
  1954  04E1  0AF1               	incf	___awmod@divisor+1,f
  1955  04E2                     l941:	
  1956  04E2  0870               	movf	___awmod@divisor,w
  1957  04E3  0471               	iorwf	___awmod@divisor+1,w
  1958  04E4  1903               	btfsc	3,2
  1959  04E5  2D09               	goto	l959
  1960  04E6  01F5               	clrf	___awmod@counter
  1961  04E7  0AF5               	incf	___awmod@counter,f
  1962  04E8                     l949:	
  1963  04E8  1BF1               	btfsc	___awmod@divisor+1,7
  1964  04E9  2CF4               	goto	l951
  1965  04EA  3001               	movlw	1
  1966  04EB                     u515:	
  1967  04EB  35F0               	lslf	___awmod@divisor,f
  1968  04EC  0DF1               	rlf	___awmod@divisor+1,f
  1969  04ED  0B89               	decfsz	9,f
  1970  04EE  2CEB               	goto	u515
  1971  04EF  3001               	movlw	1
  1972  04F0  00F4               	movwf	??___awmod
  1973  04F1  0874               	movf	??___awmod,w
  1974  04F2  07F5               	addwf	___awmod@counter,f
  1975  04F3  2CE8               	goto	l949
  1976  04F4                     l951:	
  1977  04F4  0871               	movf	___awmod@divisor+1,w
  1978  04F5  0273               	subwf	___awmod@dividend+1,w
  1979  04F6  1D03               	skipz
  1980  04F7  2CFA               	goto	u535
  1981  04F8  0870               	movf	___awmod@divisor,w
  1982  04F9  0272               	subwf	___awmod@dividend,w
  1983  04FA                     u535:	
  1984  04FA  1C03               	skipc
  1985  04FB  2D00               	goto	l955
  1986  04FC  0870               	movf	___awmod@divisor,w
  1987  04FD  02F2               	subwf	___awmod@dividend,f
  1988  04FE  0871               	movf	___awmod@divisor+1,w
  1989  04FF  3BF3               	subwfb	___awmod@dividend+1,f
  1990  0500                     l955:	
  1991  0500  3001               	movlw	1
  1992  0501                     u545:	
  1993  0501  36F1               	lsrf	___awmod@divisor+1,f
  1994  0502  0CF0               	rrf	___awmod@divisor,f
  1995  0503  0B89               	decfsz	9,f
  1996  0504  2D01               	goto	u545
  1997  0505  3001               	movlw	1
  1998  0506  02F5               	subwf	___awmod@counter,f
  1999  0507  1D03               	btfss	3,2
  2000  0508  2CF4               	goto	l951
  2001  0509                     l959:	
  2002  0509  0876               	movf	___awmod@sign,w
  2003  050A  1903               	btfsc	3,2
  2004  050B  2D11               	goto	l963
  2005  050C  09F2               	comf	___awmod@dividend,f
  2006  050D  09F3               	comf	___awmod@dividend+1,f
  2007  050E  0AF2               	incf	___awmod@dividend,f
  2008  050F  1903               	skipnz
  2009  0510  0AF3               	incf	___awmod@dividend+1,f
  2010  0511                     l963:	
  2011  0511  0873               	movf	___awmod@dividend+1,w
  2012  0512  00F1               	movwf	?___awmod+1
  2013  0513  0872               	movf	___awmod@dividend,w
  2014  0514  00F0               	movwf	?___awmod
  2015  0515  0008               	return
  2016  0516                     __end_of___awmod:	
  2017                           
  2018                           	psect	text7
  2019  0420                     __ptext7:	
  2020 ;; *************** function _UART_send_string *****************
  2021 ;; Defined at:
  2022 ;;		line 66 in file "uart.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  st_pt           2    1[COMMON] PTR unsigned char 
  2025 ;;		 -> STR_17(28), STR_16(2), STR_15(15), STR_14(2), 
  2026 ;;		 -> STR_13(10), STR_12(2), STR_11(10), STR_10(2), 
  2027 ;;		 -> STR_9(10), STR_8(2), STR_7(11), STR_6(2), 
  2028 ;;		 -> STR_5(11), STR_4(2), STR_3(11), MPU6050_DeviceDriverTest@buf(10), 
  2029 ;;		 -> STR_2(28), STR_1(17), 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;Total ram usage:        3 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    1
  2048 ;; This function calls:
  2049 ;;		_UART_send_char
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;;		_MPU6050_DeviceDriverTest
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _UART_send_string
  2058  0420                     _UART_send_string:	
  2059  0420                     l977:	
  2060                           ;uart.c: 68: while(*st_pt)
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2064                           
  2065  0420  0871               	movf	UART_send_string@st_pt,w
  2066  0421  0084               	movwf	4
  2067  0422  0872               	movf	UART_send_string@st_pt+1,w
  2068  0423  0085               	movwf	5
  2069  0424  0012               	moviw fsr0++
  2070  0425  1903               	btfsc	3,2
  2071  0426  0008               	return
  2072                           
  2073                           ;uart.c: 69: UART_send_char(*st_pt++);
  2074  0427  0871               	movf	UART_send_string@st_pt,w
  2075  0428  0084               	movwf	4
  2076  0429  0872               	movf	UART_send_string@st_pt+1,w
  2077  042A  0085               	movwf	5
  2078  042B  0800               	movf	0,w	;code access
  2079  042C  3184  2400  3184   	fcall	_UART_send_char
  2080  042F  3001               	movlw	1
  2081  0430  07F1               	addwf	UART_send_string@st_pt,f
  2082  0431  3000               	movlw	0
  2083  0432  3DF2               	addwfc	UART_send_string@st_pt+1,f
  2084  0433  2C20               	goto	l977
  2085  0434                     __end_of_UART_send_string:	
  2086                           
  2087                           	psect	text8
  2088  0400                     __ptext8:	
  2089 ;; *************** function _UART_send_char *****************
  2090 ;; Defined at:
  2091 ;;		line 39 in file "uart.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  bt              1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  bt              1    0[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_UART_send_string
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _UART_send_char
  2120  0400                     _UART_send_char:	
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _UART_send_char: [wreg]
  2124                           ;UART_send_char@bt stored from wreg
  2125  0400  00F0               	movwf	UART_send_char@bt
  2126  0401                     l107:	
  2127                           ;uart.c: 41: while(!TXIF);
  2128                           
  2129  0401  0020               	movlb	0	; select bank0
  2130  0402  1E11               	btfss	17,4	;volatile
  2131  0403  2C01               	goto	l107
  2132                           
  2133                           ;uart.c: 42: TXREG = bt;
  2134  0404  0870               	movf	UART_send_char@bt,w
  2135  0405  0023               	movlb	3	; select bank3
  2136  0406  009A               	movwf	26	;volatile
  2137  0407  0008               	return
  2138  0408                     __end_of_UART_send_char:	
  2139                           
  2140                           	psect	text9
  2141  0610                     __ptext9:	
  2142 ;; *************** function _MPU6050_Read *****************
  2143 ;; Defined at:
  2144 ;;		line 22 in file "MPU6050.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  Sensor          1    wreg     PTR struct .
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  Sensor          1    3[BANK0 ] PTR struct .
  2149 ;;  value_high      2    0[BANK0 ] unsigned int 
  2150 ;;  value_low       1    2[BANK0 ] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;Total ram usage:        7 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		_I2C_Master_Read
  2169 ;;		_I2C_Master_Restart
  2170 ;;		_I2C_Master_Start
  2171 ;;		_I2C_Master_Stop
  2172 ;;		_I2C_Master_Write
  2173 ;;		___awdiv
  2174 ;; This function is called by:
  2175 ;;		_MPU6050_DeviceDriverTest
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _MPU6050_Read
  2181  0610                     _MPU6050_Read:	
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _MPU6050_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2185                           ;MPU6050_Read@Sensor stored from wreg
  2186  0610  0020               	movlb	0	; select bank0
  2187  0611  00A3               	movwf	MPU6050_Read@Sensor
  2188                           
  2189                           ;MPU6050.c: 24: I2C_Master_Start();
  2190  0612  3183  23E7  3186   	fcall	_I2C_Master_Start
  2191                           
  2192                           ;MPU6050.c: 25: I2C_Master_Write( 0xD0 );
  2193  0615  30D0               	movlw	208
  2194  0616  3183  23F1  3186   	fcall	_I2C_Master_Write
  2195                           
  2196                           ;MPU6050.c: 26: I2C_Master_Write( 0x3B );
  2197  0619  303B               	movlw	59
  2198  061A  3183  23F1  3186   	fcall	_I2C_Master_Write
  2199                           
  2200                           ;MPU6050.c: 27: I2C_Master_Restart();
  2201  061D  3183  23E2  3186   	fcall	_I2C_Master_Restart
  2202                           
  2203                           ;MPU6050.c: 28: I2C_Master_Write( 0xD0 | 1 );
  2204  0620  30D1               	movlw	209
  2205  0621  3183  23F1  3186   	fcall	_I2C_Master_Write
  2206                           
  2207                           ;MPU6050.c: 29: uint16_t value_high;
  2208                           ;MPU6050.c: 30: uint8_t value_low;
  2209                           ;MPU6050.c: 32: value_high = (I2C_Master_Read(0) << 8);
  2210  0624  3000               	movlw	0
  2211  0625  3184  2434  3186   	fcall	_I2C_Master_Read
  2212  0628  00F9               	movwf	??_MPU6050_Read
  2213  0629  01FA               	clrf	??_MPU6050_Read+1
  2214  062A  0879               	movf	??_MPU6050_Read,w
  2215  062B  00FA               	movwf	??_MPU6050_Read+1
  2216  062C  01F9               	clrf	??_MPU6050_Read
  2217  062D  0879               	movf	??_MPU6050_Read,w
  2218  062E  0020               	movlb	0	; select bank0
  2219  062F  00A0               	movwf	MPU6050_Read@value_high
  2220  0630  087A               	movf	??_MPU6050_Read+1,w
  2221  0631  00A1               	movwf	MPU6050_Read@value_high+1
  2222                           
  2223                           ;MPU6050.c: 34: Sensor->Accel.X = value_high | value_low ;
  2224  0632  3000               	movlw	0
  2225  0633  3184  2434  3186   	fcall	_I2C_Master_Read
  2226  0636  00F9               	movwf	??_MPU6050_Read
  2227  0637  0879               	movf	??_MPU6050_Read,w
  2228  0638  0020               	movlb	0	; select bank0
  2229  0639  00A2               	movwf	MPU6050_Read@value_low
  2230                           
  2231                           ;MPU6050.c: 36: value_high = (I2C_Master_Read(0) << 8);
  2232  063A  3000               	movlw	0
  2233  063B  3184  2434  3186   	fcall	_I2C_Master_Read
  2234  063E  00F9               	movwf	??_MPU6050_Read
  2235  063F  01FA               	clrf	??_MPU6050_Read+1
  2236  0640  0879               	movf	??_MPU6050_Read,w
  2237  0641  00FA               	movwf	??_MPU6050_Read+1
  2238  0642  01F9               	clrf	??_MPU6050_Read
  2239  0643  0879               	movf	??_MPU6050_Read,w
  2240  0644  0020               	movlb	0	; select bank0
  2241  0645  00A0               	movwf	MPU6050_Read@value_high
  2242  0646  087A               	movf	??_MPU6050_Read+1,w
  2243  0647  00A1               	movwf	MPU6050_Read@value_high+1
  2244                           
  2245                           ;MPU6050.c: 38: Sensor->Accel.Y = value_high | value_low;
  2246  0648  3000               	movlw	0
  2247  0649  3184  2434  3186   	fcall	_I2C_Master_Read
  2248  064C  00F9               	movwf	??_MPU6050_Read
  2249  064D  0879               	movf	??_MPU6050_Read,w
  2250  064E  0020               	movlb	0	; select bank0
  2251  064F  00A2               	movwf	MPU6050_Read@value_low
  2252                           
  2253                           ;MPU6050.c: 40: value_high = (I2C_Master_Read(0) << 8);
  2254  0650  3000               	movlw	0
  2255  0651  3184  2434  3186   	fcall	_I2C_Master_Read
  2256  0654  00F9               	movwf	??_MPU6050_Read
  2257  0655  01FA               	clrf	??_MPU6050_Read+1
  2258  0656  0879               	movf	??_MPU6050_Read,w
  2259  0657  00FA               	movwf	??_MPU6050_Read+1
  2260  0658  01F9               	clrf	??_MPU6050_Read
  2261  0659  0879               	movf	??_MPU6050_Read,w
  2262  065A  0020               	movlb	0	; select bank0
  2263  065B  00A0               	movwf	MPU6050_Read@value_high
  2264  065C  087A               	movf	??_MPU6050_Read+1,w
  2265  065D  00A1               	movwf	MPU6050_Read@value_high+1
  2266                           
  2267                           ;MPU6050.c: 42: Sensor->Accel.Z = value_high | value_low;
  2268  065E  3000               	movlw	0
  2269  065F  3184  2434  3186   	fcall	_I2C_Master_Read
  2270  0662  00F9               	movwf	??_MPU6050_Read
  2271  0663  0879               	movf	??_MPU6050_Read,w
  2272  0664  0020               	movlb	0	; select bank0
  2273  0665  00A2               	movwf	MPU6050_Read@value_low
  2274                           
  2275                           ;MPU6050.c: 44: value_high = (I2C_Master_Read(0) << 8);
  2276  0666  3000               	movlw	0
  2277  0667  3184  2434  3186   	fcall	_I2C_Master_Read
  2278  066A  00F9               	movwf	??_MPU6050_Read
  2279  066B  01FA               	clrf	??_MPU6050_Read+1
  2280  066C  0879               	movf	??_MPU6050_Read,w
  2281  066D  00FA               	movwf	??_MPU6050_Read+1
  2282  066E  01F9               	clrf	??_MPU6050_Read
  2283  066F  0879               	movf	??_MPU6050_Read,w
  2284  0670  0020               	movlb	0	; select bank0
  2285  0671  00A0               	movwf	MPU6050_Read@value_high
  2286  0672  087A               	movf	??_MPU6050_Read+1,w
  2287  0673  00A1               	movwf	MPU6050_Read@value_high+1
  2288                           
  2289                           ;MPU6050.c: 46: Sensor->Temperature = value_high | value_low;
  2290  0674  3000               	movlw	0
  2291  0675  3184  2434  3186   	fcall	_I2C_Master_Read
  2292  0678  00F9               	movwf	??_MPU6050_Read
  2293  0679  0879               	movf	??_MPU6050_Read,w
  2294  067A  0020               	movlb	0	; select bank0
  2295  067B  00A2               	movwf	MPU6050_Read@value_low
  2296                           
  2297                           ;MPU6050.c: 48: value_high = (I2C_Master_Read(0) << 8);
  2298  067C  3000               	movlw	0
  2299  067D  3184  2434  3186   	fcall	_I2C_Master_Read
  2300  0680  00F9               	movwf	??_MPU6050_Read
  2301  0681  01FA               	clrf	??_MPU6050_Read+1
  2302  0682  0879               	movf	??_MPU6050_Read,w
  2303  0683  00FA               	movwf	??_MPU6050_Read+1
  2304  0684  01F9               	clrf	??_MPU6050_Read
  2305  0685  0879               	movf	??_MPU6050_Read,w
  2306  0686  0020               	movlb	0	; select bank0
  2307  0687  00A0               	movwf	MPU6050_Read@value_high
  2308  0688  087A               	movf	??_MPU6050_Read+1,w
  2309  0689  00A1               	movwf	MPU6050_Read@value_high+1
  2310                           
  2311                           ;MPU6050.c: 50: Sensor->Gyro.X = value_high | value_low;
  2312  068A  3000               	movlw	0
  2313  068B  3184  2434  3186   	fcall	_I2C_Master_Read
  2314  068E  00F9               	movwf	??_MPU6050_Read
  2315  068F  0879               	movf	??_MPU6050_Read,w
  2316  0690  0020               	movlb	0	; select bank0
  2317  0691  00A2               	movwf	MPU6050_Read@value_low
  2318                           
  2319                           ;MPU6050.c: 52: value_high = (I2C_Master_Read(0) << 8);
  2320  0692  3000               	movlw	0
  2321  0693  3184  2434  3186   	fcall	_I2C_Master_Read
  2322  0696  00F9               	movwf	??_MPU6050_Read
  2323  0697  01FA               	clrf	??_MPU6050_Read+1
  2324  0698  0879               	movf	??_MPU6050_Read,w
  2325  0699  00FA               	movwf	??_MPU6050_Read+1
  2326  069A  01F9               	clrf	??_MPU6050_Read
  2327  069B  0879               	movf	??_MPU6050_Read,w
  2328  069C  0020               	movlb	0	; select bank0
  2329  069D  00A0               	movwf	MPU6050_Read@value_high
  2330  069E  087A               	movf	??_MPU6050_Read+1,w
  2331  069F  00A1               	movwf	MPU6050_Read@value_high+1
  2332                           
  2333                           ;MPU6050.c: 54: Sensor->Gyro.Y = value_high | value_low;
  2334  06A0  3000               	movlw	0
  2335  06A1  3184  2434  3186   	fcall	_I2C_Master_Read
  2336  06A4  00F9               	movwf	??_MPU6050_Read
  2337  06A5  0879               	movf	??_MPU6050_Read,w
  2338  06A6  0020               	movlb	0	; select bank0
  2339  06A7  00A2               	movwf	MPU6050_Read@value_low
  2340                           
  2341                           ;MPU6050.c: 56: value_high = (I2C_Master_Read(0) << 8);
  2342  06A8  3000               	movlw	0
  2343  06A9  3184  2434  3186   	fcall	_I2C_Master_Read
  2344  06AC  00F9               	movwf	??_MPU6050_Read
  2345  06AD  01FA               	clrf	??_MPU6050_Read+1
  2346  06AE  0879               	movf	??_MPU6050_Read,w
  2347  06AF  00FA               	movwf	??_MPU6050_Read+1
  2348  06B0  01F9               	clrf	??_MPU6050_Read
  2349  06B1  0879               	movf	??_MPU6050_Read,w
  2350  06B2  0020               	movlb	0	; select bank0
  2351  06B3  00A0               	movwf	MPU6050_Read@value_high
  2352  06B4  087A               	movf	??_MPU6050_Read+1,w
  2353  06B5  00A1               	movwf	MPU6050_Read@value_high+1
  2354                           
  2355                           ;MPU6050.c: 58: Sensor->Gyro.Z = value_high | value_low;
  2356  06B6  3000               	movlw	0
  2357  06B7  3184  2434  3186   	fcall	_I2C_Master_Read
  2358  06BA  00F9               	movwf	??_MPU6050_Read
  2359  06BB  0879               	movf	??_MPU6050_Read,w
  2360  06BC  0020               	movlb	0	; select bank0
  2361  06BD  00A2               	movwf	MPU6050_Read@value_low
  2362                           
  2363                           ;MPU6050.c: 61: Sensor->Temperature += 12421;
  2364  06BE  3183  23EC  3186   	fcall	_I2C_Master_Stop
  2365                           
  2366                           ;MPU6050.c: 62: Sensor->Temperature /= 340;
  2367  06C1  3054               	movlw	84
  2368  06C2  00F0               	movwf	___awdiv@divisor
  2369  06C3  3001               	movlw	1
  2370  06C4  00F1               	movwf	___awdiv@divisor+1
  2371  06C5  0020               	movlb	0	; select bank0
  2372  06C6  0823               	movf	MPU6050_Read@Sensor,w
  2373  06C7  3E06               	addlw	6
  2374  06C8  0086               	movwf	6
  2375  06C9  0187               	clrf	7
  2376  06CA  3F40               	moviw [0]fsr1
  2377  06CB  00F2               	movwf	___awdiv@dividend
  2378  06CC  3F41               	moviw [1]fsr1
  2379  06CD  00F3               	movwf	___awdiv@dividend+1
  2380  06CE  3185  255F         	fcall	___awdiv
  2381  06D0  0020               	movlb	0	; select bank0
  2382  06D1  0823               	movf	MPU6050_Read@Sensor,w
  2383  06D2  3E06               	addlw	6
  2384  06D3  0086               	movwf	6
  2385  06D4  0187               	clrf	7
  2386  06D5  0870               	movf	?___awdiv,w
  2387  06D6  3FC0               	movwi [0]fsr1
  2388  06D7  0871               	movf	?___awdiv+1,w
  2389  06D8  3FC1               	movwi [1]fsr1
  2390  06D9  0008               	return
  2391  06DA                     __end_of_MPU6050_Read:	
  2392                           
  2393                           	psect	text10
  2394  055F                     __ptext10:	
  2395 ;; *************** function ___awdiv *****************
  2396 ;; Defined at:
  2397 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  divisor         2    0[COMMON] int 
  2400 ;;  dividend        2    2[COMMON] int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  quotient        2    7[COMMON] int 
  2403 ;;  sign            1    6[COMMON] unsigned char 
  2404 ;;  counter         1    5[COMMON] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2    0[COMMON] int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;Total ram usage:        9 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_MPU6050_Read
  2424 ;;		_int2str
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function ___awdiv
  2430  055F                     ___awdiv:	
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2434  055F  01F6               	clrf	___awdiv@sign
  2435  0560  1FF1               	btfss	___awdiv@divisor+1,7
  2436  0561  2D69               	goto	l893
  2437  0562  09F0               	comf	___awdiv@divisor,f
  2438  0563  09F1               	comf	___awdiv@divisor+1,f
  2439  0564  0AF0               	incf	___awdiv@divisor,f
  2440  0565  1903               	skipnz
  2441  0566  0AF1               	incf	___awdiv@divisor+1,f
  2442  0567  01F6               	clrf	___awdiv@sign
  2443  0568  0AF6               	incf	___awdiv@sign,f
  2444  0569                     l893:	
  2445  0569  1FF3               	btfss	___awdiv@dividend+1,7
  2446  056A  2D74               	goto	l899
  2447  056B  09F2               	comf	___awdiv@dividend,f
  2448  056C  09F3               	comf	___awdiv@dividend+1,f
  2449  056D  0AF2               	incf	___awdiv@dividend,f
  2450  056E  1903               	skipnz
  2451  056F  0AF3               	incf	___awdiv@dividend+1,f
  2452  0570  3001               	movlw	1
  2453  0571  00F4               	movwf	??___awdiv
  2454  0572  0874               	movf	??___awdiv,w
  2455  0573  06F6               	xorwf	___awdiv@sign,f
  2456  0574                     l899:	
  2457  0574  01F7               	clrf	___awdiv@quotient
  2458  0575  01F8               	clrf	___awdiv@quotient+1
  2459  0576  0870               	movf	___awdiv@divisor,w
  2460  0577  0471               	iorwf	___awdiv@divisor+1,w
  2461  0578  1903               	btfsc	3,2
  2462  0579  2DA3               	goto	l921
  2463  057A  01F5               	clrf	___awdiv@counter
  2464  057B  0AF5               	incf	___awdiv@counter,f
  2465  057C                     l909:	
  2466  057C  1BF1               	btfsc	___awdiv@divisor+1,7
  2467  057D  2D88               	goto	l911
  2468  057E  3001               	movlw	1
  2469  057F                     u415:	
  2470  057F  35F0               	lslf	___awdiv@divisor,f
  2471  0580  0DF1               	rlf	___awdiv@divisor+1,f
  2472  0581  0B89               	decfsz	9,f
  2473  0582  2D7F               	goto	u415
  2474  0583  3001               	movlw	1
  2475  0584  00F4               	movwf	??___awdiv
  2476  0585  0874               	movf	??___awdiv,w
  2477  0586  07F5               	addwf	___awdiv@counter,f
  2478  0587  2D7C               	goto	l909
  2479  0588                     l911:	
  2480  0588  3001               	movlw	1
  2481  0589                     u435:	
  2482  0589  35F7               	lslf	___awdiv@quotient,f
  2483  058A  0DF8               	rlf	___awdiv@quotient+1,f
  2484  058B  0B89               	decfsz	9,f
  2485  058C  2D89               	goto	u435
  2486  058D  0871               	movf	___awdiv@divisor+1,w
  2487  058E  0273               	subwf	___awdiv@dividend+1,w
  2488  058F  1D03               	skipz
  2489  0590  2D93               	goto	u445
  2490  0591  0870               	movf	___awdiv@divisor,w
  2491  0592  0272               	subwf	___awdiv@dividend,w
  2492  0593                     u445:	
  2493  0593  1C03               	skipc
  2494  0594  2D9A               	goto	l917
  2495  0595  0870               	movf	___awdiv@divisor,w
  2496  0596  02F2               	subwf	___awdiv@dividend,f
  2497  0597  0871               	movf	___awdiv@divisor+1,w
  2498  0598  3BF3               	subwfb	___awdiv@dividend+1,f
  2499  0599  1477               	bsf	___awdiv@quotient,0
  2500  059A                     l917:	
  2501  059A  3001               	movlw	1
  2502  059B                     u455:	
  2503  059B  36F1               	lsrf	___awdiv@divisor+1,f
  2504  059C  0CF0               	rrf	___awdiv@divisor,f
  2505  059D  0B89               	decfsz	9,f
  2506  059E  2D9B               	goto	u455
  2507  059F  3001               	movlw	1
  2508  05A0  02F5               	subwf	___awdiv@counter,f
  2509  05A1  1D03               	btfss	3,2
  2510  05A2  2D88               	goto	l911
  2511  05A3                     l921:	
  2512  05A3  0876               	movf	___awdiv@sign,w
  2513  05A4  1903               	btfsc	3,2
  2514  05A5  2DAB               	goto	l925
  2515  05A6  09F7               	comf	___awdiv@quotient,f
  2516  05A7  09F8               	comf	___awdiv@quotient+1,f
  2517  05A8  0AF7               	incf	___awdiv@quotient,f
  2518  05A9  1903               	skipnz
  2519  05AA  0AF8               	incf	___awdiv@quotient+1,f
  2520  05AB                     l925:	
  2521  05AB  0878               	movf	___awdiv@quotient+1,w
  2522  05AC  00F1               	movwf	?___awdiv+1
  2523  05AD  0877               	movf	___awdiv@quotient,w
  2524  05AE  00F0               	movwf	?___awdiv
  2525  05AF  0008               	return
  2526  05B0                     __end_of___awdiv:	
  2527                           
  2528                           	psect	text11
  2529  03F1                     __ptext11:	
  2530 ;; *************** function _I2C_Master_Write *****************
  2531 ;; Defined at:
  2532 ;;		line 40 in file "i2c.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  d               1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  d               1    0[COMMON] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		_I2C_Master_Wait
  2555 ;; This function is called by:
  2556 ;;		_MPU6050_Init
  2557 ;;		_MPU6050_Read
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _I2C_Master_Write
  2564  03F1                     _I2C_Master_Write:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2568                           ;I2C_Master_Write@d stored from wreg
  2569  03F1  00F0               	movwf	I2C_Master_Write@d
  2570                           
  2571                           ;i2c.c: 41: I2C_Master_Wait();
  2572  03F2  3183  23F8         	fcall	_I2C_Master_Wait
  2573                           
  2574                           ;i2c.c: 42: SSPBUF = d;
  2575  03F4  0870               	movf	I2C_Master_Write@d,w
  2576  03F5  0024               	movlb	4	; select bank4
  2577  03F6  0091               	movwf	17	;volatile
  2578  03F7  0008               	return
  2579  03F8                     __end_of_I2C_Master_Write:	
  2580                           
  2581                           	psect	text12
  2582  03EC                     __ptext12:	
  2583 ;; *************** function _I2C_Master_Stop *****************
  2584 ;; Defined at:
  2585 ;;		line 35 in file "i2c.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0, pclath, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    1
  2606 ;; This function calls:
  2607 ;;		_I2C_Master_Wait
  2608 ;; This function is called by:
  2609 ;;		_MPU6050_Init
  2610 ;;		_MPU6050_Read
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _I2C_Master_Stop
  2617  03EC                     _I2C_Master_Stop:	
  2618                           
  2619                           ;i2c.c: 36: I2C_Master_Wait();
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2623  03EC  3183  23F8         	fcall	_I2C_Master_Wait
  2624                           
  2625                           ;i2c.c: 37: PEN = 1;
  2626  03EE  0024               	movlb	4	; select bank4
  2627  03EF  1516               	bsf	22,2	;volatile
  2628  03F0  0008               	return
  2629  03F1                     __end_of_I2C_Master_Stop:	
  2630                           
  2631                           	psect	text13
  2632  03E7                     __ptext13:	
  2633 ;; *************** function _I2C_Master_Start *****************
  2634 ;; Defined at:
  2635 ;;		line 25 in file "i2c.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    1
  2656 ;; This function calls:
  2657 ;;		_I2C_Master_Wait
  2658 ;; This function is called by:
  2659 ;;		_MPU6050_Init
  2660 ;;		_MPU6050_Read
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _I2C_Master_Start
  2667  03E7                     _I2C_Master_Start:	
  2668                           
  2669                           ;i2c.c: 26: I2C_Master_Wait();
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2673  03E7  3183  23F8         	fcall	_I2C_Master_Wait
  2674                           
  2675                           ;i2c.c: 27: SEN = 1;
  2676  03E9  0024               	movlb	4	; select bank4
  2677  03EA  1416               	bsf	22,0	;volatile
  2678  03EB  0008               	return
  2679  03EC                     __end_of_I2C_Master_Start:	
  2680                           
  2681                           	psect	text14
  2682  03E2                     __ptext14:	
  2683 ;; *************** function _I2C_Master_Restart *****************
  2684 ;; Defined at:
  2685 ;;		line 30 in file "i2c.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		_I2C_Master_Wait
  2708 ;; This function is called by:
  2709 ;;		_MPU6050_Read
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _I2C_Master_Restart
  2715  03E2                     _I2C_Master_Restart:	
  2716                           
  2717                           ;i2c.c: 31: I2C_Master_Wait();
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _I2C_Master_Restart: [wreg+status,2+status,0+pclath+cstack]
  2721  03E2  3183  23F8         	fcall	_I2C_Master_Wait
  2722                           
  2723                           ;i2c.c: 32: RSEN = 1;
  2724  03E4  0024               	movlb	4	; select bank4
  2725  03E5  1496               	bsf	22,1	;volatile
  2726  03E6  0008               	return
  2727  03E7                     __end_of_I2C_Master_Restart:	
  2728                           
  2729                           	psect	text15
  2730  0434                     __ptext15:	
  2731 ;; *************** function _I2C_Master_Read *****************
  2732 ;; Defined at:
  2733 ;;		line 45 in file "i2c.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  device          1    wreg     unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  device          1    1[COMMON] unsigned char 
  2738 ;;  temp            1    2[COMMON] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;Total ram usage:        3 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		_I2C_Master_Wait
  2757 ;; This function is called by:
  2758 ;;		_MPU6050_Read
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _I2C_Master_Read
  2764  0434                     _I2C_Master_Read:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2768                           ;I2C_Master_Read@device stored from wreg
  2769  0434  00F1               	movwf	I2C_Master_Read@device
  2770                           
  2771                           ;i2c.c: 47: char temp;
  2772                           ;i2c.c: 48: I2C_Master_Wait();
  2773  0435  3183  23F8  3184   	fcall	_I2C_Master_Wait
  2774                           
  2775                           ;i2c.c: 49: RCEN = 1;
  2776  0438  0024               	movlb	4	; select bank4
  2777  0439  1596               	bsf	22,3	;volatile
  2778                           
  2779                           ;i2c.c: 50: I2C_Master_Wait();
  2780  043A  3183  23F8  3184   	fcall	_I2C_Master_Wait
  2781                           
  2782                           ;i2c.c: 51: temp = SSPBUF;
  2783  043D  0024               	movlb	4	; select bank4
  2784  043E  0811               	movf	17,w	;volatile
  2785  043F  00F0               	movwf	??_I2C_Master_Read
  2786  0440  0870               	movf	??_I2C_Master_Read,w
  2787  0441  00F2               	movwf	I2C_Master_Read@temp
  2788                           
  2789                           ;i2c.c: 52: I2C_Master_Wait();
  2790  0442  3183  23F8  3184   	fcall	_I2C_Master_Wait
  2791                           
  2792                           ;i2c.c: 55: if(!device){
  2793  0445  0871               	movf	I2C_Master_Read@device,w
  2794  0446  1D03               	btfss	3,2
  2795  0447  2C4B               	goto	l865
  2796                           
  2797                           ;i2c.c: 56: ACKDT = 0;
  2798  0448  0024               	movlb	4	; select bank4
  2799  0449  1296               	bcf	22,5	;volatile
  2800                           
  2801                           ;i2c.c: 57: ACKEN = 1;
  2802  044A  1616               	bsf	22,4	;volatile
  2803  044B                     l865:	
  2804                           
  2805                           ;i2c.c: 58: }
  2806                           ;i2c.c: 59: return temp;
  2807  044B  0872               	movf	I2C_Master_Read@temp,w
  2808  044C  0008               	return
  2809  044D                     __end_of_I2C_Master_Read:	
  2810                           
  2811                           	psect	text16
  2812  03F8                     __ptext16:	
  2813 ;; *************** function _I2C_Master_Wait *****************
  2814 ;; Defined at:
  2815 ;;		line 21 in file "i2c.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_I2C_Master_Start
  2839 ;;		_I2C_Master_Restart
  2840 ;;		_I2C_Master_Stop
  2841 ;;		_I2C_Master_Write
  2842 ;;		_I2C_Master_Read
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _I2C_Master_Wait
  2848  03F8                     _I2C_Master_Wait:	
  2849  03F8                     l32:	
  2850                           ;i2c.c: 22: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2854                           
  2855  03F8  0024               	movlb	4	; select bank4
  2856  03F9  1914               	btfsc	20,2	;volatile
  2857  03FA  2BF8               	goto	l32
  2858  03FB  0816               	movf	22,w	;volatile
  2859  03FC  391F               	andlw	31
  2860  03FD  1903               	btfsc	3,2
  2861  03FE  0008               	return
  2862  03FF  2BF8               	goto	l32
  2863  0400                     __end_of_I2C_Master_Wait:	
  2864                           
  2865                           	psect	text17
  2866  0412                     __ptext17:	
  2867 ;; *************** function _Initialize_UART *****************
  2868 ;; Defined at:
  2869 ;;		line 6 in file "uart.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _Initialize_UART
  2898  0412                     _Initialize_UART:	
  2899                           
  2900                           ;uart.c: 9: TRISC6 = 0;
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _Initialize_UART: [wreg]
  2904  0412  0021               	movlb	1	; select bank1
  2905  0413  130E               	bcf	14,6	;volatile
  2906                           
  2907                           ;uart.c: 10: TRISC7 = 1;
  2908  0414  178E               	bsf	14,7	;volatile
  2909                           
  2910                           ;uart.c: 15: SPBRG = ((16000000L/16)/9600) - 1;
  2911  0415  3067               	movlw	103
  2912  0416  0023               	movlb	3	; select bank3
  2913  0417  009B               	movwf	27	;volatile
  2914                           
  2915                           ;uart.c: 16: BRGH = 1;
  2916  0418  151E               	bsf	30,2	;volatile
  2917                           
  2918                           ;uart.c: 20: SYNC = 0;
  2919  0419  121E               	bcf	30,4	;volatile
  2920                           
  2921                           ;uart.c: 21: SPEN = 1;
  2922  041A  179D               	bsf	29,7	;volatile
  2923                           
  2924                           ;uart.c: 25: TXEN = 1;
  2925  041B  169E               	bsf	30,5	;volatile
  2926                           
  2927                           ;uart.c: 26: CREN = 1;
  2928  041C  161D               	bsf	29,4	;volatile
  2929                           
  2930                           ;uart.c: 30: TX9 = 0;
  2931  041D  131E               	bcf	30,6	;volatile
  2932                           
  2933                           ;uart.c: 31: RX9 = 0;
  2934  041E  131D               	bcf	29,6	;volatile
  2935  041F  0008               	return
  2936  0420                     __end_of_Initialize_UART:	
  2937                           
  2938                           	psect	text18
  2939  0408                     __ptext18:	
  2940 ;; *************** function _I2C_Master_Init *****************
  2941 ;; Defined at:
  2942 ;;		line 12 in file "i2c.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function _I2C_Master_Init
  2971  0408                     _I2C_Master_Init:	
  2972                           
  2973                           ;i2c.c: 13: SSPCON1 = 0x28;
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2977  0408  3028               	movlw	40
  2978  0409  0024               	movlb	4	; select bank4
  2979  040A  0095               	movwf	21	;volatile
  2980                           
  2981                           ;i2c.c: 14: SSPCON2 = 0x0;
  2982  040B  0196               	clrf	22	;volatile
  2983                           
  2984                           ;i2c.c: 15: SSPADD = 16000000L/(4*400000L) - 1;
  2985  040C  3009               	movlw	9
  2986  040D  0092               	movwf	18	;volatile
  2987                           
  2988                           ;i2c.c: 16: TRISC3 = 1;
  2989  040E  0021               	movlb	1	; select bank1
  2990  040F  158E               	bsf	14,3	;volatile
  2991                           
  2992                           ;i2c.c: 17: TRISC4 = 1;
  2993  0410  160E               	bsf	14,4	;volatile
  2994  0411  0008               	return
  2995  0412                     __end_of_I2C_Master_Init:	
  2996  007E                     btemp	set	126	;btemp
  2997  007E                     wtemp0	set	126


Data Sizes:
    Strings     151
    Constant    0
=======
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.45
    35                           ; Generated 16/11/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1518 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020D                     	;# 
   141  0210                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0298                     	;# 
   162  0298                     	;# 
   163  0299                     	;# 
   164  029A                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  0116                     	;# 
   226  0117                     	;# 
   227  011D                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  018E                     	;# 
   231  0191                     	;# 
   232  0191                     	;# 
   233  0192                     	;# 
   234  0193                     	;# 
   235  0193                     	;# 
   236  0194                     	;# 
   237  0195                     	;# 
   238  0196                     	;# 
   239  0197                     	;# 
   240  0199                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019D                     	;# 
   249  019E                     	;# 
   250  019F                     	;# 
   251  020D                     	;# 
   252  0210                     	;# 
   253  0211                     	;# 
   254  0211                     	;# 
   255  0212                     	;# 
   256  0212                     	;# 
   257  0213                     	;# 
   258  0213                     	;# 
   259  0214                     	;# 
   260  0214                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0216                     	;# 
   265  0216                     	;# 
   266  0217                     	;# 
   267  0217                     	;# 
   268  0291                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0293                     	;# 
   272  0298                     	;# 
   273  0298                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  0394                     	;# 
   277  0395                     	;# 
   278  0396                     	;# 
   279  0FE4                     	;# 
   280  0FE5                     	;# 
   281  0FE6                     	;# 
   282  0FE7                     	;# 
   283  0FE8                     	;# 
   284  0FE9                     	;# 
   285  0FEA                     	;# 
   286  0FEB                     	;# 
   287  0FED                     	;# 
   288  0FEE                     	;# 
   289  0FEF                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  0090                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0099                     	;# 
   327  009A                     	;# 
   328  009B                     	;# 
   329  009B                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  011D                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  018E                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0197                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020D                     	;# 
   363  0210                     	;# 
   364  0211                     	;# 
   365  0211                     	;# 
   366  0212                     	;# 
   367  0212                     	;# 
   368  0213                     	;# 
   369  0213                     	;# 
   370  0214                     	;# 
   371  0214                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0215                     	;# 
   375  0216                     	;# 
   376  0216                     	;# 
   377  0217                     	;# 
   378  0217                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0298                     	;# 
   384  0298                     	;# 
   385  0299                     	;# 
   386  029A                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  011D                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  018E                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0197                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020D                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0291                     	;# 
   491  0291                     	;# 
   492  0292                     	;# 
   493  0293                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  0394                     	;# 
   499  0395                     	;# 
   500  0396                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  0010                     	;# 
   528  0011                     	;# 
   529  0012                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  0090                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  011D                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  0191                     	;# 
   565  0191                     	;# 
   566  0192                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0194                     	;# 
   570  0195                     	;# 
   571  0196                     	;# 
   572  0197                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020D                     	;# 
   585  0210                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0291                     	;# 
   602  0291                     	;# 
   603  0292                     	;# 
   604  0293                     	;# 
   605  0298                     	;# 
   606  0298                     	;# 
   607  0299                     	;# 
   608  029A                     	;# 
   609  0394                     	;# 
   610  0395                     	;# 
   611  0396                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  0019                     	;# 
   647  001A                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  008C                     	;# 
   651  008D                     	;# 
   652  008E                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0092                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  011D                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  0191                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0197                     	;# 
   684  0199                     	;# 
   685  019A                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019B                     	;# 
   690  019C                     	;# 
   691  019C                     	;# 
   692  019D                     	;# 
   693  019E                     	;# 
   694  019F                     	;# 
   695  020D                     	;# 
   696  0210                     	;# 
   697  0211                     	;# 
   698  0211                     	;# 
   699  0212                     	;# 
   700  0212                     	;# 
   701  0213                     	;# 
   702  0213                     	;# 
   703  0214                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0291                     	;# 
   713  0291                     	;# 
   714  0292                     	;# 
   715  0293                     	;# 
   716  0298                     	;# 
   717  0298                     	;# 
   718  0299                     	;# 
   719  029A                     	;# 
   720  0394                     	;# 
   721  0395                     	;# 
   722  0396                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734                           
   735                           	psect	stringtext1
   736  0800                     __pstringtext1:	
   737  0800                     _ov7670_default_regs:	
   738  0800  3412               	retlw	18
   739  0801  3400               	retlw	0
   740  0802  3480               	retlw	128
   741  0803  3400               	retlw	0
   742  0804  343A               	retlw	58
   743  0805  3400               	retlw	0
   744  0806  3404               	retlw	4
   745  0807  3400               	retlw	0
   746  0808  3412               	retlw	18
   747  0809  3400               	retlw	0
   748  080A  3400               	retlw	0
   749  080B  3400               	retlw	0
   750  080C  3417               	retlw	23
   751  080D  3400               	retlw	0
   752  080E  3413               	retlw	19
   753  080F  3400               	retlw	0
   754  0810  3418               	retlw	24
   755  0811  3400               	retlw	0
   756  0812  3401               	retlw	1
   757  0813  3400               	retlw	0
   758  0814  3432               	retlw	50
   759  0815  3400               	retlw	0
   760  0816  34B6               	retlw	182
   761  0817  3400               	retlw	0
   762  0818  3419               	retlw	25
   763  0819  3400               	retlw	0
   764  081A  3402               	retlw	2
   765  081B  3400               	retlw	0
   766  081C  341A               	retlw	26
   767  081D  3400               	retlw	0
   768  081E  347A               	retlw	122
   769  081F  3400               	retlw	0
   770  0820  3403               	retlw	3
   771  0821  3400               	retlw	0
   772  0822  340A               	retlw	10
   773  0823  3400               	retlw	0
   774  0824  340C               	retlw	12
   775  0825  3400               	retlw	0
   776  0826  3400               	retlw	0
   777  0827  3400               	retlw	0
   778  0828  343E               	retlw	62
   779  0829  3400               	retlw	0
   780  082A  3400               	retlw	0
   781  082B  3400               	retlw	0
   782  082C  3470               	retlw	112
   783  082D  3400               	retlw	0
   784  082E  343A               	retlw	58
   785  082F  3400               	retlw	0
   786  0830  3471               	retlw	113
   787  0831  3400               	retlw	0
   788  0832  3435               	retlw	53
   789  0833  3400               	retlw	0
   790  0834  3472               	retlw	114
   791  0835  3400               	retlw	0
   792  0836  3411               	retlw	17
   793  0837  3400               	retlw	0
   794  0838  3473               	retlw	115
   795  0839  3400               	retlw	0
   796  083A  34F0               	retlw	240
   797  083B  3400               	retlw	0
   798  083C  34A2               	retlw	162
   799  083D  3400               	retlw	0
   800  083E  3401               	retlw	1
   801  083F  3400               	retlw	0
   802  0840  3415               	retlw	21
   803  0841  3400               	retlw	0
   804  0842  3400               	retlw	0
   805  0843  3400               	retlw	0
   806  0844  347A               	retlw	122
   807  0845  3400               	retlw	0
   808  0846  3420               	retlw	32
   809  0847  3400               	retlw	0
   810  0848  347B               	retlw	123
   811  0849  3400               	retlw	0
   812  084A  3410               	retlw	16
   813  084B  3400               	retlw	0
   814  084C  347C               	retlw	124
   815  084D  3400               	retlw	0
   816  084E  341E               	retlw	30
   817  084F  3400               	retlw	0
   818  0850  347D               	retlw	125
   819  0851  3400               	retlw	0
   820  0852  3435               	retlw	53
   821  0853  3400               	retlw	0
   822  0854  347E               	retlw	126
   823  0855  3400               	retlw	0
   824  0856  345A               	retlw	90
   825  0857  3400               	retlw	0
   826  0858  347F               	retlw	127
   827  0859  3400               	retlw	0
   828  085A  3469               	retlw	105
   829  085B  3400               	retlw	0
   830  085C  3480               	retlw	128
   831  085D  3400               	retlw	0
   832  085E  3476               	retlw	118
   833  085F  3400               	retlw	0
   834  0860  3481               	retlw	129
   835  0861  3400               	retlw	0
   836  0862  3480               	retlw	128
   837  0863  3400               	retlw	0
   838  0864  3482               	retlw	130
   839  0865  3400               	retlw	0
   840  0866  3488               	retlw	136
   841  0867  3400               	retlw	0
   842  0868  3483               	retlw	131
   843  0869  3400               	retlw	0
   844  086A  348F               	retlw	143
   845  086B  3400               	retlw	0
   846  086C  3484               	retlw	132
   847  086D  3400               	retlw	0
   848  086E  3496               	retlw	150
   849  086F  3400               	retlw	0
   850  0870  3485               	retlw	133
   851  0871  3400               	retlw	0
   852  0872  34A3               	retlw	163
   853  0873  3400               	retlw	0
   854  0874  3486               	retlw	134
   855  0875  3400               	retlw	0
   856  0876  34AF               	retlw	175
   857  0877  3400               	retlw	0
   858  0878  3487               	retlw	135
   859  0879  3400               	retlw	0
   860  087A  34C4               	retlw	196
   861  087B  3400               	retlw	0
   862  087C  3488               	retlw	136
   863  087D  3400               	retlw	0
   864  087E  34D7               	retlw	215
   865  087F  3400               	retlw	0
   866  0880  3489               	retlw	137
   867  0881  3400               	retlw	0
   868  0882  34E8               	retlw	232
   869  0883  3400               	retlw	0
   870  0884  3413               	retlw	19
   871  0885  3400               	retlw	0
   872  0886  34C0               	retlw	192
   873  0887  3400               	retlw	0
   874  0888  3400               	retlw	0
   875  0889  3400               	retlw	0
   876  088A  3400               	retlw	0
   877  088B  3400               	retlw	0
   878  088C  3410               	retlw	16
   879  088D  3400               	retlw	0
   880  088E  3400               	retlw	0
   881  088F  3400               	retlw	0
   882  0890  340D               	retlw	13
   883  0891  3400               	retlw	0
   884  0892  3440               	retlw	64
   885  0893  3400               	retlw	0
   886  0894  3414               	retlw	20
   887  0895  3400               	retlw	0
   888  0896  3418               	retlw	24
   889  0897  3400               	retlw	0
   890  0898  34A5               	retlw	165
   891  0899  3400               	retlw	0
   892  089A  3405               	retlw	5
   893  089B  3400               	retlw	0
   894  089C  34AB               	retlw	171
   895  089D  3400               	retlw	0
   896  089E  3407               	retlw	7
   897  089F  3400               	retlw	0
   898  08A0  3424               	retlw	36
   899  08A1  3400               	retlw	0
   900  08A2  3495               	retlw	149
   901  08A3  3400               	retlw	0
   902  08A4  3425               	retlw	37
   903  08A5  3400               	retlw	0
   904  08A6  3433               	retlw	51
   905  08A7  3400               	retlw	0
   906  08A8  3426               	retlw	38
   907  08A9  3400               	retlw	0
   908  08AA  34E3               	retlw	227
   909  08AB  3400               	retlw	0
   910  08AC  349F               	retlw	159
   911  08AD  3400               	retlw	0
   912  08AE  3478               	retlw	120
   913  08AF  3400               	retlw	0
   914  08B0  34A0               	retlw	160
   915  08B1  3400               	retlw	0
   916  08B2  3468               	retlw	104
   917  08B3  3400               	retlw	0
   918  08B4  34A1               	retlw	161
   919  08B5  3400               	retlw	0
   920  08B6  3403               	retlw	3
   921  08B7  3400               	retlw	0
   922  08B8  34A6               	retlw	166
   923  08B9  3400               	retlw	0
   924  08BA  34D8               	retlw	216
   925  08BB  3400               	retlw	0
   926  08BC  34A7               	retlw	167
   927  08BD  3400               	retlw	0
   928  08BE  34D8               	retlw	216
   929  08BF  3400               	retlw	0
   930  08C0  34A8               	retlw	168
   931  08C1  3400               	retlw	0
   932  08C2  34F0               	retlw	240
   933  08C3  3400               	retlw	0
   934  08C4  34A9               	retlw	169
   935  08C5  3400               	retlw	0
   936  08C6  3490               	retlw	144
   937  08C7  3400               	retlw	0
   938  08C8  34AA               	retlw	170
   939  08C9  3400               	retlw	0
   940  08CA  3494               	retlw	148
   941  08CB  3400               	retlw	0
   942  08CC  3413               	retlw	19
   943  08CD  3400               	retlw	0
   944  08CE  34C5               	retlw	197
   945  08CF  3400               	retlw	0
   946  08D0  3430               	retlw	48
   947  08D1  3400               	retlw	0
   948  08D2  3400               	retlw	0
   949  08D3  3400               	retlw	0
   950  08D4  3431               	retlw	49
   951  08D5  3400               	retlw	0
   952  08D6  3400               	retlw	0
   953  08D7  3400               	retlw	0
   954  08D8  340E               	retlw	14
   955  08D9  3400               	retlw	0
   956  08DA  3461               	retlw	97
   957  08DB  3400               	retlw	0
   958  08DC  340F               	retlw	15
   959  08DD  3400               	retlw	0
   960  08DE  344B               	retlw	75
   961  08DF  3400               	retlw	0
   962  08E0  3416               	retlw	22
   963  08E1  3400               	retlw	0
   964  08E2  3402               	retlw	2
   965  08E3  3400               	retlw	0
   966  08E4  341E               	retlw	30
   967  08E5  3400               	retlw	0
   968  08E6  3407               	retlw	7
   969  08E7  3400               	retlw	0
   970  08E8  3421               	retlw	33
   971  08E9  3400               	retlw	0
   972  08EA  3402               	retlw	2
   973  08EB  3400               	retlw	0
   974  08EC  3422               	retlw	34
   975  08ED  3400               	retlw	0
   976  08EE  3491               	retlw	145
   977  08EF  3400               	retlw	0
   978  08F0  3429               	retlw	41
   979  08F1  3400               	retlw	0
   980  08F2  3407               	retlw	7
   981  08F3  3400               	retlw	0
   982  08F4  3433               	retlw	51
   983  08F5  3400               	retlw	0
   984  08F6  340B               	retlw	11
   985  08F7  3400               	retlw	0
   986  08F8  3435               	retlw	53
   987  08F9  3400               	retlw	0
   988  08FA  340B               	retlw	11
   989  08FB  3400               	retlw	0
   990  08FC  3437               	retlw	55
   991  08FD  3400               	retlw	0
   992  08FE  341D               	retlw	29
   993  08FF  3400               	retlw	0
   994  0900  3438               	retlw	56
   995  0901  3400               	retlw	0
   996  0902  3471               	retlw	113
   997  0903  3400               	retlw	0
   998  0904  3439               	retlw	57
   999  0905  3400               	retlw	0
  1000  0906  342A               	retlw	42
  1001  0907  3400               	retlw	0
  1002  0908  343C               	retlw	60
  1003  0909  3400               	retlw	0
  1004  090A  3478               	retlw	120
  1005  090B  3400               	retlw	0
  1006  090C  344D               	retlw	77
  1007  090D  3400               	retlw	0
  1008  090E  3440               	retlw	64
  1009  090F  3400               	retlw	0
  1010  0910  344E               	retlw	78
  1011  0911  3400               	retlw	0
  1012  0912  3420               	retlw	32
  1013  0913  3400               	retlw	0
  1014  0914  3469               	retlw	105
  1015  0915  3400               	retlw	0
  1016  0916  3400               	retlw	0
  1017  0917  3400               	retlw	0
  1018  0918  3474               	retlw	116
  1019  0919  3400               	retlw	0
  1020  091A  3410               	retlw	16
  1021  091B  3400               	retlw	0
  1022  091C  348D               	retlw	141
  1023  091D  3400               	retlw	0
  1024  091E  344F               	retlw	79
  1025  091F  3400               	retlw	0
  1026  0920  348E               	retlw	142
  1027  0921  3400               	retlw	0
  1028  0922  3400               	retlw	0
  1029  0923  3400               	retlw	0
  1030  0924  348F               	retlw	143
  1031  0925  3400               	retlw	0
  1032  0926  3400               	retlw	0
  1033  0927  3400               	retlw	0
  1034  0928  3490               	retlw	144
  1035  0929  3400               	retlw	0
  1036  092A  3400               	retlw	0
  1037  092B  3400               	retlw	0
  1038  092C  3491               	retlw	145
  1039  092D  3400               	retlw	0
  1040  092E  3400               	retlw	0
  1041  092F  3400               	retlw	0
  1042  0930  3496               	retlw	150
  1043  0931  3400               	retlw	0
  1044  0932  3400               	retlw	0
  1045  0933  3400               	retlw	0
  1046  0934  349A               	retlw	154
  1047  0935  3400               	retlw	0
  1048  0936  3400               	retlw	0
  1049  0937  3400               	retlw	0
  1050  0938  34B0               	retlw	176
  1051  0939  3400               	retlw	0
  1052  093A  3484               	retlw	132
  1053  093B  3400               	retlw	0
  1054  093C  34B1               	retlw	177
  1055  093D  3400               	retlw	0
  1056  093E  340C               	retlw	12
  1057  093F  3400               	retlw	0
  1058  0940  34B2               	retlw	178
  1059  0941  3400               	retlw	0
  1060  0942  340E               	retlw	14
  1061  0943  3400               	retlw	0
  1062  0944  34B3               	retlw	179
  1063  0945  3400               	retlw	0
  1064  0946  3482               	retlw	130
  1065  0947  3400               	retlw	0
  1066  0948  34B8               	retlw	184
  1067  0949  3400               	retlw	0
  1068  094A  340A               	retlw	10
  1069  094B  3400               	retlw	0
  1070  094C  3443               	retlw	67
  1071  094D  3400               	retlw	0
  1072  094E  340A               	retlw	10
  1073  094F  3400               	retlw	0
  1074  0950  3444               	retlw	68
  1075  0951  3400               	retlw	0
  1076  0952  34F0               	retlw	240
  1077  0953  3400               	retlw	0
  1078  0954  3445               	retlw	69
  1079  0955  3400               	retlw	0
  1080  0956  3434               	retlw	52
  1081  0957  3400               	retlw	0
  1082  0958  3446               	retlw	70
  1083  0959  3400               	retlw	0
  1084  095A  3458               	retlw	88
  1085  095B  3400               	retlw	0
  1086  095C  3447               	retlw	71
  1087  095D  3400               	retlw	0
  1088  095E  3428               	retlw	40
  1089  095F  3400               	retlw	0
  1090  0960  3448               	retlw	72
  1091  0961  3400               	retlw	0
  1092  0962  343A               	retlw	58
  1093  0963  3400               	retlw	0
  1094  0964  3459               	retlw	89
  1095  0965  3400               	retlw	0
  1096  0966  3488               	retlw	136
  1097  0967  3400               	retlw	0
  1098  0968  345A               	retlw	90
  1099  0969  3400               	retlw	0
  1100  096A  3488               	retlw	136
  1101  096B  3400               	retlw	0
  1102  096C  345B               	retlw	91
  1103  096D  3400               	retlw	0
  1104  096E  3444               	retlw	68
  1105  096F  3400               	retlw	0
  1106  0970  345C               	retlw	92
  1107  0971  3400               	retlw	0
  1108  0972  3467               	retlw	103
  1109  0973  3400               	retlw	0
  1110  0974  345D               	retlw	93
  1111  0975  3400               	retlw	0
  1112  0976  3449               	retlw	73
  1113  0977  3400               	retlw	0
  1114  0978  345E               	retlw	94
  1115  0979  3400               	retlw	0
  1116  097A  340E               	retlw	14
  1117  097B  3400               	retlw	0
  1118  097C  346C               	retlw	108
  1119  097D  3400               	retlw	0
  1120  097E  340A               	retlw	10
  1121  097F  3400               	retlw	0
  1122  0980  346D               	retlw	109
  1123  0981  3400               	retlw	0
  1124  0982  3455               	retlw	85
  1125  0983  3400               	retlw	0
  1126  0984  346E               	retlw	110
  1127  0985  3400               	retlw	0
  1128  0986  3411               	retlw	17
  1129  0987  3400               	retlw	0
  1130  0988  346F               	retlw	111
  1131  0989  3400               	retlw	0
  1132  098A  349E               	retlw	158
  1133  098B  3400               	retlw	0
  1134  098C  346A               	retlw	106
  1135  098D  3400               	retlw	0
  1136  098E  3440               	retlw	64
  1137  098F  3400               	retlw	0
  1138  0990  3401               	retlw	1
  1139  0991  3400               	retlw	0
  1140  0992  3440               	retlw	64
  1141  0993  3400               	retlw	0
  1142  0994  3402               	retlw	2
  1143  0995  3400               	retlw	0
  1144  0996  3460               	retlw	96
  1145  0997  3400               	retlw	0
  1146  0998  3413               	retlw	19
  1147  0999  3400               	retlw	0
  1148  099A  34C7               	retlw	199
  1149  099B  3400               	retlw	0
  1150  099C  344F               	retlw	79
  1151  099D  3400               	retlw	0
  1152  099E  3480               	retlw	128
  1153  099F  3400               	retlw	0
  1154  09A0  3450               	retlw	80
  1155  09A1  3400               	retlw	0
  1156  09A2  3480               	retlw	128
  1157  09A3  3400               	retlw	0
  1158  09A4  3451               	retlw	81
  1159  09A5  3400               	retlw	0
  1160  09A6  3400               	retlw	0
  1161  09A7  3400               	retlw	0
  1162  09A8  3452               	retlw	82
  1163  09A9  3400               	retlw	0
  1164  09AA  3422               	retlw	34
  1165  09AB  3400               	retlw	0
  1166  09AC  3453               	retlw	83
  1167  09AD  3400               	retlw	0
  1168  09AE  345E               	retlw	94
  1169  09AF  3400               	retlw	0
  1170  09B0  3454               	retlw	84
  1171  09B1  3400               	retlw	0
  1172  09B2  3480               	retlw	128
  1173  09B3  3400               	retlw	0
  1174  09B4  3458               	retlw	88
  1175  09B5  3400               	retlw	0
  1176  09B6  349E               	retlw	158
  1177  09B7  3400               	retlw	0
  1178  09B8  3441               	retlw	65
  1179  09B9  3400               	retlw	0
  1180  09BA  3408               	retlw	8
  1181  09BB  3400               	retlw	0
  1182  09BC  343F               	retlw	63
  1183  09BD  3400               	retlw	0
  1184  09BE  3400               	retlw	0
  1185  09BF  3400               	retlw	0
  1186  09C0  3475               	retlw	117
  1187  09C1  3400               	retlw	0
  1188  09C2  3405               	retlw	5
  1189  09C3  3400               	retlw	0
  1190  09C4  3476               	retlw	118
  1191  09C5  3400               	retlw	0
  1192  09C6  34E1               	retlw	225
  1193  09C7  3400               	retlw	0
  1194  09C8  344C               	retlw	76
  1195  09C9  3400               	retlw	0
  1196  09CA  3400               	retlw	0
  1197  09CB  3400               	retlw	0
  1198  09CC  3477               	retlw	119
  1199  09CD  3400               	retlw	0
  1200  09CE  3401               	retlw	1
  1201  09CF  3400               	retlw	0
  1202  09D0  343D               	retlw	61
  1203  09D1  3400               	retlw	0
  1204  09D2  3448               	retlw	72
  1205  09D3  3400               	retlw	0
  1206  09D4  344B               	retlw	75
  1207  09D5  3400               	retlw	0
  1208  09D6  3409               	retlw	9
  1209  09D7  3400               	retlw	0
  1210  09D8  34C9               	retlw	201
  1211  09D9  3400               	retlw	0
  1212  09DA  3460               	retlw	96
  1213  09DB  3400               	retlw	0
  1214  09DC  3456               	retlw	86
  1215  09DD  3400               	retlw	0
  1216  09DE  3440               	retlw	64
  1217  09DF  3400               	retlw	0
  1218  09E0  3434               	retlw	52
  1219  09E1  3400               	retlw	0
  1220  09E2  3411               	retlw	17
  1221  09E3  3400               	retlw	0
  1222  09E4  343B               	retlw	59
  1223  09E5  3400               	retlw	0
  1224  09E6  3412               	retlw	18
  1225  09E7  3400               	retlw	0
  1226  09E8  34A4               	retlw	164
  1227  09E9  3400               	retlw	0
  1228  09EA  3482               	retlw	130
  1229  09EB  3400               	retlw	0
  1230  09EC  3496               	retlw	150
  1231  09ED  3400               	retlw	0
  1232  09EE  3400               	retlw	0
  1233  09EF  3400               	retlw	0
  1234  09F0  3497               	retlw	151
  1235  09F1  3400               	retlw	0
  1236  09F2  3430               	retlw	48
  1237  09F3  3400               	retlw	0
  1238  09F4  3498               	retlw	152
  1239  09F5  3400               	retlw	0
  1240  09F6  3420               	retlw	32
  1241  09F7  3400               	retlw	0
  1242  09F8  3499               	retlw	153
  1243  09F9  3400               	retlw	0
  1244  09FA  3430               	retlw	48
  1245  09FB  3400               	retlw	0
  1246  09FC  349A               	retlw	154
  1247  09FD  3400               	retlw	0
  1248  09FE  3484               	retlw	132
  1249  09FF  3400               	retlw	0
  1250  0A00  349B               	retlw	155
  1251  0A01  3400               	retlw	0
  1252  0A02  3429               	retlw	41
  1253  0A03  3400               	retlw	0
  1254  0A04  349C               	retlw	156
  1255  0A05  3400               	retlw	0
  1256  0A06  3403               	retlw	3
  1257  0A07  3400               	retlw	0
  1258  0A08  349D               	retlw	157
  1259  0A09  3400               	retlw	0
  1260  0A0A  344C               	retlw	76
  1261  0A0B  3400               	retlw	0
  1262  0A0C  349E               	retlw	158
  1263  0A0D  3400               	retlw	0
  1264  0A0E  343F               	retlw	63
  1265  0A0F  3400               	retlw	0
  1266  0A10  3478               	retlw	120
  1267  0A11  3400               	retlw	0
  1268  0A12  3404               	retlw	4
  1269  0A13  3400               	retlw	0
  1270  0A14  3479               	retlw	121
  1271  0A15  3400               	retlw	0
  1272  0A16  3401               	retlw	1
  1273  0A17  3400               	retlw	0
  1274  0A18  34C8               	retlw	200
  1275  0A19  3400               	retlw	0
  1276  0A1A  34F0               	retlw	240
  1277  0A1B  3400               	retlw	0
  1278  0A1C  3479               	retlw	121
  1279  0A1D  3400               	retlw	0
  1280  0A1E  340F               	retlw	15
  1281  0A1F  3400               	retlw	0
  1282  0A20  34C8               	retlw	200
  1283  0A21  3400               	retlw	0
  1284  0A22  3400               	retlw	0
  1285  0A23  3400               	retlw	0
  1286  0A24  3479               	retlw	121
  1287  0A25  3400               	retlw	0
  1288  0A26  3410               	retlw	16
  1289  0A27  3400               	retlw	0
  1290  0A28  34C8               	retlw	200
  1291  0A29  3400               	retlw	0
  1292  0A2A  347E               	retlw	126
  1293  0A2B  3400               	retlw	0
  1294  0A2C  3479               	retlw	121
  1295  0A2D  3400               	retlw	0
  1296  0A2E  340A               	retlw	10
  1297  0A2F  3400               	retlw	0
  1298  0A30  34C8               	retlw	200
  1299  0A31  3400               	retlw	0
  1300  0A32  3480               	retlw	128
  1301  0A33  3400               	retlw	0
  1302  0A34  3479               	retlw	121
  1303  0A35  3400               	retlw	0
  1304  0A36  340B               	retlw	11
  1305  0A37  3400               	retlw	0
  1306  0A38  34C8               	retlw	200
  1307  0A39  3400               	retlw	0
  1308  0A3A  3401               	retlw	1
  1309  0A3B  3400               	retlw	0
  1310  0A3C  3479               	retlw	121
  1311  0A3D  3400               	retlw	0
  1312  0A3E  340C               	retlw	12
  1313  0A3F  3400               	retlw	0
  1314  0A40  34C8               	retlw	200
  1315  0A41  3400               	retlw	0
  1316  0A42  340F               	retlw	15
  1317  0A43  3400               	retlw	0
  1318  0A44  3479               	retlw	121
  1319  0A45  3400               	retlw	0
  1320  0A46  340D               	retlw	13
  1321  0A47  3400               	retlw	0
  1322  0A48  34C8               	retlw	200
  1323  0A49  3400               	retlw	0
  1324  0A4A  3420               	retlw	32
  1325  0A4B  3400               	retlw	0
  1326  0A4C  3479               	retlw	121
  1327  0A4D  3400               	retlw	0
  1328  0A4E  3409               	retlw	9
  1329  0A4F  3400               	retlw	0
  1330  0A50  34C8               	retlw	200
  1331  0A51  3400               	retlw	0
  1332  0A52  3480               	retlw	128
  1333  0A53  3400               	retlw	0
  1334  0A54  3479               	retlw	121
  1335  0A55  3400               	retlw	0
  1336  0A56  3402               	retlw	2
  1337  0A57  3400               	retlw	0
  1338  0A58  34C8               	retlw	200
  1339  0A59  3400               	retlw	0
  1340  0A5A  34C0               	retlw	192
  1341  0A5B  3400               	retlw	0
  1342  0A5C  3479               	retlw	121
  1343  0A5D  3400               	retlw	0
  1344  0A5E  3403               	retlw	3
  1345  0A5F  3400               	retlw	0
  1346  0A60  34C8               	retlw	200
  1347  0A61  3400               	retlw	0
  1348  0A62  3440               	retlw	64
  1349  0A63  3400               	retlw	0
  1350  0A64  3479               	retlw	121
  1351  0A65  3400               	retlw	0
  1352  0A66  3405               	retlw	5
  1353  0A67  3400               	retlw	0
  1354  0A68  34C8               	retlw	200
  1355  0A69  3400               	retlw	0
  1356  0A6A  3430               	retlw	48
  1357  0A6B  3400               	retlw	0
  1358  0A6C  3479               	retlw	121
  1359  0A6D  3400               	retlw	0
  1360  0A6E  3426               	retlw	38
  1361  0A6F  3400               	retlw	0
  1362  0A70  34FF               	retlw	255
  1363  0A71  3400               	retlw	0
  1364  0A72  34FF               	retlw	255
  1365  0A73  3400               	retlw	0
  1366  0A74                     __end_of_ov7670_default_regs:	
  1367                           
  1368                           	psect	stringtext2
  1369  0A74                     __pstringtext2:	
  1370  0A74                     _yuv422_ov7670:	
  1371  0A74  3412               	retlw	18
  1372  0A75  3400               	retlw	0
  1373  0A76  3400               	retlw	0
  1374  0A77  3400               	retlw	0
  1375  0A78  348C               	retlw	140
  1376  0A79  3400               	retlw	0
  1377  0A7A  3400               	retlw	0
  1378  0A7B  3400               	retlw	0
  1379  0A7C  3404               	retlw	4
  1380  0A7D  3400               	retlw	0
  1381  0A7E  3400               	retlw	0
  1382  0A7F  3400               	retlw	0
  1383  0A80  3440               	retlw	64
  1384  0A81  3400               	retlw	0
  1385  0A82  34C0               	retlw	192
  1386  0A83  3400               	retlw	0
  1387  0A84  3414               	retlw	20
  1388  0A85  3400               	retlw	0
  1389  0A86  346A               	retlw	106
  1390  0A87  3400               	retlw	0
  1391  0A88  344F               	retlw	79
  1392  0A89  3400               	retlw	0
  1393  0A8A  3480               	retlw	128
  1394  0A8B  3400               	retlw	0
  1395  0A8C  3450               	retlw	80
  1396  0A8D  3400               	retlw	0
  1397  0A8E  3480               	retlw	128
  1398  0A8F  3400               	retlw	0
  1399  0A90  3451               	retlw	81
  1400  0A91  3400               	retlw	0
  1401  0A92  3400               	retlw	0
  1402  0A93  3400               	retlw	0
  1403  0A94  3452               	retlw	82
  1404  0A95  3400               	retlw	0
  1405  0A96  3422               	retlw	34
  1406  0A97  3400               	retlw	0
  1407  0A98  3453               	retlw	83
  1408  0A99  3400               	retlw	0
  1409  0A9A  345E               	retlw	94
  1410  0A9B  3400               	retlw	0
  1411  0A9C  3454               	retlw	84
  1412  0A9D  3400               	retlw	0
  1413  0A9E  3480               	retlw	128
  1414  0A9F  3400               	retlw	0
  1415  0AA0  343D               	retlw	61
  1416  0AA1  3400               	retlw	0
  1417  0AA2  3440               	retlw	64
  1418  0AA3  3400               	retlw	0
  1419  0AA4  34FF               	retlw	255
  1420  0AA5  3400               	retlw	0
  1421  0AA6  34FF               	retlw	255
  1422  0AA7  3400               	retlw	0
  1423  0AA8                     __end_of_yuv422_ov7670:	
  1424                           
  1425                           	psect	stringtext3
  1426  0AA8                     __pstringtext3:	
  1427  0AA8                     _qvga_ov7670:	
  1428  0AA8  343E               	retlw	62
  1429  0AA9  3400               	retlw	0
  1430  0AAA  3419               	retlw	25
  1431  0AAB  3400               	retlw	0
  1432  0AAC  3472               	retlw	114
  1433  0AAD  3400               	retlw	0
  1434  0AAE  3411               	retlw	17
  1435  0AAF  3400               	retlw	0
  1436  0AB0  3473               	retlw	115
  1437  0AB1  3400               	retlw	0
  1438  0AB2  34F1               	retlw	241
  1439  0AB3  3400               	retlw	0
  1440  0AB4  3417               	retlw	23
  1441  0AB5  3400               	retlw	0
  1442  0AB6  3416               	retlw	22
  1443  0AB7  3400               	retlw	0
  1444  0AB8  3418               	retlw	24
  1445  0AB9  3400               	retlw	0
  1446  0ABA  3404               	retlw	4
  1447  0ABB  3400               	retlw	0
  1448  0ABC  3432               	retlw	50
  1449  0ABD  3400               	retlw	0
  1450  0ABE  34A4               	retlw	164
  1451  0ABF  3400               	retlw	0
  1452  0AC0  3419               	retlw	25
  1453  0AC1  3400               	retlw	0
  1454  0AC2  3402               	retlw	2
  1455  0AC3  3400               	retlw	0
  1456  0AC4  341A               	retlw	26
  1457  0AC5  3400               	retlw	0
  1458  0AC6  347A               	retlw	122
  1459  0AC7  3400               	retlw	0
  1460  0AC8  3403               	retlw	3
  1461  0AC9  3400               	retlw	0
  1462  0ACA  340A               	retlw	10
  1463  0ACB  3400               	retlw	0
  1464  0ACC  34FF               	retlw	255
  1465  0ACD  3400               	retlw	0
  1466  0ACE  34FF               	retlw	255
  1467  0ACF  3400               	retlw	0
  1468  0AD0                     __end_of_qvga_ov7670:	
  1469  000E                     _PORTCbits	set	14
  1470  000C                     _PORTAbits	set	12
  1471  008D                     _RCIF	set	141
  1472  008C                     _TXIF	set	140
  1473  009B                     _ADRESL	set	155
  1474  009C                     _ADRESH	set	156
  1475  009E                     _ADCON1	set	158
  1476  009D                     _ADCON0	set	157
  1477  008E                     _TRISC	set	142
  1478  008D                     _TRISB	set	141
  1479  0099                     _OSCCONbits	set	153
  1480  04E9                     _GO_nDONE	set	1257
  1481  0461                     _TRISA1	set	1121
  1482  0477                     _TRISC7	set	1143
  1483  0476                     _TRISC6	set	1142
  1484  0474                     _TRISC4	set	1140
  1485  0473                     _TRISC3	set	1139
  1486  0460                     _TRISA0	set	1120
  1487  0466                     _TRISA6	set	1126
  1488  010D                     _LATB	set	269
  1489  018C                     _ANSELAbits	set	396
  1490  0199                     _RCREG	set	409
  1491  019A                     _TXREG	set	410
  1492  019B                     _SPBRG	set	411
  1493  018E                     _ANSELC	set	398
  1494  018C                     _ANSELA	set	396
  1495  0CE9                     _OERR	set	3305
  1496  0CEE                     _RX9	set	3310
  1497  0CF6                     _TX9	set	3318
  1498  0CEC                     _CREN	set	3308
  1499  0CF5                     _TXEN	set	3317
  1500  0CEF                     _SPEN	set	3311
  1501  0CF4                     _SYNC	set	3316
  1502  0CF2                     _BRGH	set	3314
  1503  0211                     _SSPBUF	set	529
  1504  0214                     _SSPSTAT	set	532
  1505  0212                     _SSPADD	set	530
  1506  0216                     _SSPCON2	set	534
  1507  0215                     _SSPCON1	set	533
  1508  10B3                     _RCEN	set	4275
  1509  10B2                     _PEN	set	4274
  1510  10B1                     _RSEN	set	4273
  1511  10B0                     _SEN	set	4272
  1512  0AD0                     STR_1:	
  1513  0AD0  3452               	retlw	82	;'R'
  1514  0AD1  3445               	retlw	69	;'E'
  1515  0AD2  3447               	retlw	71	;'G'
  1516  0AD3  345F               	retlw	95	;'_'
  1517  0AD4  3443               	retlw	67	;'C'
  1518  0AD5  344F               	retlw	79	;'O'
  1519  0AD6  344D               	retlw	77	;'M'
  1520  0AD7  3437               	retlw	55	;'7'
  1521  0AD8  3420               	retlw	32	;' '
  1522  0AD9  343D               	retlw	61	;'='
  1523  0ADA  3420               	retlw	32	;' '
  1524  0ADB  3400               	retlw	0
  1525                           
  1526                           	psect	stringtext4
  1527  0ADC                     __pstringtext4:	
  1528  0ADC                     STR_2:	
  1529  0ADC  3449               	retlw	73	;'I'
  1530  0ADD  3452               	retlw	82	;'R'
  1531  0ADE  3420               	retlw	32	;' '
  1532  0ADF  343D               	retlw	61	;'='
  1533  0AE0  3400               	retlw	0
  1534                           
  1535                           	psect	stringtext5
  1536  0000                     __pstringtext5:	
  1537                           
  1538                           ; #config settings
  1539  0000                     
  1540                           	psect	cinit
  1541  07FD                     start_initialization:	
  1542  07FD                     __initialization:	
  1543  07FD                     end_of_initialization:	
  1544                           ;End of C runtime variable initialization code
  1545                           
  1546  07FD                     __end_of__initialization:	
  1547  07FD  0020               	movlb	0
  1548  07FE  3186  2E5F         	ljmp	_main	;jump to C main() function
  1549                           
  1550                           	psect	cstackCOMMON
  1551  0070                     __pcstackCOMMON:	
  1552  0070                     ?_MPU6050_Init:	
  1553  0070                     ?_ADC_Init:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??_ADC_Init:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_I2C_Master_Init:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ??_I2C_Master_Init:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_Initialize_UART:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ??_Initialize_UART:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_camInit:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_Init_OV7670:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_Init_QVGA:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_UART_send_char:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ??_UART_send_char:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_I2C_Master_Restart:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_I2C_Master_Write:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_I2C_Master_Stop:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_I2C_Master_Start:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_I2C_Master_Wait:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_ADC_Read:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_main:	
  1605                           ; 2 bytes @ 0x0
  1606                           
  1607  0070                     ?___awdiv:	
  1608                           ; 2 bytes @ 0x0
  1609                           
  1610  0070                     UART_send_char@bt:	
  1611                           ; 2 bytes @ 0x0
  1612                           
  1613  0070                     ___awdiv@divisor:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616                           
  1617                           ; 2 bytes @ 0x0
  1618  0070                     	ds	1
  1619  0071                     ?_UART_send_string:	
  1620  0071                     ??_I2C_Master_Wait:	
  1621                           ; 1 bytes @ 0x1
  1622                           
  1623  0071                     UART_send_string@st_pt:	
  1624                           ; 1 bytes @ 0x1
  1625                           
  1626                           
  1627                           ; 2 bytes @ 0x1
  1628  0071                     	ds	1
  1629  0072                     ??_ADC_Read:	
  1630  0072                     ___awdiv@dividend:	
  1631                           ; 1 bytes @ 0x2
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x2
  1635  0072                     	ds	1
  1636  0073                     ??_UART_send_string:	
  1637  0073                     ??_I2C_Master_Restart:	
  1638                           ; 1 bytes @ 0x3
  1639                           
  1640  0073                     ??_I2C_Master_Write:	
  1641                           ; 1 bytes @ 0x3
  1642                           
  1643  0073                     ??_I2C_Master_Stop:	
  1644                           ; 1 bytes @ 0x3
  1645                           
  1646  0073                     ??_I2C_Master_Start:	
  1647                           ; 1 bytes @ 0x3
  1648                           
  1649  0073                     ?_I2C_Master_Read:	
  1650                           ; 1 bytes @ 0x3
  1651                           
  1652  0073                     I2C_Master_Write@d:	
  1653                           ; 2 bytes @ 0x3
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x3
  1657  0073                     	ds	1
  1658  0074                     ??_MPU6050_Init:	
  1659  0074                     ?_regWrite:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662  0074                     ??___awdiv:	
  1663                           ; 1 bytes @ 0x4
  1664                           
  1665  0074                     regWrite@data:	
  1666                           ; 1 bytes @ 0x4
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x4
  1670  0074                     	ds	1
  1671  0075                     ??_regWrite:	
  1672  0075                     ??_I2C_Master_Read:	
  1673                           ; 1 bytes @ 0x5
  1674                           
  1675  0075                     regWrite@reg:	
  1676                           ; 1 bytes @ 0x5
  1677                           
  1678  0075                     ___awdiv@counter:	
  1679                           ; 1 bytes @ 0x5
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x5
  1683  0075                     	ds	1
  1684  0076                     ??_camInit:	
  1685  0076                     ??_Init_OV7670:	
  1686                           ; 1 bytes @ 0x6
  1687                           
  1688  0076                     ??_Init_QVGA:	
  1689                           ; 1 bytes @ 0x6
  1690                           
  1691  0076                     ___awdiv@sign:	
  1692                           ; 1 bytes @ 0x6
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x6
  1696  0076                     	ds	1
  1697  0077                     I2C_Master_Read@temp:	
  1698  0077                     ___awdiv@quotient:	
  1699                           ; 1 bytes @ 0x7
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x7
  1703  0077                     	ds	2
  1704  0079                     ?_MPU6050_Read:	
  1705                           
  1706                           ; 2 bytes @ 0x9
  1707  0079                     	ds	2
  1708  007B                     ??_MPU6050_Read:	
  1709                           
  1710                           ; 1 bytes @ 0xB
  1711  007B                     	ds	3
  1712                           
  1713                           	psect	cstackBANK0
  1714  0020                     __pcstackBANK0:	
  1715  0020                     MPU6050_Read@Sensor:	
  1716                           
  1717                           ; 14 bytes @ 0x0
  1718  0020                     	ds	14
  1719  002E                     ??_main:	
  1720                           
  1721                           ; 1 bytes @ 0xE
  1722  002E                     	ds	2
  1723  0030                     main@t:	
  1724                           
  1725                           ; 1 bytes @ 0x10
  1726  0030                     	ds	1
  1727                           
  1728                           	psect	maintext
  1729  065F                     __pmaintext:	
  1730 ;;
  1731 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1732 ;;
  1733 ;; *************** function _main *****************
  1734 ;; Defined at:
  1735 ;;		line 41 in file "main.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  t               1   16[BANK0 ] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2   54[None  ] int 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : B1F/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;Total ram usage:        3 bytes
  1754 ;; Hardware stack levels required when called:    5
  1755 ;; This function calls:
  1756 ;;		_ADC_Init
  1757 ;;		_ADC_Read
  1758 ;;		_I2C_Master_Init
  1759 ;;		_Init_OV7670
  1760 ;;		_Init_QVGA
  1761 ;;		_Initialize_UART
  1762 ;;		_MPU6050_Init
  1763 ;;		_MPU6050_Read
  1764 ;;		_UART_send_char
  1765 ;;		_UART_send_string
  1766 ;;		_camInit
  1767 ;; This function is called by:
  1768 ;;		Startup code after reset
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _main
  1774  065F                     _main:	
  1775                           
  1776                           ;main.c: 42: ANSELA = 0;
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1780  065F  0023               	movlb	3	; select bank3
  1781  0660  018C               	clrf	12	;volatile
  1782                           
  1783                           ;main.c: 43: ANSELC= 0;
  1784  0661  018E               	clrf	14	;volatile
  1785                           
  1786                           ;main.c: 44: OSCCONbits.IRCF = 0xf;
  1787  0662  3078               	movlw	120
  1788  0663  0021               	movlb	1	; select bank1
  1789  0664  0499               	iorwf	25,f	;volatile
  1790                           
  1791                           ;main.c: 45: OSCCONbits.SCS = 0x3;
  1792  0665  3003               	movlw	3
  1793  0666  0499               	iorwf	25,f	;volatile
  1794                           
  1795                           ;main.c: 47: TRISA6 = 0;
  1796  0667  130C               	bcf	12,6	;volatile
  1797                           
  1798                           ;main.c: 48: TRISB = 0xf;
  1799  0668  300F               	movlw	15
  1800  0669  008D               	movwf	13	;volatile
  1801                           
  1802                           ;main.c: 49: TRISC |= 0x3;
  1803  066A  3003               	movlw	3
  1804  066B  0020               	movlb	0	; select bank0
  1805  066C  00AE               	movwf	??_main
  1806  066D  082E               	movf	??_main,w
  1807  066E  0021               	movlb	1	; select bank1
  1808  066F  048E               	iorwf	14,f	;volatile
  1809                           
  1810                           ;main.c: 50: TRISA0 = 1;
  1811  0670  140C               	bsf	12,0	;volatile
  1812                           
  1813                           ;main.c: 51: TRISC3 = 1;
  1814  0671  158E               	bsf	14,3	;volatile
  1815                           
  1816                           ;main.c: 52: TRISC4 = 1;
  1817  0672  160E               	bsf	14,4	;volatile
  1818                           
  1819                           ;main.c: 54: MPU6050_Init();
  1820  0673  3185  2592  3186   	fcall	_MPU6050_Init
  1821                           
  1822                           ;main.c: 55: ADC_Init();
  1823  0676  3184  24DC  3186   	fcall	_ADC_Init
  1824                           
  1825                           ;main.c: 56: I2C_Master_Init();
  1826  0679  3184  24E5  3186   	fcall	_I2C_Master_Init
  1827                           
  1828                           ;main.c: 57: Initialize_UART();
  1829  067C  3184  24F0  3186   	fcall	_Initialize_UART
  1830                           
  1831                           ;main.c: 58: camInit();
  1832  067F  3185  256C  3186   	fcall	_camInit
  1833                           
  1834                           ;main.c: 59: Init_OV7670();
  1835  0682  3186  26BD  3186   	fcall	_Init_OV7670
  1836                           
  1837                           ;main.c: 60: Init_QVGA();
  1838  0685  3185  25BE  3186   	fcall	_Init_QVGA
  1839  0688                     l1192:	
  1840                           ;main.c: 64: while(1){
  1841                           
  1842                           
  1843                           ;main.c: 65: if(PORTAbits.RA0 != 0){
  1844  0688  0020               	movlb	0	; select bank0
  1845  0689  1C0C               	btfss	12,0	;volatile
  1846  068A  2E9D               	goto	l1202
  1847                           
  1848                           ;main.c: 66: char t = MPU6050_Read();
  1849  068B  3187  2743  3186   	fcall	_MPU6050_Read
  1850  068E  0879               	movf	?_MPU6050_Read,w
  1851  068F  0020               	movlb	0	; select bank0
  1852  0690  00AE               	movwf	??_main
  1853  0691  082E               	movf	??_main,w
  1854  0692  00B0               	movwf	main@t
  1855                           
  1856                           ;main.c: 68: UART_send_string("REG_COM7 = ");
  1857  0693  30D0               	movlw	low (STR_1| (0+32768))
  1858  0694  00F1               	movwf	UART_send_string@st_pt
  1859  0695  308A               	movlw	high (STR_1| (0+32768))
  1860  0696  00F2               	movwf	UART_send_string@st_pt+1
  1861  0697  3185  2524  3186   	fcall	_UART_send_string
  1862                           
  1863                           ;main.c: 69: UART_send_char(t);
  1864  069A  0020               	movlb	0	; select bank0
  1865  069B  0830               	movf	main@t,w
  1866  069C  2EA8               	goto	L1
  1867  069D                     l1202:	
  1868                           ;main.c: 71: }else{
  1869                           
  1870                           ;main.c: 70: UART_send_char('\n');
  1871                           
  1872                           
  1873                           ;main.c: 72: UART_send_string("IR =");
  1874  069D  30DC               	movlw	low (STR_2| (0+32768))
  1875  069E  00F1               	movwf	UART_send_string@st_pt
  1876  069F  308A               	movlw	high (STR_2| (0+32768))
  1877  06A0  00F2               	movwf	UART_send_string@st_pt+1
  1878  06A1  3185  2524  3186   	fcall	_UART_send_string
  1879                           
  1880                           ;main.c: 73: UART_send_char(ADC_Read());
  1881  06A4  3184  24FE  3186   	fcall	_ADC_Read
  1882  06A7  0870               	movf	?_ADC_Read,w
  1883  06A8                     L1:	
  1884  06A8  3184  24D4  3186   	fcall	_UART_send_char
  1885                           
  1886                           ;main.c: 74: UART_send_char('\n');
  1887  06AB  300A               	movlw	10
  1888  06AC  3184  24D4  3186   	fcall	_UART_send_char
  1889                           
  1890                           ;main.c: 75: }
  1891                           ;main.c: 77: _delay((unsigned long)((1000)*(16000000L/4000.0)));
  1892  06AF  3015               	movlw	21
  1893  06B0  0020               	movlb	0	; select bank0
  1894  06B1  00AF               	movwf	??_main+1
  1895  06B2  304B               	movlw	75
  1896  06B3  00AE               	movwf	??_main
  1897  06B4  30BE               	movlw	190
  1898  06B5                     u517:	
  1899  06B5  0B89               	decfsz	9,f
  1900  06B6  2EB5               	goto	u517
  1901  06B7  0BAE               	decfsz	??_main,f
  1902  06B8  2EB5               	goto	u517
  1903  06B9  0BAF               	decfsz	??_main+1,f
  1904  06BA  2EB5               	goto	u517
  1905  06BB  0000               	nop
  1906  06BC  2E88               	goto	l1192
  1907  06BD                     __end_of_main:	
  1908                           ;main.c: 78: }
  1909                           ;main.c: 79: return 0;
  1910                           ;	Return value of _main is never used
  1911                           
  1912                           
  1913                           	psect	text1
  1914  056C                     __ptext1:	
  1915 ;; *************** function _camInit *****************
  1916 ;; Defined at:
  1917 ;;		line 15 in file "OV7670.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      unsigned char 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    4
  1938 ;; This function calls:
  1939 ;;		_regWrite
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _camInit
  1947  056C                     _camInit:	
  1948                           
  1949                           ;OV7670.c: 16: _delay((unsigned long)((100)*(16000000L/4000.0)));
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _camInit: [wreg+status,2+status,0+pclath+cstack]
  1953  056C  3003               	movlw	3
  1954  056D  00F7               	movwf	??_camInit+1
  1955  056E  3008               	movlw	8
  1956  056F  00F6               	movwf	??_camInit
  1957  0570  3077               	movlw	119
  1958  0571                     u527:	
  1959  0571  0B89               	decfsz	9,f
  1960  0572  2D71               	goto	u527
  1961  0573  0BF6               	decfsz	??_camInit,f
  1962  0574  2D71               	goto	u527
  1963  0575  0BF7               	decfsz	??_camInit+1,f
  1964  0576  2D71               	goto	u527
  1965  0577  0000               	nop
  1966                           
  1967                           ;OV7670.c: 17: regWrite(0x12, 0x80);
  1968  0578  3080               	movlw	128
  1969  0579  00F6               	movwf	??_camInit
  1970  057A  0876               	movf	??_camInit,w
  1971  057B  00F4               	movwf	regWrite@data
  1972  057C  3012               	movlw	18
  1973  057D  3185  2511  3185   	fcall	_regWrite
  1974                           
  1975                           ;OV7670.c: 18: _delay((unsigned long)((100)*(16000000L/4000.0)));
  1976  0580  3003               	movlw	3
  1977  0581  00F7               	movwf	??_camInit+1
  1978  0582  3008               	movlw	8
  1979  0583  00F6               	movwf	??_camInit
  1980  0584  3077               	movlw	119
  1981  0585                     u537:	
  1982  0585  0B89               	decfsz	9,f
  1983  0586  2D85               	goto	u537
  1984  0587  0BF6               	decfsz	??_camInit,f
  1985  0588  2D85               	goto	u537
  1986  0589  0BF7               	decfsz	??_camInit+1,f
  1987  058A  2D85               	goto	u537
  1988  058B  0000               	nop
  1989                           
  1990                           ;OV7670.c: 19: regWrite(0x09,0x1);
  1991  058C  01F4               	clrf	regWrite@data
  1992  058D  0AF4               	incf	regWrite@data,f
  1993  058E  3009               	movlw	9
  1994  058F  3185  2511         	fcall	_regWrite
  1995  0591  0008               	return
  1996  0592                     __end_of_camInit:	
  1997                           ;OV7670.c: 20: return 1;
  1998                           ;	Return value of _camInit is never used
  1999                           
  2000                           
  2001                           	psect	text2
  2002  0524                     __ptext2:	
  2003 ;; *************** function _UART_send_string *****************
  2004 ;; Defined at:
  2005 ;;		line 66 in file "uart.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  st_pt           2    1[COMMON] PTR unsigned char 
  2008 ;;		 -> STR_2(5), STR_1(12), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;Total ram usage:        3 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		_UART_send_char
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _UART_send_string
  2036  0524                     _UART_send_string:	
  2037  0524                     l1148:	
  2038                           ;uart.c: 68: while(*st_pt)
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2042                           
  2043  0524  0871               	movf	UART_send_string@st_pt,w
  2044  0525  0084               	movwf	4
  2045  0526  0872               	movf	UART_send_string@st_pt+1,w
  2046  0527  0085               	movwf	5
  2047  0528  0012               	moviw fsr0++
  2048  0529  1903               	btfsc	3,2
  2049  052A  0008               	return
  2050                           
  2051                           ;uart.c: 69: UART_send_char(*st_pt++);
  2052  052B  0871               	movf	UART_send_string@st_pt,w
  2053  052C  0084               	movwf	4
  2054  052D  0872               	movf	UART_send_string@st_pt+1,w
  2055  052E  0085               	movwf	5
  2056  052F  0800               	movf	0,w	;code access
  2057  0530  3184  24D4  3185   	fcall	_UART_send_char
  2058  0533  3001               	movlw	1
  2059  0534  07F1               	addwf	UART_send_string@st_pt,f
  2060  0535  3000               	movlw	0
  2061  0536  3DF2               	addwfc	UART_send_string@st_pt+1,f
  2062  0537  2D24               	goto	l1148
  2063  0538                     __end_of_UART_send_string:	
  2064                           
  2065                           	psect	text3
  2066  0743                     __ptext3:	
  2067 ;; *************** function _MPU6050_Read *****************
  2068 ;; Defined at:
  2069 ;;		line 20 in file "MPU6050.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  Sensor         14    0[BANK0 ] struct .
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  2    9[COMMON] int 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;Total ram usage:       19 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    3
  2090 ;; This function calls:
  2091 ;;		_I2C_Master_Read
  2092 ;;		_I2C_Master_Start
  2093 ;;		_I2C_Master_Stop
  2094 ;;		_I2C_Master_Write
  2095 ;;		___awdiv
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _MPU6050_Read
  2103  0743                     _MPU6050_Read:	
  2104                           
  2105                           ;MPU6050.c: 22: MPU6050 Sensor;
  2106                           ;MPU6050.c: 23: I2C_Master_Start();
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _MPU6050_Read: [wreg+status,2+status,0+pclath+cstack]
  2110  0743  3184  24C8  3187   	fcall	_I2C_Master_Start
  2111                           
  2112                           ;MPU6050.c: 24: I2C_Master_Write( 0xD0 );
  2113  0746  30D0               	movlw	208
  2114  0747  3184  24CD  3187   	fcall	_I2C_Master_Write
  2115                           
  2116                           ;MPU6050.c: 25: I2C_Master_Write( 0x3B );
  2117  074A  303B               	movlw	59
  2118  074B  3184  24CD  3187   	fcall	_I2C_Master_Write
  2119                           
  2120                           ;MPU6050.c: 26: I2C_Master_Start();
  2121  074E  3184  24C8  3187   	fcall	_I2C_Master_Start
  2122                           
  2123                           ;MPU6050.c: 27: I2C_Master_Write( 0xD0 | 1 );
  2124  0751  30D1               	movlw	209
  2125  0752  3184  24CD  3187   	fcall	_I2C_Master_Write
  2126                           
  2127                           ;MPU6050.c: 28: Sensor.Accel.X = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2128  0755  3185  2538  3187   	fcall	_I2C_Master_Read
  2129  0758  0873               	movf	?_I2C_Master_Read,w
  2130  0759  00FB               	movwf	??_MPU6050_Read
  2131  075A  0874               	movf	?_I2C_Master_Read+1,w
  2132  075B  00FC               	movwf	??_MPU6050_Read+1
  2133  075C  087B               	movf	??_MPU6050_Read,w
  2134  075D  00FC               	movwf	??_MPU6050_Read+1
  2135  075E  01FB               	clrf	??_MPU6050_Read
  2136  075F  3185  2538  3187   	fcall	_I2C_Master_Read
  2137  0762  0873               	movf	?_I2C_Master_Read,w
  2138  0763  047B               	iorwf	??_MPU6050_Read,w
  2139  0764  0020               	movlb	0	; select bank0
  2140  0765  00A0               	movwf	MPU6050_Read@Sensor
  2141  0766  0874               	movf	?_I2C_Master_Read+1,w
  2142  0767  047C               	iorwf	??_MPU6050_Read+1,w
  2143  0768  00A1               	movwf	MPU6050_Read@Sensor+1
  2144                           
  2145                           ;MPU6050.c: 29: Sensor.Accel.Y = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2146  0769  3185  2538  3187   	fcall	_I2C_Master_Read
  2147  076C  0873               	movf	?_I2C_Master_Read,w
  2148  076D  00FB               	movwf	??_MPU6050_Read
  2149  076E  0874               	movf	?_I2C_Master_Read+1,w
  2150  076F  00FC               	movwf	??_MPU6050_Read+1
  2151  0770  087B               	movf	??_MPU6050_Read,w
  2152  0771  00FC               	movwf	??_MPU6050_Read+1
  2153  0772  01FB               	clrf	??_MPU6050_Read
  2154  0773  3185  2538  3187   	fcall	_I2C_Master_Read
  2155  0776  0873               	movf	?_I2C_Master_Read,w
  2156  0777  047B               	iorwf	??_MPU6050_Read,w
  2157  0778  0020               	movlb	0	; select bank0
  2158  0779  00A2               	movwf	MPU6050_Read@Sensor+2
  2159  077A  0874               	movf	?_I2C_Master_Read+1,w
  2160  077B  047C               	iorwf	??_MPU6050_Read+1,w
  2161  077C  00A3               	movwf	MPU6050_Read@Sensor+3
  2162                           
  2163                           ;MPU6050.c: 30: Sensor.Accel.Z = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2164  077D  3185  2538  3187   	fcall	_I2C_Master_Read
  2165  0780  0873               	movf	?_I2C_Master_Read,w
  2166  0781  00FB               	movwf	??_MPU6050_Read
  2167  0782  0874               	movf	?_I2C_Master_Read+1,w
  2168  0783  00FC               	movwf	??_MPU6050_Read+1
  2169  0784  087B               	movf	??_MPU6050_Read,w
  2170  0785  00FC               	movwf	??_MPU6050_Read+1
  2171  0786  01FB               	clrf	??_MPU6050_Read
  2172  0787  3185  2538  3187   	fcall	_I2C_Master_Read
  2173  078A  0873               	movf	?_I2C_Master_Read,w
  2174  078B  047B               	iorwf	??_MPU6050_Read,w
  2175  078C  0020               	movlb	0	; select bank0
  2176  078D  00A4               	movwf	MPU6050_Read@Sensor+4
  2177  078E  0874               	movf	?_I2C_Master_Read+1,w
  2178  078F  047C               	iorwf	??_MPU6050_Read+1,w
  2179  0790  00A5               	movwf	MPU6050_Read@Sensor+5
  2180                           
  2181                           ;MPU6050.c: 31: Sensor.Temperature = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2182  0791  3185  2538  3187   	fcall	_I2C_Master_Read
  2183  0794  0873               	movf	?_I2C_Master_Read,w
  2184  0795  00FB               	movwf	??_MPU6050_Read
  2185  0796  0874               	movf	?_I2C_Master_Read+1,w
  2186  0797  00FC               	movwf	??_MPU6050_Read+1
  2187  0798  087B               	movf	??_MPU6050_Read,w
  2188  0799  00FC               	movwf	??_MPU6050_Read+1
  2189  079A  01FB               	clrf	??_MPU6050_Read
  2190  079B  3185  2538  3187   	fcall	_I2C_Master_Read
  2191  079E  0873               	movf	?_I2C_Master_Read,w
  2192  079F  047B               	iorwf	??_MPU6050_Read,w
  2193  07A0  0020               	movlb	0	; select bank0
  2194  07A1  00A6               	movwf	MPU6050_Read@Sensor+6
  2195  07A2  0874               	movf	?_I2C_Master_Read+1,w
  2196  07A3  047C               	iorwf	??_MPU6050_Read+1,w
  2197  07A4  00A7               	movwf	MPU6050_Read@Sensor+7
  2198                           
  2199                           ;MPU6050.c: 32: Sensor.Gyro.X = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2200  07A5  3185  2538  3187   	fcall	_I2C_Master_Read
  2201  07A8  0873               	movf	?_I2C_Master_Read,w
  2202  07A9  00FB               	movwf	??_MPU6050_Read
  2203  07AA  0874               	movf	?_I2C_Master_Read+1,w
  2204  07AB  00FC               	movwf	??_MPU6050_Read+1
  2205  07AC  087B               	movf	??_MPU6050_Read,w
  2206  07AD  00FC               	movwf	??_MPU6050_Read+1
  2207  07AE  01FB               	clrf	??_MPU6050_Read
  2208  07AF  3185  2538  3187   	fcall	_I2C_Master_Read
  2209  07B2  0873               	movf	?_I2C_Master_Read,w
  2210  07B3  047B               	iorwf	??_MPU6050_Read,w
  2211  07B4  0020               	movlb	0	; select bank0
  2212  07B5  00A8               	movwf	MPU6050_Read@Sensor+8
  2213  07B6  0874               	movf	?_I2C_Master_Read+1,w
  2214  07B7  047C               	iorwf	??_MPU6050_Read+1,w
  2215  07B8  00A9               	movwf	MPU6050_Read@Sensor+9
  2216                           
  2217                           ;MPU6050.c: 33: Sensor.Gyro.Y = ( I2C_Master_Read() << 8 ) |I2C_Master_Read();
  2218  07B9  3185  2538  3187   	fcall	_I2C_Master_Read
  2219  07BC  0873               	movf	?_I2C_Master_Read,w
  2220  07BD  00FB               	movwf	??_MPU6050_Read
  2221  07BE  0874               	movf	?_I2C_Master_Read+1,w
  2222  07BF  00FC               	movwf	??_MPU6050_Read+1
  2223  07C0  087B               	movf	??_MPU6050_Read,w
  2224  07C1  00FC               	movwf	??_MPU6050_Read+1
  2225  07C2  01FB               	clrf	??_MPU6050_Read
  2226  07C3  3185  2538  3187   	fcall	_I2C_Master_Read
  2227  07C6  0873               	movf	?_I2C_Master_Read,w
  2228  07C7  047B               	iorwf	??_MPU6050_Read,w
  2229  07C8  0020               	movlb	0	; select bank0
  2230  07C9  00AA               	movwf	MPU6050_Read@Sensor+10
  2231  07CA  0874               	movf	?_I2C_Master_Read+1,w
  2232  07CB  047C               	iorwf	??_MPU6050_Read+1,w
  2233  07CC  00AB               	movwf	MPU6050_Read@Sensor+11
  2234                           
  2235                           ;MPU6050.c: 34: Sensor.Gyro.Z = ( I2C_Master_Read() << 8 ) | I2C_Master_Read();
  2236  07CD  3185  2538  3187   	fcall	_I2C_Master_Read
  2237  07D0  0873               	movf	?_I2C_Master_Read,w
  2238  07D1  00FB               	movwf	??_MPU6050_Read
  2239  07D2  0874               	movf	?_I2C_Master_Read+1,w
  2240  07D3  00FC               	movwf	??_MPU6050_Read+1
  2241  07D4  087B               	movf	??_MPU6050_Read,w
  2242  07D5  00FC               	movwf	??_MPU6050_Read+1
  2243  07D6  01FB               	clrf	??_MPU6050_Read
  2244  07D7  3185  2538  3187   	fcall	_I2C_Master_Read
  2245  07DA  0873               	movf	?_I2C_Master_Read,w
  2246  07DB  047B               	iorwf	??_MPU6050_Read,w
  2247  07DC  0020               	movlb	0	; select bank0
  2248  07DD  00AC               	movwf	MPU6050_Read@Sensor+12
  2249  07DE  0874               	movf	?_I2C_Master_Read+1,w
  2250  07DF  047C               	iorwf	??_MPU6050_Read+1,w
  2251  07E0  00AD               	movwf	MPU6050_Read@Sensor+13
  2252                           
  2253                           ;MPU6050.c: 35: I2C_Master_Stop();
  2254  07E1  3184  24C3  3187   	fcall	_I2C_Master_Stop
  2255                           
  2256                           ;MPU6050.c: 36: Sensor.Temperature += 12421;
  2257  07E4  3085               	movlw	133
  2258  07E5  0020               	movlb	0	; select bank0
  2259  07E6  07A6               	addwf	MPU6050_Read@Sensor+6,f
  2260  07E7  3030               	movlw	48
  2261  07E8  3DA7               	addwfc	MPU6050_Read@Sensor+7,f
  2262                           
  2263                           ;MPU6050.c: 37: Sensor.Temperature /= 340;
  2264  07E9  3054               	movlw	84
  2265  07EA  00F0               	movwf	___awdiv@divisor
  2266  07EB  3001               	movlw	1
  2267  07EC  00F1               	movwf	___awdiv@divisor+1
  2268  07ED  0827               	movf	MPU6050_Read@Sensor+7,w
  2269  07EE  00F3               	movwf	___awdiv@dividend+1
  2270  07EF  0826               	movf	MPU6050_Read@Sensor+6,w
  2271  07F0  00F2               	movwf	___awdiv@dividend
  2272  07F1  3186  260E         	fcall	___awdiv
  2273  07F3  0871               	movf	?___awdiv+1,w
  2274  07F4  0020               	movlb	0	; select bank0
  2275  07F5  00A7               	movwf	MPU6050_Read@Sensor+7
  2276  07F6  0870               	movf	?___awdiv,w
  2277  07F7  00A6               	movwf	MPU6050_Read@Sensor+6
  2278                           
  2279                           ;MPU6050.c: 38: return Sensor.Gyro.X;
  2280  07F8  0829               	movf	MPU6050_Read@Sensor+9,w
  2281  07F9  00FA               	movwf	?_MPU6050_Read+1
  2282  07FA  0828               	movf	MPU6050_Read@Sensor+8,w
  2283  07FB  00F9               	movwf	?_MPU6050_Read
  2284  07FC  0008               	return
  2285  07FD                     __end_of_MPU6050_Read:	
  2286                           
  2287                           	psect	text4
  2288  060E                     __ptext4:	
  2289 ;; *************** function ___awdiv *****************
  2290 ;; Defined at:
  2291 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  divisor         2    0[COMMON] int 
  2294 ;;  dividend        2    2[COMMON] int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  quotient        2    7[COMMON] int 
  2297 ;;  sign            1    6[COMMON] unsigned char 
  2298 ;;  counter         1    5[COMMON] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2    0[COMMON] int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;Total ram usage:        9 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_MPU6050_Read
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function ___awdiv
  2323  060E                     ___awdiv:	
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2327  060E  01F6               	clrf	___awdiv@sign
  2328  060F  1FF1               	btfss	___awdiv@divisor+1,7
  2329  0610  2E18               	goto	l1022
  2330  0611  09F0               	comf	___awdiv@divisor,f
  2331  0612  09F1               	comf	___awdiv@divisor+1,f
  2332  0613  0AF0               	incf	___awdiv@divisor,f
  2333  0614  1903               	skipnz
  2334  0615  0AF1               	incf	___awdiv@divisor+1,f
  2335  0616  01F6               	clrf	___awdiv@sign
  2336  0617  0AF6               	incf	___awdiv@sign,f
  2337  0618                     l1022:	
  2338  0618  1FF3               	btfss	___awdiv@dividend+1,7
  2339  0619  2E23               	goto	l1028
  2340  061A  09F2               	comf	___awdiv@dividend,f
  2341  061B  09F3               	comf	___awdiv@dividend+1,f
  2342  061C  0AF2               	incf	___awdiv@dividend,f
  2343  061D  1903               	skipnz
  2344  061E  0AF3               	incf	___awdiv@dividend+1,f
  2345  061F  3001               	movlw	1
  2346  0620  00F4               	movwf	??___awdiv
  2347  0621  0874               	movf	??___awdiv,w
  2348  0622  06F6               	xorwf	___awdiv@sign,f
  2349  0623                     l1028:	
  2350  0623  01F7               	clrf	___awdiv@quotient
  2351  0624  01F8               	clrf	___awdiv@quotient+1
  2352  0625  0870               	movf	___awdiv@divisor,w
  2353  0626  0471               	iorwf	___awdiv@divisor+1,w
  2354  0627  1903               	btfsc	3,2
  2355  0628  2E52               	goto	l1050
  2356  0629  01F5               	clrf	___awdiv@counter
  2357  062A  0AF5               	incf	___awdiv@counter,f
  2358  062B                     l1038:	
  2359  062B  1BF1               	btfsc	___awdiv@divisor+1,7
  2360  062C  2E37               	goto	l1040
  2361  062D  3001               	movlw	1
  2362  062E                     u355:	
  2363  062E  35F0               	lslf	___awdiv@divisor,f
  2364  062F  0DF1               	rlf	___awdiv@divisor+1,f
  2365  0630  0B89               	decfsz	9,f
  2366  0631  2E2E               	goto	u355
  2367  0632  3001               	movlw	1
  2368  0633  00F4               	movwf	??___awdiv
  2369  0634  0874               	movf	??___awdiv,w
  2370  0635  07F5               	addwf	___awdiv@counter,f
  2371  0636  2E2B               	goto	l1038
  2372  0637                     l1040:	
  2373  0637  3001               	movlw	1
  2374  0638                     u375:	
  2375  0638  35F7               	lslf	___awdiv@quotient,f
  2376  0639  0DF8               	rlf	___awdiv@quotient+1,f
  2377  063A  0B89               	decfsz	9,f
  2378  063B  2E38               	goto	u375
  2379  063C  0871               	movf	___awdiv@divisor+1,w
  2380  063D  0273               	subwf	___awdiv@dividend+1,w
  2381  063E  1D03               	skipz
  2382  063F  2E42               	goto	u385
  2383  0640  0870               	movf	___awdiv@divisor,w
  2384  0641  0272               	subwf	___awdiv@dividend,w
  2385  0642                     u385:	
  2386  0642  1C03               	skipc
  2387  0643  2E49               	goto	l1046
  2388  0644  0870               	movf	___awdiv@divisor,w
  2389  0645  02F2               	subwf	___awdiv@dividend,f
  2390  0646  0871               	movf	___awdiv@divisor+1,w
  2391  0647  3BF3               	subwfb	___awdiv@dividend+1,f
  2392  0648  1477               	bsf	___awdiv@quotient,0
  2393  0649                     l1046:	
  2394  0649  3001               	movlw	1
  2395  064A                     u395:	
  2396  064A  36F1               	lsrf	___awdiv@divisor+1,f
  2397  064B  0CF0               	rrf	___awdiv@divisor,f
  2398  064C  0B89               	decfsz	9,f
  2399  064D  2E4A               	goto	u395
  2400  064E  3001               	movlw	1
  2401  064F  02F5               	subwf	___awdiv@counter,f
  2402  0650  1D03               	btfss	3,2
  2403  0651  2E37               	goto	l1040
  2404  0652                     l1050:	
  2405  0652  0876               	movf	___awdiv@sign,w
  2406  0653  1903               	btfsc	3,2
  2407  0654  2E5A               	goto	l1054
  2408  0655  09F7               	comf	___awdiv@quotient,f
  2409  0656  09F8               	comf	___awdiv@quotient+1,f
  2410  0657  0AF7               	incf	___awdiv@quotient,f
  2411  0658  1903               	skipnz
  2412  0659  0AF8               	incf	___awdiv@quotient+1,f
  2413  065A                     l1054:	
  2414  065A  0878               	movf	___awdiv@quotient+1,w
  2415  065B  00F1               	movwf	?___awdiv+1
  2416  065C  0877               	movf	___awdiv@quotient,w
  2417  065D  00F0               	movwf	?___awdiv
  2418  065E  0008               	return
  2419  065F                     __end_of___awdiv:	
  2420                           
  2421                           	psect	text5
  2422  0538                     __ptext5:	
  2423 ;; *************** function _I2C_Master_Read *****************
  2424 ;; Defined at:
  2425 ;;		line 50 in file "i2c.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  temp            1    7[COMMON] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  2    3[COMMON] int 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, pclath, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;Total ram usage:        5 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    2
  2446 ;; This function calls:
  2447 ;;		_I2C_Master_Wait
  2448 ;; This function is called by:
  2449 ;;		_MPU6050_Read
  2450 ;;		_regRead
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _I2C_Master_Read
  2456  0538                     _I2C_Master_Read:	
  2457                           
  2458                           ;i2c.c: 52: char temp;
  2459                           ;i2c.c: 53: I2C_Master_Wait();
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2463  0538  3185  254F  3185   	fcall	_I2C_Master_Wait
  2464                           
  2465                           ;i2c.c: 54: RCEN = 1;
  2466  053B  0024               	movlb	4	; select bank4
  2467  053C  1596               	bsf	22,3	;volatile
  2468                           
  2469                           ;i2c.c: 55: I2C_Master_Wait();
  2470  053D  3185  254F  3185   	fcall	_I2C_Master_Wait
  2471                           
  2472                           ;i2c.c: 56: temp = SSPBUF;
  2473  0540  0024               	movlb	4	; select bank4
  2474  0541  0811               	movf	17,w	;volatile
  2475  0542  00F5               	movwf	??_I2C_Master_Read
  2476  0543  0875               	movf	??_I2C_Master_Read,w
  2477  0544  00F7               	movwf	I2C_Master_Read@temp
  2478                           
  2479                           ;i2c.c: 57: I2C_Master_Wait();
  2480  0545  3185  254F         	fcall	_I2C_Master_Wait
  2481                           
  2482                           ;i2c.c: 60: return temp;
  2483  0547  0877               	movf	I2C_Master_Read@temp,w
  2484  0548  00F5               	movwf	??_I2C_Master_Read
  2485  0549  01F6               	clrf	??_I2C_Master_Read+1
  2486  054A  0875               	movf	??_I2C_Master_Read,w
  2487  054B  00F3               	movwf	?_I2C_Master_Read
  2488  054C  0876               	movf	??_I2C_Master_Read+1,w
  2489  054D  00F4               	movwf	?_I2C_Master_Read+1
  2490  054E  0008               	return
  2491  054F                     __end_of_I2C_Master_Read:	
  2492                           
  2493                           	psect	text6
  2494  0592                     __ptext6:	
  2495 ;; *************** function _MPU6050_Init *****************
  2496 ;; Defined at:
  2497 ;;		line 3 in file "MPU6050.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;Total ram usage:        0 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    3
  2518 ;; This function calls:
  2519 ;;		_I2C_Master_Start
  2520 ;;		_I2C_Master_Stop
  2521 ;;		_I2C_Master_Write
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _MPU6050_Init
  2529  0592                     _MPU6050_Init:	
  2530                           
  2531                           ;MPU6050.c: 5: I2C_Master_Start();
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  2535  0592  3184  24C8  3185   	fcall	_I2C_Master_Start
  2536                           
  2537                           ;MPU6050.c: 6: I2C_Master_Write( 0xD0 );
  2538  0595  30D0               	movlw	208
  2539  0596  3184  24CD  3185   	fcall	_I2C_Master_Write
  2540                           
  2541                           ;MPU6050.c: 7: I2C_Master_Write( 0x6B );
  2542  0599  306B               	movlw	107
  2543  059A  3184  24CD  3185   	fcall	_I2C_Master_Write
  2544                           
  2545                           ;MPU6050.c: 8: I2C_Master_Write( 2 );
  2546  059D  3002               	movlw	2
  2547  059E  3184  24CD  3185   	fcall	_I2C_Master_Write
  2548                           
  2549                           ;MPU6050.c: 9: I2C_Master_Write( 0 );
  2550  05A1  3000               	movlw	0
  2551  05A2  3184  24CD  3185   	fcall	_I2C_Master_Write
  2552                           
  2553                           ;MPU6050.c: 10: I2C_Master_Stop();
  2554  05A5  3184  24C3  3185   	fcall	_I2C_Master_Stop
  2555                           
  2556                           ;MPU6050.c: 12: I2C_Master_Start();
  2557  05A8  3184  24C8  3185   	fcall	_I2C_Master_Start
  2558                           
  2559                           ;MPU6050.c: 13: I2C_Master_Write( 0xD0 );
  2560  05AB  30D0               	movlw	208
  2561  05AC  3184  24CD  3185   	fcall	_I2C_Master_Write
  2562                           
  2563                           ;MPU6050.c: 14: I2C_Master_Write( 0x1B );
  2564  05AF  301B               	movlw	27
  2565  05B0  3184  24CD  3185   	fcall	_I2C_Master_Write
  2566                           
  2567                           ;MPU6050.c: 15: I2C_Master_Write( 0 );
  2568  05B3  3000               	movlw	0
  2569  05B4  3184  24CD  3185   	fcall	_I2C_Master_Write
  2570                           
  2571                           ;MPU6050.c: 16: I2C_Master_Write( 0 );
  2572  05B7  3000               	movlw	0
  2573  05B8  3184  24CD  3185   	fcall	_I2C_Master_Write
  2574                           
  2575                           ;MPU6050.c: 17: I2C_Master_Stop();
  2576  05BB  3184  24C3         	fcall	_I2C_Master_Stop
  2577  05BD  0008               	return
  2578  05BE                     __end_of_MPU6050_Init:	
  2579                           
  2580                           	psect	text7
  2581  04C8                     __ptext7:	
  2582 ;; *************** function _I2C_Master_Start *****************
  2583 ;; Defined at:
  2584 ;;		line 30 in file "i2c.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    2
  2605 ;; This function calls:
  2606 ;;		_I2C_Master_Wait
  2607 ;; This function is called by:
  2608 ;;		_MPU6050_Init
  2609 ;;		_MPU6050_Read
  2610 ;;		_regRead
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _I2C_Master_Start
  2616  04C8                     _I2C_Master_Start:	
  2617                           
  2618                           ;i2c.c: 31: I2C_Master_Wait();
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2622  04C8  3185  254F         	fcall	_I2C_Master_Wait
  2623                           
  2624                           ;i2c.c: 32: SEN = 1;
  2625  04CA  0024               	movlb	4	; select bank4
  2626  04CB  1416               	bsf	22,0	;volatile
  2627  04CC  0008               	return
  2628  04CD                     __end_of_I2C_Master_Start:	
  2629                           
  2630                           	psect	text8
  2631  04F0                     __ptext8:	
  2632 ;; *************** function _Initialize_UART *****************
  2633 ;; Defined at:
  2634 ;;		line 6 in file "uart.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _Initialize_UART
  2663  04F0                     _Initialize_UART:	
  2664                           
  2665                           ;uart.c: 9: TRISC6 = 0;
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _Initialize_UART: [wreg]
  2669  04F0  0021               	movlb	1	; select bank1
  2670  04F1  130E               	bcf	14,6	;volatile
  2671                           
  2672                           ;uart.c: 10: TRISC7 = 1;
  2673  04F2  178E               	bsf	14,7	;volatile
  2674                           
  2675                           ;uart.c: 15: SPBRG = ((16000000L/16)/9600) - 1;
  2676  04F3  3067               	movlw	103
  2677  04F4  0023               	movlb	3	; select bank3
  2678  04F5  009B               	movwf	27	;volatile
  2679                           
  2680                           ;uart.c: 16: BRGH = 1;
  2681  04F6  151E               	bsf	30,2	;volatile
  2682                           
  2683                           ;uart.c: 20: SYNC = 0;
  2684  04F7  121E               	bcf	30,4	;volatile
  2685                           
  2686                           ;uart.c: 21: SPEN = 1;
  2687  04F8  179D               	bsf	29,7	;volatile
  2688                           
  2689                           ;uart.c: 25: TXEN = 1;
  2690  04F9  169E               	bsf	30,5	;volatile
  2691                           
  2692                           ;uart.c: 26: CREN = 1;
  2693  04FA  161D               	bsf	29,4	;volatile
  2694                           
  2695                           ;uart.c: 30: TX9 = 0;
  2696  04FB  131E               	bcf	30,6	;volatile
  2697                           
  2698                           ;uart.c: 31: RX9 = 0;
  2699  04FC  131D               	bcf	29,6	;volatile
  2700  04FD  0008               	return
  2701  04FE                     __end_of_Initialize_UART:	
  2702                           
  2703                           	psect	text9
  2704  05BE                     __ptext9:	
  2705 ;; *************** function _Init_QVGA *****************
  2706 ;; Defined at:
  2707 ;;		line 100 in file "OV7670.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;Total ram usage:        1 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    4
  2728 ;; This function calls:
  2729 ;;		_regWrite
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _Init_QVGA
  2737  05BE                     _Init_QVGA:	
  2738                           
  2739                           ;OV7670.c: 101: regWrite(0x0c, 0x04);
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _Init_QVGA: [wreg+status,2+status,0+pclath+cstack]
  2743  05BE  3004               	movlw	4
  2744  05BF  00F6               	movwf	??_Init_QVGA
  2745  05C0  0876               	movf	??_Init_QVGA,w
  2746  05C1  00F4               	movwf	regWrite@data
  2747  05C2  300C               	movlw	12
  2748  05C3  3185  2511  3185   	fcall	_regWrite
  2749                           
  2750                           ;OV7670.c: 102: regWrite(0x3e, 0x19);
  2751  05C6  3019               	movlw	25
  2752  05C7  00F6               	movwf	??_Init_QVGA
  2753  05C8  0876               	movf	??_Init_QVGA,w
  2754  05C9  00F4               	movwf	regWrite@data
  2755  05CA  303E               	movlw	62
  2756  05CB  3185  2511  3185   	fcall	_regWrite
  2757                           
  2758                           ;OV7670.c: 103: regWrite(0x72, 0x11);
  2759  05CE  3011               	movlw	17
  2760  05CF  00F6               	movwf	??_Init_QVGA
  2761  05D0  0876               	movf	??_Init_QVGA,w
  2762  05D1  00F4               	movwf	regWrite@data
  2763  05D2  3072               	movlw	114
  2764  05D3  3185  2511  3185   	fcall	_regWrite
  2765                           
  2766                           ;OV7670.c: 104: regWrite(0x73, 0xF1);
  2767  05D6  30F1               	movlw	241
  2768  05D7  00F6               	movwf	??_Init_QVGA
  2769  05D8  0876               	movf	??_Init_QVGA,w
  2770  05D9  00F4               	movwf	regWrite@data
  2771  05DA  3073               	movlw	115
  2772  05DB  3185  2511  3185   	fcall	_regWrite
  2773                           
  2774                           ;OV7670.c: 105: regWrite(0x17, 0x16);
  2775  05DE  3016               	movlw	22
  2776  05DF  00F6               	movwf	??_Init_QVGA
  2777  05E0  0876               	movf	??_Init_QVGA,w
  2778  05E1  00F4               	movwf	regWrite@data
  2779  05E2  3017               	movlw	23
  2780  05E3  3185  2511  3185   	fcall	_regWrite
  2781                           
  2782                           ;OV7670.c: 106: regWrite(0x18, 0x04);
  2783  05E6  3004               	movlw	4
  2784  05E7  00F6               	movwf	??_Init_QVGA
  2785  05E8  0876               	movf	??_Init_QVGA,w
  2786  05E9  00F4               	movwf	regWrite@data
  2787  05EA  3018               	movlw	24
  2788  05EB  3185  2511  3185   	fcall	_regWrite
  2789                           
  2790                           ;OV7670.c: 107: regWrite(0x32, 0xA4);
  2791  05EE  30A4               	movlw	164
  2792  05EF  00F6               	movwf	??_Init_QVGA
  2793  05F0  0876               	movf	??_Init_QVGA,w
  2794  05F1  00F4               	movwf	regWrite@data
  2795  05F2  3032               	movlw	50
  2796  05F3  3185  2511  3185   	fcall	_regWrite
  2797                           
  2798                           ;OV7670.c: 108: regWrite(0x19, 0x02);
  2799  05F6  3002               	movlw	2
  2800  05F7  00F6               	movwf	??_Init_QVGA
  2801  05F8  0876               	movf	??_Init_QVGA,w
  2802  05F9  00F4               	movwf	regWrite@data
  2803  05FA  3019               	movlw	25
  2804  05FB  3185  2511  3185   	fcall	_regWrite
  2805                           
  2806                           ;OV7670.c: 109: regWrite(0x1a, 0x7A);
  2807  05FE  307A               	movlw	122
  2808  05FF  00F6               	movwf	??_Init_QVGA
  2809  0600  0876               	movf	??_Init_QVGA,w
  2810  0601  00F4               	movwf	regWrite@data
  2811  0602  301A               	movlw	26
  2812  0603  3185  2511  3185   	fcall	_regWrite
  2813                           
  2814                           ;OV7670.c: 110: regWrite(0x03, 0x0A);
  2815  0606  300A               	movlw	10
  2816  0607  00F6               	movwf	??_Init_QVGA
  2817  0608  0876               	movf	??_Init_QVGA,w
  2818  0609  00F4               	movwf	regWrite@data
  2819  060A  3003               	movlw	3
  2820  060B  3185  2511         	fcall	_regWrite
  2821  060D  0008               	return
  2822  060E                     __end_of_Init_QVGA:	
  2823                           
  2824                           	psect	text10
  2825  06BD                     __ptext10:	
  2826 ;; *************** function _Init_OV7670 *****************
  2827 ;; Defined at:
  2828 ;;		line 78 in file "OV7670.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;Total ram usage:        2 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		_regWrite
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _Init_OV7670
  2858  06BD                     _Init_OV7670:	
  2859                           
  2860                           ;OV7670.c: 80: regWrite(0x12,0x80);
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _Init_OV7670: [wreg+status,2+status,0+pclath+cstack]
  2864  06BD  3080               	movlw	128
  2865  06BE  00F6               	movwf	??_Init_OV7670
  2866  06BF  0876               	movf	??_Init_OV7670,w
  2867  06C0  00F4               	movwf	regWrite@data
  2868  06C1  3012               	movlw	18
  2869  06C2  3185  2511  3186   	fcall	_regWrite
  2870                           
  2871                           ;OV7670.c: 81: _delay((unsigned long)((100)*(16000000L/4000.0)));
  2872  06C5  3003               	movlw	3
  2873  06C6  00F7               	movwf	??_Init_OV7670+1
  2874  06C7  3008               	movlw	8
  2875  06C8  00F6               	movwf	??_Init_OV7670
  2876  06C9  3077               	movlw	119
  2877  06CA                     u547:	
  2878  06CA  0B89               	decfsz	9,f
  2879  06CB  2ECA               	goto	u547
  2880  06CC  0BF6               	decfsz	??_Init_OV7670,f
  2881  06CD  2ECA               	goto	u547
  2882  06CE  0BF7               	decfsz	??_Init_OV7670+1,f
  2883  06CF  2ECA               	goto	u547
  2884  06D0  0000               	nop
  2885                           
  2886                           ;OV7670.c: 82: regWrite(0x3A, 0x04);
  2887  06D1  3004               	movlw	4
  2888  06D2  00F6               	movwf	??_Init_OV7670
  2889  06D3  0876               	movf	??_Init_OV7670,w
  2890  06D4  00F4               	movwf	regWrite@data
  2891  06D5  303A               	movlw	58
  2892  06D6  3185  2511  3186   	fcall	_regWrite
  2893                           
  2894                           ;OV7670.c: 84: regWrite(0x13, 0xC0);
  2895  06D9  30C0               	movlw	192
  2896  06DA  00F6               	movwf	??_Init_OV7670
  2897  06DB  0876               	movf	??_Init_OV7670,w
  2898  06DC  00F4               	movwf	regWrite@data
  2899  06DD  3013               	movlw	19
  2900  06DE  3185  2511  3186   	fcall	_regWrite
  2901                           
  2902                           ;OV7670.c: 85: regWrite(0x00, 0x00);
  2903  06E1  01F4               	clrf	regWrite@data
  2904  06E2  3000               	movlw	0
  2905  06E3  3185  2511  3186   	fcall	_regWrite
  2906                           
  2907                           ;OV7670.c: 86: regWrite(0x10, 0x00);
  2908  06E6  01F4               	clrf	regWrite@data
  2909  06E7  3010               	movlw	16
  2910  06E8  3185  2511  3186   	fcall	_regWrite
  2911                           
  2912                           ;OV7670.c: 87: regWrite(0x0d, 0x40);
  2913  06EB  3040               	movlw	64
  2914  06EC  00F6               	movwf	??_Init_OV7670
  2915  06ED  0876               	movf	??_Init_OV7670,w
  2916  06EE  00F4               	movwf	regWrite@data
  2917  06EF  300D               	movlw	13
  2918  06F0  3185  2511  3186   	fcall	_regWrite
  2919                           
  2920                           ;OV7670.c: 88: regWrite(0x14, 0x18);
  2921  06F3  3018               	movlw	24
  2922  06F4  00F6               	movwf	??_Init_OV7670
  2923  06F5  0876               	movf	??_Init_OV7670,w
  2924  06F6  00F4               	movwf	regWrite@data
  2925  06F7  3014               	movlw	20
  2926  06F8  3185  2511  3186   	fcall	_regWrite
  2927                           
  2928                           ;OV7670.c: 89: regWrite(0x24, 0x95);
  2929  06FB  3095               	movlw	149
  2930  06FC  00F6               	movwf	??_Init_OV7670
  2931  06FD  0876               	movf	??_Init_OV7670,w
  2932  06FE  00F4               	movwf	regWrite@data
  2933  06FF  3024               	movlw	36
  2934  0700  3185  2511  3186   	fcall	_regWrite
  2935                           
  2936                           ;OV7670.c: 90: regWrite(0x25, 0x33);
  2937  0703  3033               	movlw	51
  2938  0704  00F6               	movwf	??_Init_OV7670
  2939  0705  0876               	movf	??_Init_OV7670,w
  2940  0706  00F4               	movwf	regWrite@data
  2941  0707  3025               	movlw	37
  2942  0708  3185  2511  3186   	fcall	_regWrite
  2943                           
  2944                           ;OV7670.c: 91: regWrite(0x13, 0xC5);
  2945  070B  30C5               	movlw	197
  2946  070C  00F6               	movwf	??_Init_OV7670
  2947  070D  0876               	movf	??_Init_OV7670,w
  2948  070E  00F4               	movwf	regWrite@data
  2949  070F  3013               	movlw	19
  2950  0710  3185  2511  3186   	fcall	_regWrite
  2951                           
  2952                           ;OV7670.c: 92: regWrite(0x6a, 0x40);
  2953  0713  3040               	movlw	64
  2954  0714  00F6               	movwf	??_Init_OV7670
  2955  0715  0876               	movf	??_Init_OV7670,w
  2956  0716  00F4               	movwf	regWrite@data
  2957  0717  306A               	movlw	106
  2958  0718  3185  2511  3186   	fcall	_regWrite
  2959                           
  2960                           ;OV7670.c: 93: regWrite(0x01, 0x40);
  2961  071B  3040               	movlw	64
  2962  071C  00F6               	movwf	??_Init_OV7670
  2963  071D  0876               	movf	??_Init_OV7670,w
  2964  071E  00F4               	movwf	regWrite@data
  2965  071F  3001               	movlw	1
  2966  0720  3185  2511  3186   	fcall	_regWrite
  2967                           
  2968                           ;OV7670.c: 94: regWrite(0x02, 0x60);
  2969  0723  3060               	movlw	96
  2970  0724  00F6               	movwf	??_Init_OV7670
  2971  0725  0876               	movf	??_Init_OV7670,w
  2972  0726  00F4               	movwf	regWrite@data
  2973  0727  3002               	movlw	2
  2974  0728  3185  2511  3186   	fcall	_regWrite
  2975                           
  2976                           ;OV7670.c: 95: regWrite(0x13, 0xC7);
  2977  072B  30C7               	movlw	199
  2978  072C  00F6               	movwf	??_Init_OV7670
  2979  072D  0876               	movf	??_Init_OV7670,w
  2980  072E  00F4               	movwf	regWrite@data
  2981  072F  3013               	movlw	19
  2982  0730  3185  2511  3186   	fcall	_regWrite
  2983                           
  2984                           ;OV7670.c: 96: regWrite(0x41, 0x08);
  2985  0733  3008               	movlw	8
  2986  0734  00F6               	movwf	??_Init_OV7670
  2987  0735  0876               	movf	??_Init_OV7670,w
  2988  0736  00F4               	movwf	regWrite@data
  2989  0737  3041               	movlw	65
  2990  0738  3185  2511  3186   	fcall	_regWrite
  2991                           
  2992                           ;OV7670.c: 97: regWrite(0x15, 0x20);
  2993  073B  3020               	movlw	32
  2994  073C  00F6               	movwf	??_Init_OV7670
  2995  073D  0876               	movf	??_Init_OV7670,w
  2996  073E  00F4               	movwf	regWrite@data
  2997  073F  3015               	movlw	21
  2998  0740  3185  2511         	fcall	_regWrite
  2999  0742  0008               	return
  3000  0743                     __end_of_Init_OV7670:	
  3001                           
  3002                           	psect	text11
  3003  0511                     __ptext11:	
  3004 ;; *************** function _regWrite *****************
  3005 ;; Defined at:
  3006 ;;		line 23 in file "OV7670.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  reg             1    wreg     unsigned char 
  3009 ;;  data            1    4[COMMON] unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  reg             1    5[COMMON] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      unsigned char 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;Total ram usage:        2 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    3
  3028 ;; This function calls:
  3029 ;;		_I2C_Master_Restart
  3030 ;;		_I2C_Master_Stop
  3031 ;;		_I2C_Master_Write
  3032 ;; This function is called by:
  3033 ;;		_camInit
  3034 ;;		_Init_OV7670
  3035 ;;		_Init_QVGA
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _regWrite
  3041  0511                     _regWrite:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _regWrite: [wreg+status,2+status,0+pclath+cstack]
  3045                           ;regWrite@reg stored from wreg
  3046  0511  00F5               	movwf	regWrite@reg
  3047                           
  3048                           ;OV7670.c: 24: I2C_Master_Restart();
  3049  0512  3184  24BE  3185   	fcall	_I2C_Master_Restart
  3050                           
  3051                           ;OV7670.c: 25: I2C_Master_Write(0x21);
  3052  0515  3021               	movlw	33
  3053  0516  3184  24CD  3185   	fcall	_I2C_Master_Write
  3054                           
  3055                           ;OV7670.c: 26: I2C_Master_Write(reg);
  3056  0519  0875               	movf	regWrite@reg,w
  3057  051A  3184  24CD  3185   	fcall	_I2C_Master_Write
  3058                           
  3059                           ;OV7670.c: 27: I2C_Master_Write(data);
  3060  051D  0874               	movf	regWrite@data,w
  3061  051E  3184  24CD  3185   	fcall	_I2C_Master_Write
  3062                           
  3063                           ;OV7670.c: 28: I2C_Master_Stop();
  3064  0521  3184  24C3         	fcall	_I2C_Master_Stop
  3065  0523  0008               	return
  3066  0524                     __end_of_regWrite:	
  3067                           ;OV7670.c: 30: return 1;
  3068                           ;	Return value of _regWrite is never used
  3069                           
  3070                           
  3071                           	psect	text12
  3072  04CD                     __ptext12:	
  3073 ;; *************** function _I2C_Master_Write *****************
  3074 ;; Defined at:
  3075 ;;		line 45 in file "i2c.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  d               1    wreg     unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  d               1    3[COMMON] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		_I2C_Master_Wait
  3098 ;; This function is called by:
  3099 ;;		_regWrite
  3100 ;;		_MPU6050_Init
  3101 ;;		_MPU6050_Read
  3102 ;;		_regRead
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _I2C_Master_Write
  3108  04CD                     _I2C_Master_Write:	
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3112                           ;I2C_Master_Write@d stored from wreg
  3113  04CD  00F3               	movwf	I2C_Master_Write@d
  3114                           
  3115                           ;i2c.c: 46: I2C_Master_Wait();
  3116  04CE  3185  254F         	fcall	_I2C_Master_Wait
  3117                           
  3118                           ;i2c.c: 47: SSPBUF = d;
  3119  04D0  0873               	movf	I2C_Master_Write@d,w
  3120  04D1  0024               	movlb	4	; select bank4
  3121  04D2  0091               	movwf	17	;volatile
  3122  04D3  0008               	return
  3123  04D4                     __end_of_I2C_Master_Write:	
  3124                           
  3125                           	psect	text13
  3126  04C3                     __ptext13:	
  3127 ;; *************** function _I2C_Master_Stop *****************
  3128 ;; Defined at:
  3129 ;;		line 40 in file "i2c.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    2
  3150 ;; This function calls:
  3151 ;;		_I2C_Master_Wait
  3152 ;; This function is called by:
  3153 ;;		_regWrite
  3154 ;;		_MPU6050_Init
  3155 ;;		_MPU6050_Read
  3156 ;;		_regRead
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _I2C_Master_Stop
  3162  04C3                     _I2C_Master_Stop:	
  3163                           
  3164                           ;i2c.c: 41: I2C_Master_Wait();
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3168  04C3  3185  254F         	fcall	_I2C_Master_Wait
  3169                           
  3170                           ;i2c.c: 42: PEN = 1;
  3171  04C5  0024               	movlb	4	; select bank4
  3172  04C6  1516               	bsf	22,2	;volatile
  3173  04C7  0008               	return
  3174  04C8                     __end_of_I2C_Master_Stop:	
  3175                           
  3176                           	psect	text14
  3177  04BE                     __ptext14:	
  3178 ;; *************** function _I2C_Master_Restart *****************
  3179 ;; Defined at:
  3180 ;;		line 35 in file "i2c.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    2
  3201 ;; This function calls:
  3202 ;;		_I2C_Master_Wait
  3203 ;; This function is called by:
  3204 ;;		_regWrite
  3205 ;;		_regRead
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function _I2C_Master_Restart
  3211  04BE                     _I2C_Master_Restart:	
  3212                           
  3213                           ;i2c.c: 36: I2C_Master_Wait();
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _I2C_Master_Restart: [wreg+status,2+status,0+pclath+cstack]
  3217  04BE  3185  254F         	fcall	_I2C_Master_Wait
  3218                           
  3219                           ;i2c.c: 37: RSEN = 1;
  3220  04C0  0024               	movlb	4	; select bank4
  3221  04C1  1496               	bsf	22,1	;volatile
  3222  04C2  0008               	return
  3223  04C3                     __end_of_I2C_Master_Restart:	
  3224                           
  3225                           	psect	text15
  3226  054F                     __ptext15:	
  3227 ;; *************** function _I2C_Master_Wait *****************
  3228 ;; Defined at:
  3229 ;;		line 21 in file "i2c.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    1
  3250 ;; This function calls:
  3251 ;;		_UART_send_char
  3252 ;; This function is called by:
  3253 ;;		_I2C_Master_Start
  3254 ;;		_I2C_Master_Restart
  3255 ;;		_I2C_Master_Stop
  3256 ;;		_I2C_Master_Write
  3257 ;;		_I2C_Master_Read
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           
  3262                           ;psect for function _I2C_Master_Wait
  3263  054F                     _I2C_Master_Wait:	
  3264  054F                     l980:	
  3265                           ;i2c.c: 22: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F))
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0+pclath+cstack]
  3269                           
  3270  054F  0024               	movlb	4	; select bank4
  3271  0550  1D14               	btfss	20,2	;volatile
  3272  0551  2D67               	goto	l982
  3273  0552                     l976:	
  3274                           
  3275                           ;i2c.c: 23: {
  3276                           ;i2c.c: 24: UART_send_char('w');
  3277  0552  3077               	movlw	119
  3278  0553  3184  24D4  3185   	fcall	_UART_send_char
  3279                           
  3280                           ;i2c.c: 25: UART_send_char('\n');
  3281  0556  300A               	movlw	10
  3282  0557  3184  24D4  3185   	fcall	_UART_send_char
  3283                           
  3284                           ;i2c.c: 26: _delay((unsigned long)((1000)*(16000000L/4000.0)));
  3285  055A  3015               	movlw	21
  3286  055B  00F2               	movwf	??_I2C_Master_Wait+1
  3287  055C  304B               	movlw	75
  3288  055D  00F1               	movwf	??_I2C_Master_Wait
  3289  055E  30BE               	movlw	190
  3290  055F                     u557:	
  3291  055F  0B89               	decfsz	9,f
  3292  0560  2D5F               	goto	u557
  3293  0561  0BF1               	decfsz	??_I2C_Master_Wait,f
  3294  0562  2D5F               	goto	u557
  3295  0563  0BF2               	decfsz	??_I2C_Master_Wait+1,f
  3296  0564  2D5F               	goto	u557
  3297  0565  3200               	nop2
  3298  0566  2D4F               	goto	l980
  3299  0567                     l982:	
  3300  0567  0816               	movf	22,w	;volatile
  3301  0568  391F               	andlw	31
  3302  0569  1903               	btfsc	3,2
  3303  056A  0008               	return
  3304  056B  2D52               	goto	l976
  3305  056C                     __end_of_I2C_Master_Wait:	
  3306                           
  3307                           	psect	text16
  3308  04D4                     __ptext16:	
  3309 ;; *************** function _UART_send_char *****************
  3310 ;; Defined at:
  3311 ;;		line 39 in file "uart.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  bt              1    wreg     unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  bt              1    0[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;;		_I2C_Master_Wait
  3336 ;;		_UART_send_string
  3337 ;;		_captureImage
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _UART_send_char
  3343  04D4                     _UART_send_char:	
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _UART_send_char: [wreg]
  3347                           ;UART_send_char@bt stored from wreg
  3348  04D4  00F0               	movwf	UART_send_char@bt
  3349  04D5                     l237:	
  3350                           ;uart.c: 41: while(!TXIF);
  3351                           
  3352  04D5  0020               	movlb	0	; select bank0
  3353  04D6  1E11               	btfss	17,4	;volatile
  3354  04D7  2CD5               	goto	l237
  3355                           
  3356                           ;uart.c: 42: TXREG = bt;
  3357  04D8  0870               	movf	UART_send_char@bt,w
  3358  04D9  0023               	movlb	3	; select bank3
  3359  04DA  009A               	movwf	26	;volatile
  3360  04DB  0008               	return
  3361  04DC                     __end_of_UART_send_char:	
  3362                           
  3363                           	psect	text17
  3364  04E5                     __ptext17:	
  3365 ;; *************** function _I2C_Master_Init *****************
  3366 ;; Defined at:
  3367 ;;		line 12 in file "i2c.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _I2C_Master_Init
  3396  04E5                     _I2C_Master_Init:	
  3397                           
  3398                           ;i2c.c: 13: SSPCON1 = 0x28;
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _I2C_Master_Init: [wreg]
  3402  04E5  3028               	movlw	40
  3403  04E6  0024               	movlb	4	; select bank4
  3404  04E7  0095               	movwf	21	;volatile
  3405                           
  3406                           ;i2c.c: 14: SSPCON2 = 0x20;
  3407  04E8  3020               	movlw	32
  3408  04E9  0096               	movwf	22	;volatile
  3409                           
  3410                           ;i2c.c: 15: SSPADD = 16000000L/(4*400000L) - 1;
  3411  04EA  3009               	movlw	9
  3412  04EB  0092               	movwf	18	;volatile
  3413                           
  3414                           ;i2c.c: 16: TRISC3 = 1;
  3415  04EC  0021               	movlb	1	; select bank1
  3416  04ED  158E               	bsf	14,3	;volatile
  3417                           
  3418                           ;i2c.c: 17: TRISC4 = 1;
  3419  04EE  160E               	bsf	14,4	;volatile
  3420  04EF  0008               	return
  3421  04F0                     __end_of_I2C_Master_Init:	
  3422                           
  3423                           	psect	text18
  3424  04FE                     __ptext18:	
  3425 ;; *************** function _ADC_Read *****************
  3426 ;; Defined at:
  3427 ;;		line 14 in file "adc.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    0[COMMON] int 
  3434 ;; Registers used:
  3435 ;;		wreg
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;Total ram usage:        3 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _ADC_Read
  3456  04FE                     _ADC_Read:	
  3457                           
  3458                           ;adc.c: 16: ADCON0 |= 0x4;
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _ADC_Read: [wreg]
  3462  04FE  0021               	movlb	1	; select bank1
  3463  04FF  151D               	bsf	29,2	;volatile
  3464                           
  3465                           ;adc.c: 17: _delay((unsigned long)((2)*(16000000/4000.0)));
  3466  0500  300B               	movlw	11
  3467  0501  00F2               	movwf	??_ADC_Read
  3468  0502  3062               	movlw	98
  3469  0503                     u567:	
  3470  0503  0B89               	decfsz	9,f
  3471  0504  2D03               	goto	u567
  3472  0505  0BF2               	decfsz	??_ADC_Read,f
  3473  0506  2D03               	goto	u567
  3474  0507  3200               	nop2
  3475                           
  3476                           ;adc.c: 18: GO_nDONE = 1;
  3477  0508  0021               	movlb	1	; select bank1
  3478  0509  149D               	bsf	29,1	;volatile
  3479  050A                     l275:	
  3480                           ;adc.c: 19: while(GO_nDONE);
  3481                           
  3482  050A  189D               	btfsc	29,1	;volatile
  3483  050B  2D0A               	goto	l275
  3484                           
  3485                           ;adc.c: 20: return ((ADRESH<<8)+ADRESL);
  3486  050C  081C               	movf	28,w	;volatile
  3487  050D  00F1               	movwf	?_ADC_Read+1
  3488  050E  081B               	movf	27,w	;volatile
  3489  050F  00F0               	movwf	?_ADC_Read
  3490  0510  0008               	return
  3491  0511                     __end_of_ADC_Read:	
  3492                           
  3493                           	psect	text19
  3494  04DC                     __ptext19:	
  3495 ;; *************** function _ADC_Init *****************
  3496 ;; Defined at:
  3497 ;;		line 5 in file "adc.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;Total ram usage:        0 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _ADC_Init
  3526  04DC                     _ADC_Init:	
  3527                           
  3528                           ;adc.c: 7: TRISA1 = 1;
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _ADC_Init: [wreg+status,2]
  3532  04DC  0021               	movlb	1	; select bank1
  3533  04DD  148C               	bsf	12,1	;volatile
  3534                           
  3535                           ;adc.c: 8: ANSELAbits.ANSA1 = 0;
  3536  04DE  0023               	movlb	3	; select bank3
  3537  04DF  108C               	bcf	12,1	;volatile
  3538                           
  3539                           ;adc.c: 9: ADCON0 = 0x5;
  3540  04E0  3005               	movlw	5
  3541  04E1  0021               	movlb	1	; select bank1
  3542  04E2  009D               	movwf	29	;volatile
  3543                           
  3544                           ;adc.c: 11: ADCON1 = 0x00;
  3545  04E3  019E               	clrf	30	;volatile
  3546  04E4  0008               	return
  3547  04E5                     __end_of_ADC_Init:	
  3548  007E                     btemp	set	126	;btemp
  3549  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    720
>>>>>>> parent of 9a4dca4... Int2Str Coversion
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
<<<<<<< HEAD
    BANK0            80     27      27
=======
    BANK0            80     17      17
>>>>>>> parent of 9a4dca4... Int2Str Coversion
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

<<<<<<< HEAD
    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> MPU6050_DeviceDriverTest@buf(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> MPU6050_DeviceDriverTest@buf(BANK0[10]), 

    reverse@s	PTR unsigned char  size(1) Largest target is 10
		 -> MPU6050_DeviceDriverTest@buf(BANK0[10]), 

    int2str@s	PTR unsigned char  size(1) Largest target is 10
		 -> MPU6050_DeviceDriverTest@buf(BANK0[10]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_17(CODE[28]), STR_16(CODE[2]), STR_15(CODE[15]), STR_14(CODE[2]), 
		 -> STR_13(CODE[10]), STR_12(CODE[2]), STR_11(CODE[10]), STR_10(CODE[2]), 
		 -> STR_9(CODE[10]), STR_8(CODE[2]), STR_7(CODE[11]), STR_6(CODE[2]), 
		 -> STR_5(CODE[11]), STR_4(CODE[2]), STR_3(CODE[11]), MPU6050_DeviceDriverTest@buf(BANK0[10]), 
		 -> STR_2(CODE[28]), STR_1(CODE[17]), 

    MPU6050_Read@Sensor	PTR struct . size(1) Largest target is 0
=======
    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[5]), STR_1(CODE[12]), 
>>>>>>> parent of 9a4dca4... Int2Str Coversion


Critical Paths under _main in COMMON

<<<<<<< HEAD
    _MPU6050_Init->_I2C_Master_Write
    _MPU6050_DeviceDriverTest->_int2str
    _int2str->_reverse
    _reverse->_strlen
    _UART_send_string->_UART_send_char
    _MPU6050_Read->___awdiv

Critical Paths under _main in BANK0

    _main->_MPU6050_DeviceDriverTest
    _MPU6050_DeviceDriverTest->_int2str
    _int2str->_reverse
=======
    _main->_MPU6050_Read
    _camInit->_regWrite
    _UART_send_string->_UART_send_char
    _MPU6050_Read->___awdiv
    _I2C_Master_Read->_I2C_Master_Wait
    _MPU6050_Init->_I2C_Master_Write
    _I2C_Master_Start->_I2C_Master_Wait
    _Init_QVGA->_regWrite
    _Init_OV7670->_regWrite
    _regWrite->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Restart->_I2C_Master_Wait
    _I2C_Master_Wait->_UART_send_char

Critical Paths under _main in BANK0

    _main->_MPU6050_Read
>>>>>>> parent of 9a4dca4... Int2Str Coversion

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 2     2      0    7033
                                             25 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
=======
 (0) _main                                                 3     3      0    5932
                                             14 BANK0      3     3      0
                           _ADC_Init
                           _ADC_Read
                    _I2C_Master_Init
                        _Init_OV7670
                          _Init_QVGA
>>>>>>> parent of 9a4dca4... Int2Str Coversion
                    _Initialize_UART
           _MPU6050_DeviceDriverTest
                       _MPU6050_Init
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         0     0      0      22
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _MPU6050_DeviceDriverTest                            13    13      0    5386
                                             12 BANK0     13    13      0
                       _MPU6050_Read
                   _UART_send_string
<<<<<<< HEAD
                            _int2str
 ---------------------------------------------------------------------------------
 (2) _int2str                                              9     6      3    2565
                                             11 COMMON     3     0      3
                                              6 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              9     9      0     419
                                              8 COMMON     3     3      0
                                              0 BANK0      6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     3     1      2    1603
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read                                         7     7      0     719
                                              9 COMMON     3     3      0
                                              0 BANK0      4     4      0
=======
                            _camInit
 ---------------------------------------------------------------------------------
 (1) _camInit                                              2     2      0    1616
                                              6 COMMON     2     2      0
                           _regWrite
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     3     1      2     173
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read                                        19    17      2     778
                                              9 COMMON     5     3      2
                                              0 BANK0     14    14      0
>>>>>>> parent of 9a4dca4... Int2Str Coversion
                    _I2C_Master_Read
                 _I2C_Master_Restart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) ___awdiv                                              9     5      4     556
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Restart                                   0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
=======
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     3      2      45
                                              3 COMMON     5     3      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         0     0      0      88
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0      22
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_QVGA                                            1     1      0    1616
                                              6 COMMON     1     1      0
                           _regWrite
 ---------------------------------------------------------------------------------
 (1) _Init_OV7670                                          2     2      0    1616
                                              6 COMMON     2     2      0
                           _regWrite
 ---------------------------------------------------------------------------------
 (2) _regWrite                                             2     1      1    1616
                                              4 COMMON     2     1      1
                 _I2C_Master_Restart
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      44
                                              3 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0      22
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Restart                                   0     0      0      22
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      2     2      0      22
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (5) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
>>>>>>> parent of 9a4dca4... Int2Str Coversion
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 Estimated maximum stack depth 4
=======
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
>>>>>>> parent of 9a4dca4... Int2Str Coversion
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
<<<<<<< HEAD
   _I2C_Master_Init
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
=======
   _ADC_Init
   _ADC_Read
   _I2C_Master_Init
   _Init_OV7670
     _regWrite
       _I2C_Master_Restart
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Stop
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Write
         _I2C_Master_Wait
           _UART_send_char
   _Init_QVGA
     _regWrite
       _I2C_Master_Restart
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Stop
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Write
         _I2C_Master_Wait
           _UART_send_char
>>>>>>> parent of 9a4dca4... Int2Str Coversion
   _Initialize_UART
   _MPU6050_DeviceDriverTest
     _MPU6050_Read
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Restart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       ___awdiv
     _UART_send_string
       _UART_send_char
     _int2str
       ___awdiv
       ___awmod
       _reverse
         _strlen
   _MPU6050_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _UART_send_string
     _UART_send_char
<<<<<<< HEAD
=======
   _camInit
     _regWrite
       _I2C_Master_Restart
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Stop
         _I2C_Master_Wait
           _UART_send_char
       _I2C_Master_Write
         _I2C_Master_Wait
           _UART_send_char
>>>>>>> parent of 9a4dca4... Int2Str Coversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
<<<<<<< HEAD
BANK0               50     1B      1B       5       33.8%
=======
BANK0               50     11      11       5       21.3%
>>>>>>> parent of 9a4dca4... Int2Str Coversion
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
<<<<<<< HEAD
Symbol Table                                                                                   Tue Apr 24 16:24:12 2018

 __end_of_MPU6050_DeviceDriverTest 07FD                                 l32 03F8  
                     ___awdiv@sign 0076        __size_of_I2C_Master_Restart 0005  
                              l107 0401                                l163 04A6  
                              l911 0588                                l831 0452  
                              l921 05A3                                l833 045D  
                              l925 05AB                                l917 059A  
                              l909 057C                                l941 04E2  
                              l951 04F4                                l865 044B  
                              l937 04DB                                l963 0511  
                              l955 0500                                l883 0525  
                              l893 0569                                l949 04E8  
                              l959 0509                                l983 05BC  
                              l977 0420                                l985 05BE  
                              l899 0574                                l995 0605  
                              u415 057F                                _PEN 10B2  
                              u435 0589                                u515 04EB  
                              u445 0593                                u455 059B  
                              u535 04FA                                u375 052F  
                              u545 0501                                u617 04C2  
                              u627 07F5                                _SEN 10B0  
                              u595 05F2                                _RX9 0CEE  
                              _TX9 0CF6                       ___awmod@sign 0076  
               MPU6050_Read@Sensor 0023                                wreg 0009  
                             STR_1 0838                               STR_2 081C  
                             STR_3 0858                               STR_4 081A  
                             STR_5 0863                               STR_6 081A  
                             STR_7 086E                               STR_8 081A  
                             STR_9 0879                               _BRGH 0CF2  
                             _CREN 0CEC                               _RCEN 10B3  
                             _RCIF 008D                               _OERR 0CE9  
                             _SPEN 0CEF                               _RSEN 10B1  
                             _TXEN 0CF5                               _TXIF 008C  
                             _SYNC 0CF4                               _main 049D  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                               start 0002  
        __size_of_UART_send_string 0014                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                        int2str@sign 0028  
            I2C_Master_Read@device 0071                              ?_main 0070  
                            _ACKEN 10B4                              _ACKDT 10B5  
                  __end_of___awdiv 05B0                              STR_10 081A  
                            STR_11 0883                              STR_12 081A  
                            STR_13 088D                              STR_14 081A  
                            STR_15 0849                              STR_16 081A  
                            STR_17 0800                    __end_of___awmod 0516  
                  ___awdiv@divisor 0070                    ___awdiv@counter 0075  
                            _RCREG 0199                              _SPBRG 019B  
                            _TXREG 019A                    __end_of_int2str 0610  
                    ?_MPU6050_Init 0070                      ?_MPU6050_Read 0070  
                  __end_of_reverse 055F                              status 0003  
                            wtemp0 007E                    __initialization 07FD  
                     __end_of_main 04D1                             ??_main 0039  
         _MPU6050_DeviceDriverTest 06DA                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                     ??_MPU6050_Init 0071  
                   ??_MPU6050_Read 0079                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0070                   ___awdiv@dividend 0072  
                           _SSPADD 0212                             _TRISC3 0473  
                           _TRISC4 0474                             _TRISC6 0476  
                           _TRISC7 0477                             _SSPBUF 0211  
                        ??___awdiv 0074                          ??___awmod 0074  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075                             _strlen 044D  
                        ??_int2str 0026                          ??_reverse 0078  
          __end_of__initialization 07FD                     __pcstackCOMMON 0070  
                 _UART_send_string 0420           __size_of_Initialize_UART 000E  
                       __pmaintext 049D               __end_of_MPU6050_Init 049D  
             __end_of_MPU6050_Read 06DA         __end_of_I2C_Master_Restart 03E7  
                          ?_strlen 0070              MPU6050_Read@value_low 0022  
          __size_of_UART_send_char 0008                            _SSPCON1 0215  
                          _SSPCON2 0216                            _SSPSTAT 0214  
       ??_MPU6050_DeviceDriverTest 002C                            ___awdiv 055F  
                          ___awmod 04D1                            __ptext1 0471  
                          __ptext2 06DA                            __ptext3 05B0  
                          __ptext4 0516                            __ptext5 044D  
                          __ptext6 04D1                            __ptext7 0420  
                          __ptext8 0400                            __ptext9 0610  
                          _int2str 05B0                    __size_of_strlen 0024  
                ??_Initialize_UART 0070                   ___awmod@dividend 0072  
         __size_of_I2C_Master_Init 000A           __size_of_I2C_Master_Read 0019  
         __size_of_I2C_Master_Wait 0008                            _reverse 0516  
         __size_of_I2C_Master_Stop 0005               end_of_initialization 07FD  
        __size_of_I2C_Master_Start 0005          __size_of_I2C_Master_Write 0007  
                          strlen@s 0076                   __CFG_FOSC$INTOSC 0000  
         __end_of_UART_send_string 0434              __size_of_MPU6050_Init 002C  
            __size_of_MPU6050_Read 00CA                     __end_of_strlen 0471  
              start_initialization 07FD                     _UART_send_char 0400  
                     _MPU6050_Init 0471                       _MPU6050_Read 0610  
                ??_I2C_Master_Init 0070                  ??_I2C_Master_Read 0070  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
                         ??_strlen 0072             __end_of_UART_send_char 0408  
                        ___latbits 0003                 _I2C_Master_Restart 03E2  
                    __pcstackBANK0 0020    MPU6050_DeviceDriverTest@TestRun 0038  
              ?_I2C_Master_Restart 0070                   _I2C_Master_Start 03E7  
                 _I2C_Master_Write 03F1                    _Initialize_UART 0412  
                         ?___awdiv 0070                           ?___awmod 0070  
             ??_I2C_Master_Restart 0070                   UART_send_char@bt 0070  
                         ?_int2str 007B                    ?_UART_send_char 0070  
                         ?_reverse 0070             MPU6050_Read@value_high 0020  
            UART_send_string@st_pt 0071  __size_of_MPU6050_DeviceDriverTest 0123  
        ?_MPU6050_DeviceDriverTest 0070                I2C_Master_Read@temp 0072  
                ?_UART_send_string 0071                 ??_UART_send_string 0073  
          __end_of_Initialize_UART 0420                   __size_of___awdiv 0051  
                 __size_of___awmod 0045        MPU6050_DeviceDriverTest@buf 002E  
                 __size_of_int2str 0060                    _I2C_Master_Init 0408  
                  _I2C_Master_Read 0434                    _I2C_Master_Wait 03F8  
                  _I2C_Master_Stop 03EC                           __ptext10 055F  
                         __ptext11 03F1                           __ptext12 03EC  
                         __ptext13 03E7                           __ptext14 03E2  
                         __ptext15 0434                           __ptext16 03F8  
                         __ptext17 0412                           __ptext18 0408  
                 __size_of_reverse 0049                      __size_of_main 0034  
                         int2str@i 002A                           int2str@n 007B  
                         int2str@s 007D           __end_of_I2C_Master_Start 03EC  
         __end_of_I2C_Master_Write 03F8                     __pstringtext10 088D  
                   __pstringtext11 0000                   ?_Initialize_UART 0070  
                         reverse@c 0020                           reverse@i 0021  
                         reverse@j 0023                           reverse@s 0025  
                 ??_UART_send_char 0070            __end_of_I2C_Master_Init 0412  
          __end_of_I2C_Master_Read 044D            __end_of_I2C_Master_Wait 0400  
          __end_of_I2C_Master_Stop 03F1                      __pstringtext1 0800  
                    __pstringtext2 081C                      __pstringtext3 0838  
                    __pstringtext4 0849                      __pstringtext5 0858  
                    __pstringtext6 0863                      __pstringtext7 086E  
                    __pstringtext8 0879                      __pstringtext9 0883  
                I2C_Master_Write@d 0070                           strlen@cp 0077  
=======
Symbol Table                                                                                   Wed Apr 11 16:09:00 2018

               ___awdiv@sign 0076  __size_of_I2C_Master_Restart 0005                          l237 04D5  
                        l275 050A                          l980 054F                          l982 0567  
                        l976 0552                          _PEN 10B2                          u355 062E  
                        u517 06B5                          u375 0638                          u527 0571  
                        u385 0642                          u537 0585                          u547 06CA  
                        u395 064A                          _SEN 10B0                          u557 055F  
                        u567 0503                          _RX9 0CEE                          _TX9 0CF6  
         MPU6050_Read@Sensor 0020                          wreg 0009                         l1022 0618  
                       l1040 0637                         l1050 0652                         l1202 069D  
                       l1028 0623                         l1054 065A                         l1046 0649  
                       l1038 062B                         l1148 0524                         l1192 0688  
                       STR_1 0AD0                         STR_2 0ADC                         _BRGH 0CF2  
                       _CREN 0CEC                         _LATB 010D                         _RCEN 10B3  
                       _RCIF 008D                         _OERR 0CE9                         _SPEN 0CEF  
                       _RSEN 10B1                         _TXEN 0CF5                         _TXIF 008C  
                       _SYNC 0CF4                ??_Init_OV7670 0076                         _main 065F  
                       fsr0h 0005                         indf0 0000                         fsr0l 0004  
                       btemp 007E             __end_of_ADC_Init 04E5             __end_of_ADC_Read 0511  
                       start 0002    __size_of_UART_send_string 0014             ?_I2C_Master_Init 0070  
           ?_I2C_Master_Read 0073             ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  
                      ?_main 0070              __end_of___awdiv 065F              ___awdiv@divisor 0070  
            __end_of_camInit 0592              ___awdiv@counter 0075                        _RCREG 0199  
                      _SPBRG 019B                        _TRISB 008D                        _TRISC 008E  
                      _TXREG 019A                ?_MPU6050_Init 0070                ?_MPU6050_Read 0079  
                      main@t 0030                        status 0003                        wtemp0 007E  
            __initialization 07FD          __end_of_Init_OV7670 0743                 __end_of_main 06BD  
                     ??_main 002E            ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070  
             ??_MPU6050_Init 0074               ??_MPU6050_Read 007B           ??_I2C_Master_Start 0073  
                     _ADCON0 009D                       _ADCON1 009E           ??_I2C_Master_Write 0073  
                     _ADRESH 009C                       _ADRESL 009B             ___awdiv@dividend 0072  
                     _ANSELA 018C                       _ANSELC 018E           __size_of_Init_QVGA 0050  
                     _SSPADD 0212                       _TRISA0 0460                       _TRISA1 0461  
                     _TRISA6 0466                       _TRISC3 0473                       _TRISC4 0474  
                     _TRISC6 0476                       _TRISC7 0477                       _SSPBUF 0211  
                  ??___awdiv 0074                    ??_camInit 0076             ___awdiv@quotient 0077  
           __end_of_regWrite 0524                    ?_ADC_Init 0070                    ?_ADC_Read 0070  
    __end_of__initialization 07FD                  _Init_OV7670 06BD               __pcstackCOMMON 0070  
                regWrite@reg 0075             _UART_send_string 0524     __size_of_Initialize_UART 000E  
          __end_of_Init_QVGA 060E                   ??_ADC_Init 0070                   ??_ADC_Read 0072  
                 __pmaintext 065F         __end_of_MPU6050_Init 05BE         __end_of_MPU6050_Read 07FD  
 __end_of_I2C_Master_Restart 04C3      __size_of_UART_send_char 0008                      _SSPCON1 0215  
                    _SSPCON2 0216                      _SSPSTAT 0214                    ?_regWrite 0074  
                    ___awdiv 060E                      _camInit 056C                      __ptext1 056C  
                    __ptext2 0524                      __ptext3 0743                      __ptext4 060E  
                    __ptext5 0538                      __ptext6 0592                      __ptext7 04C8  
                    __ptext8 04F0                      __ptext9 05BE            ??_Initialize_UART 0070  
   __size_of_I2C_Master_Init 000B     __size_of_I2C_Master_Read 0017     __size_of_I2C_Master_Wait 001D  
   __size_of_I2C_Master_Stop 0005         end_of_initialization 07FD                   ??_regWrite 0075  
  __size_of_I2C_Master_Start 0005    __size_of_I2C_Master_Write 0007             __CFG_CLKOUTEN$ON 0000  
                  _PORTAbits 000C                    _PORTCbits 000E             __CFG_FOSC$INTOSC 0000  
          __size_of_ADC_Init 0009            __size_of_ADC_Read 0013        __end_of_yuv422_ov7670 0AA8  
   __end_of_UART_send_string 0538                 ?_Init_OV7670 0070        __size_of_MPU6050_Init 002C  
      __size_of_MPU6050_Read 00BA                 regWrite@data 0074          _ov7670_default_regs 0800  
        start_initialization 07FD                    _Init_QVGA 05BE               _UART_send_char 04D4  
               _MPU6050_Init 0592                 _MPU6050_Read 0743            ??_I2C_Master_Init 0070  
          ??_I2C_Master_Read 0075            ??_I2C_Master_Wait 0071            ??_I2C_Master_Stop 0073  
     __end_of_UART_send_char 04DC                    ___latbits 0003           _I2C_Master_Restart 04BE  
                 ?_Init_QVGA 0070                __pcstackBANK0 0020          ?_I2C_Master_Restart 0070  
           _I2C_Master_Start 04C8             _I2C_Master_Write 04CD            __size_of_regWrite 0013  
            _Initialize_UART 04F0                     ?___awdiv 0070                     ?_camInit 0070  
       ??_I2C_Master_Restart 0073             UART_send_char@bt 0070              ?_UART_send_char 0070  
                   _ADC_Init 04DC                     _ADC_Read 04FE         __size_of_Init_OV7670 0086  
                   _GO_nDONE 04E9        UART_send_string@st_pt 0071                  ??_Init_QVGA 0076  
        I2C_Master_Read@temp 0077            ?_UART_send_string 0071           ??_UART_send_string 0073  
    __end_of_Initialize_UART 04FE             __size_of___awdiv 0051             __size_of_camInit 0026  
                 _ANSELAbits 018C              _I2C_Master_Init 04E5              _I2C_Master_Read 0538  
            _I2C_Master_Wait 054F              _I2C_Master_Stop 04C3                     __ptext10 06BD  
                   __ptext11 0511                     __ptext12 04CD                     __ptext13 04C3  
                   __ptext14 04BE                     __ptext15 054F                     __ptext16 04D4  
                   __ptext17 04E5                     __ptext18 04FE                     __ptext19 04DC  
              __size_of_main 005E          __end_of_qvga_ov7670 0AD0                     _regWrite 0511  
   __end_of_I2C_Master_Start 04CD     __end_of_I2C_Master_Write 04D4             ?_Initialize_UART 0070  
                 _OSCCONbits 0099             ??_UART_send_char 0070      __end_of_I2C_Master_Init 04F0  
    __end_of_I2C_Master_Read 054F      __end_of_I2C_Master_Wait 056C      __end_of_I2C_Master_Stop 04C8  
              __pstringtext1 0800                __pstringtext2 0A74                __pstringtext3 0AA8  
              __pstringtext4 0ADC                __pstringtext5 0000            I2C_Master_Write@d 0073  
__end_of_ov7670_default_regs 0A74                  _qvga_ov7670 0AA8                _yuv422_ov7670 0A74  
>>>>>>> parent of 9a4dca4... Int2Str Coversion
